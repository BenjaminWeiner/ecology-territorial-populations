(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    643770,      11291]
NotebookOptionsPosition[    638428,      11200]
NotebookOutlinePosition[    638920,      11220]
CellTagsIndexPosition[    638877,      11217]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Figure 4B", "Chapter",
 CellChangeTimes->{{3.696431272498796*^9, 3.6964312902729445`*^9}, {
  3.7263126270512238`*^9, 3.726312633699194*^9}, {3.7743716717056265`*^9, 
  3.7743716822397957`*^9}},ExpressionUUID->"4405b5b7-517a-4441-a0e2-\
326e3e9c3fb1"],

Cell["\<\
Evaluate notebook to generate the plots in Fig. 4B. See the minimal example \
code for a more pedagogically-oriented script with extensive comments.\
\>", "Text",
 CellChangeTimes->{{3.699625795718669*^9, 3.6996258129849253`*^9}, {
  3.7259130601672463`*^9, 3.725913135819366*^9}, {3.7263126369495277`*^9, 
  3.72631264881299*^9}, {3.774371687288207*^9, 3.7743717264812202`*^9}, {
  3.7743717955688877`*^9, 3.7743718300562525`*^9}, {3.7743719821679173`*^9, 
  3.774372024969197*^9}},ExpressionUUID->"cc925d2f-bfcb-4544-b8cb-\
720cd6781357"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"precision", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$MinPrecision", "=", "precision"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.696431379800573*^9, 3.6964314024072657`*^9}, 
   3.6964318430237055`*^9, {3.696432066995659*^9, 3.696432072303501*^9}, {
   3.6964321090285277`*^9, 3.696432226796074*^9}, {3.6964322778240547`*^9, 
   3.696432308495332*^9}, {3.6964323530760164`*^9, 3.6964323890254784`*^9}, {
   3.6964324230884905`*^9, 3.6964324240386524`*^9}, {3.69643253002863*^9, 
   3.6964325499984384`*^9}, {3.6964326035946712`*^9, 
   3.6964326392884035`*^9}, {3.696432853916314*^9, 3.6964328666199274`*^9}, {
   3.6965177884304504`*^9, 3.6965177895319643`*^9}, {3.696517823889638*^9, 
   3.696517834483859*^9}, {3.6965192855173287`*^9, 3.696519360338045*^9}, {
   3.6965194564356976`*^9, 3.696519475258478*^9}, {3.696520746809131*^9, 
   3.6965207579836607`*^9}, {3.6965209232999334`*^9, 3.696520949858775*^9}, {
   3.6965215727299285`*^9, 3.696521578470927*^9}, {3.6965222091427402`*^9, 
   3.6965222348996396`*^9}, {3.696522313696311*^9, 3.696522316420933*^9}, {
   3.6965226540887933`*^9, 3.6965226722683954`*^9}, {3.6965228094412746`*^9, 
   3.696522814235177*^9}, {3.696524188512162*^9, 3.696524203133457*^9}, {
   3.696524495250393*^9, 3.696524514526902*^9}, {3.696525579089058*^9, 
   3.696525603222149*^9}, 3.696536894355582*^9, 3.6965369479845066`*^9, {
   3.696537347447075*^9, 3.696537362679701*^9}, {3.6965374705035877`*^9, 
   3.696537470887909*^9}, {3.696538409473699*^9, 3.6965384380193253`*^9}, {
   3.6965393970398755`*^9, 3.696539404750087*^9}, 3.6965403310325503`*^9, {
   3.696594481879648*^9, 3.696594488671978*^9}, 3.696595595222438*^9, {
   3.696596132890281*^9, 3.696596146239934*^9}, {3.696604415907234*^9, 
   3.696604426289025*^9}, {3.6966046192785697`*^9, 3.696604620327175*^9}, {
   3.696604824282224*^9, 3.6966048252525024`*^9}, {3.696604929377144*^9, 
   3.696604951263418*^9}, {3.696605013207247*^9, 3.6966050181283607`*^9}, {
   3.6966055347435884`*^9, 3.6966055545992403`*^9}, {3.69660583645853*^9, 
   3.6966058365585923`*^9}, 3.6966060979477882`*^9, 3.6966062084761443`*^9, {
   3.69662773907633*^9, 3.6966277396239448`*^9}, {3.696627843177363*^9, 
   3.6966278479978046`*^9}, 3.6966279401730027`*^9, {3.696628570220047*^9, 
   3.696628570367005*^9}, {3.6966290750305047`*^9, 3.6966290751930113`*^9}, {
   3.696629194560113*^9, 3.6966291952643414`*^9}, {3.6966293326975794`*^9, 
   3.696629332835054*^9}, {3.696629587559392*^9, 3.6966295928976803`*^9}, {
   3.696629623990044*^9, 3.6966296286746683`*^9}, 3.6966298723758*^9, 
   3.6966301060946546`*^9, {3.696630636784259*^9, 3.6966306494832582`*^9}, {
   3.6966310496043806`*^9, 3.696631051849594*^9}, {3.696637544652503*^9, 
   3.6966375511945667`*^9}, {3.6966380869642453`*^9, 3.696638102938513*^9}, {
   3.6966391460520754`*^9, 3.696639147461814*^9}, {3.6966393662549257`*^9, 
   3.6966393738266897`*^9}, {3.6966398210139093`*^9, 
   3.6966398274107666`*^9}, {3.6966780566412706`*^9, 3.696678060996866*^9}, {
   3.6966785875236483`*^9, 3.696678599103738*^9}, {3.696691506179389*^9, 
   3.696691526339473*^9}, {3.696691645509326*^9, 3.6966916460936575`*^9}, {
   3.696691714915414*^9, 3.696691717333003*^9}, {3.696692337363139*^9, 
   3.696692407911121*^9}, {3.6966948367719917`*^9, 3.696694862075029*^9}, {
   3.6966978440614057`*^9, 3.696697845815757*^9}, {3.696698507519908*^9, 
   3.696698509684249*^9}, {3.6969411356375017`*^9, 3.696941197386344*^9}, {
   3.696942459537554*^9, 3.696942475103798*^9}, {3.6969425208665686`*^9, 
   3.6969425209359627`*^9}, {3.6969426093642874`*^9, 
   3.6969426100336437`*^9}, {3.6969433666333723`*^9, 3.696943385122076*^9}, {
   3.696943725518491*^9, 3.6969437551165934`*^9}, 3.6969455151938596`*^9, {
   3.696945574816248*^9, 3.696945598562473*^9}, 3.696945813488861*^9, {
   3.6969460448942213`*^9, 3.696946062330598*^9}, {3.6969541914601965`*^9, 
   3.6969542079020643`*^9}, {3.6969542444553137`*^9, 3.696954252143852*^9}, {
   3.6969556923279915`*^9, 3.696955695701967*^9}, {3.696955798366539*^9, 
   3.6969558045203295`*^9}, {3.6969572702054853`*^9, 3.696957271607134*^9}, {
   3.696958610991163*^9, 3.696958616697832*^9}, 3.696959033656666*^9, {
   3.696959339961546*^9, 3.696959349602078*^9}, {3.6969595087413483`*^9, 
   3.696959518104562*^9}, 3.6969596251885366`*^9, {3.696960173679598*^9, 
   3.696960173795432*^9}, {3.696960290959776*^9, 3.696960292012418*^9}, {
   3.6969603786661963`*^9, 3.6969603863094354`*^9}, {3.6969606655163918`*^9, 
   3.6969606693228426`*^9}, {3.696961005595925*^9, 3.696961016568672*^9}, {
   3.696961074296872*^9, 3.696961079793904*^9}, {3.6969611127399797`*^9, 
   3.696961113486968*^9}, {3.6969612360447073`*^9, 3.696961236897716*^9}, {
   3.6969614912404428`*^9, 3.6969615174102473`*^9}, {3.6969616104107447`*^9, 
   3.696961610513856*^9}, {3.6970335114856157`*^9, 3.6970335184408717`*^9}, {
   3.697033741109671*^9, 3.6970337785802336`*^9}, {3.6970344261406517`*^9, 
   3.6970344263490953`*^9}, {3.6970344611783886`*^9, 
   3.6970344613160253`*^9}, {3.6970348047141175`*^9, 
   3.6970348383937798`*^9}, {3.6970350899518986`*^9, 3.697035116614049*^9}, {
   3.697035361353411*^9, 3.6970353673762608`*^9}, {3.6970360155246468`*^9, 
   3.6970360162928376`*^9}, {3.697127239244128*^9, 3.697127256565174*^9}, {
   3.6971273073760605`*^9, 3.6971273181995764`*^9}, {3.6981593851212344`*^9, 
   3.698159404809044*^9}, {3.6982513343660297`*^9, 3.698251350717641*^9}, {
   3.6982529093979692`*^9, 3.698252910467985*^9}, {3.6996525614500933`*^9, 
   3.6996526044937973`*^9}, {3.6999750079388037`*^9, 
   3.6999750082075157`*^9}, {3.7006645476267185`*^9, 3.7006645593546247`*^9}, 
   3.700908331754274*^9, 3.7009481472625875`*^9, {3.7009974349655695`*^9, 
   3.7009974356437087`*^9}, {3.7009975027255*^9, 3.7009975098481426`*^9}, {
   3.7009975693504515`*^9, 3.700997573732483*^9}, {3.700997715925781*^9, 
   3.700997717660078*^9}, {3.7010007078714113`*^9, 3.7010007079874487`*^9}, {
   3.701006331274064*^9, 3.7010063384549313`*^9}, {3.7010063978387337`*^9, 
   3.701006397976267*^9}, {3.7010079594942226`*^9, 3.701007985488051*^9}, {
   3.7010339421022243`*^9, 3.7010339424178624`*^9}, {3.7010341427344933`*^9, 
   3.701034155995103*^9}, {3.7011142435591335`*^9, 3.701114243775323*^9}, {
   3.7011748149520583`*^9, 3.7011748238001204`*^9}, {3.7011926700973315`*^9, 
   3.701192680554743*^9}, {3.7017907878135633`*^9, 3.7017908134470277`*^9}, {
   3.7028139034312153`*^9, 3.7028139056033196`*^9}, {3.7028145213973927`*^9, 
   3.7028145214287324`*^9}, {3.702821119991602*^9, 3.7028211231638145`*^9}, {
   3.702821161027216*^9, 3.702821161261633*^9}, {3.702821193530671*^9, 
   3.702821193624267*^9}, {3.702821277992818*^9, 3.702821278289719*^9}, {
   3.702852191679839*^9, 3.702852191851712*^9}, {3.7029223266262083`*^9, 
   3.7029223267043295`*^9}, {3.702922368430129*^9, 3.7029223686801577`*^9}, {
   3.7029224098938613`*^9, 3.7029224100034094`*^9}, 3.7029226916333456`*^9, 
   3.702922736320088*^9, {3.713632175572114*^9, 3.713632175625284*^9}, {
   3.713632256008278*^9, 3.713632256061261*^9}, {3.726232484947651*^9, 
   3.7262324850257063`*^9}, {3.7262326061335187`*^9, 3.726232606383544*^9}, {
   3.7276330790909696`*^9, 3.7276331033580656`*^9}, {3.727633305180869*^9, 
   3.7276333085066967`*^9}, 3.732974246018123*^9, 3.7331592266988573`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"1207e16d-fe65-432b-b908-cebdaa76fa37"],

Cell[CellGroupData[{

Cell["Statics", "Subsection",
 CellChangeTimes->{{3.707475504621004*^9, 
  3.707475505808649*^9}},ExpressionUUID->"2227cf08-9eab-4744-9711-\
6305ca33d733"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getPositions", "[", "pop0_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m0", ",", "list", ",", "extendedPop"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m0", "=", 
        RowBox[{"Length", "[", "pop0", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"extendedPop", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", "pop0"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"extendedPop", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", 
               RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"Total", "[", 
            RowBox[{"extendedPop", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"m0", "+", "1"}]}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getConcentration", "[", 
     RowBox[{"n_", ",", "nutrient_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "m0", ",", "c", ",", "dc", ",", "m", ",", "cSys", ",", 
        "cSysWrap", ",", "cSystem", ",", "dcSys", ",", "dcSysWrap", ",", 
        "dcSystem", ",", "totalcSys", ",", "vars", ",", "aVars", ",", "bVars",
         ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m0", "=", 
        RowBox[{"Length", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"aVars", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\"\<a\>\"", "<>", 
            RowBox[{"IntegerString", "[", "k", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "m0"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bVars", "=", 
        RowBox[{"ToExpression", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"\"\<b\>\"", "<>", 
            RowBox[{"IntegerString", "[", "k", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "m0"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "[", 
         RowBox[{"a_", ",", "b_", ",", "\[Alpha]_", ",", "\[Theta]_"}], "]"}],
         ":=", 
        RowBox[{
         RowBox[{"a", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"\[Alpha]", "/", "d"}], "]"}], "*", "\[Theta]"}], 
            ")"}]}]}], "+", 
         RowBox[{"b", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"\[Alpha]", "/", "d"}], "]"}]}], "*", "\[Theta]"}], 
            ")"}]}]}], "+", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "nutrient", "]"}], "]"}], "/", "\[Alpha]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"dc", "[", 
         RowBox[{"a_", ",", "b_", ",", "\[Alpha]_", ",", "\[Theta]_"}], "]"}],
         ":=", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"\[Alpha]", "/", "d"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"\[Alpha]", "/", "d"}], "]"}], "*", "\[Theta]"}], 
              ")"}]}]}], "-", 
           RowBox[{"b", "*", 
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"\[Alpha]", "/", "d"}], "]"}]}], "*", "\[Theta]"}], 
              ")"}]}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "  ", 
        RowBox[{
        "Create", " ", "a", " ", "system", " ", "of", " ", "eqs", " ", "for", 
         " ", "c", 
         RowBox[{"(", "\[Theta]", ")"}], " ", "in", " ", "each", " ", 
         "region"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"cSys", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{
             RowBox[{"aVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"bVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "nutrient"}], "]"}], "]"}], ",", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "==", 
           RowBox[{"c", "[", 
            RowBox[{
             RowBox[{"aVars", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"bVars", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "nutrient"}], "]"}], "]"}], ",",
              "0"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"m0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cSysWrap", "=", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{
           RowBox[{"aVars", "[", 
            RowBox[{"[", "m0", "]"}], "]"}], ",", 
           RowBox[{"bVars", "[", 
            RowBox[{"[", "m0", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"m0", ",", "nutrient"}], "]"}], "]"}], ",", 
           RowBox[{"n", "[", 
            RowBox[{"[", "m0", "]"}], "]"}]}], "]"}], "==", 
         RowBox[{"c", "[", 
          RowBox[{
           RowBox[{"aVars", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"bVars", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "nutrient"}], "]"}], "]"}], ",", "0"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cSystem", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"cSys", ",", 
          RowBox[{"{", "cSysWrap", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "do", " ", "the", " ", "same", " ", "thing", " ", "for", " ", "the", 
         " ", "derivatives", " ", "of", " ", "c", 
         RowBox[{"(", "\[Theta]", ")"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dcSys", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"dc", "[", 
            RowBox[{
             RowBox[{"aVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"bVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "nutrient"}], "]"}], "]"}], ",", 
             RowBox[{"n", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "\[Equal]", 
           RowBox[{"dc", "[", 
            RowBox[{
             RowBox[{"aVars", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"bVars", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"\[Alpha]", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "nutrient"}], "]"}], "]"}], ",",
              "0"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"m0", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dcSysWrap", "=", 
        RowBox[{
         RowBox[{"dc", "[", 
          RowBox[{
           RowBox[{"aVars", "[", 
            RowBox[{"[", "m0", "]"}], "]"}], ",", 
           RowBox[{"bVars", "[", 
            RowBox[{"[", "m0", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"m0", ",", "nutrient"}], "]"}], "]"}], ",", 
           RowBox[{"n", "[", 
            RowBox[{"[", "m0", "]"}], "]"}]}], "]"}], "\[Equal]", 
         RowBox[{"dc", "[", 
          RowBox[{
           RowBox[{"aVars", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"bVars", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "nutrient"}], "]"}], "]"}], ",", "0"}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dcSystem", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"dcSys", ",", 
          RowBox[{"{", "dcSysWrap", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"totalcSys", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"cSystem", ",", "dcSystem"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vars", "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"aVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"bVars", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "m0"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"z", ",", "m"}], "}"}], "=", 
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{"totalcSys", ",", "vars"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearSolve", "[", 
        RowBox[{"m", ",", 
         RowBox[{"-", "z"}]}], "]"}]}]}], "  ", "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"returns", " ", 
      RowBox[{"{", 
       RowBox[{"a1", ",", "b1", ",", "a2", ",", 
        RowBox[{"b2", "..."}]}], "}"}]}], ":", " ", 
     RowBox[{"in", " ", "a", " ", "region", " ", "\[Sigma]", " ", "c_i"}]}], 
    "=", 
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"a", "*", 
         RowBox[{"\[Theta]", "/", "d"}]}], ")"}]}]}], "+", 
     RowBox[{"b", "*", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "a"}], "*", 
         RowBox[{"\[Theta]", "/", "d"}]}], ")"}]}]}], "+", 
     RowBox[{"si", "/", 
      RowBox[{"\[Alpha]i", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fullConcentration", "[", 
    RowBox[{"n_", ",", "nutrient_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "coeff", ",", "positions", ",", "pieces", 
       ",", "conditions", ",", "fullC"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"coeff", "=", 
       RowBox[{"getConcentration", "[", 
        RowBox[{"n", ",", "nutrient"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"positions", "=", 
       RowBox[{"getPositions", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"coeff", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"2", "*", "i"}], "-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "m"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"coeff", "[", 
          RowBox[{"[", 
           RowBox[{"2", "*", "i"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "m"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", 
        RowBox[{"a_", ",", "b_", ",", "\[Alpha]_", ",", "\[Theta]_"}], "]"}], 
       ":=", 
       RowBox[{
        RowBox[{"a", "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Alpha]", "/", "d"}], "]"}], "*", "\[Theta]"}], 
           ")"}]}]}], "+", 
        RowBox[{"b", "*", 
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"\[Alpha]", "/", "d"}], "]"}]}], "*", "\[Theta]"}], 
           ")"}]}]}], "+", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"[", "nutrient", "]"}], "]"}], "/", "\[Alpha]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pieces", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{
           RowBox[{"a", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"b", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "nutrient"}], "]"}], "]"}], ",", 
           RowBox[{"theta", "-", 
            RowBox[{"positions", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "m"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"conditions", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"positions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "<", "theta", "<=", 
          RowBox[{"positions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "m"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fullC", "=", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"pieces", ",", "conditions"}], "}"}], "]"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7074825413840337`*^9, 3.707482555547816*^9}, {
   3.7074838175602045`*^9, 3.7074838233265953`*^9}, {3.7074838645429544`*^9, 
   3.707483879555735*^9}, {3.707484418421773*^9, 3.707484423728739*^9}, {
   3.7074846311365633`*^9, 3.7074846379183874`*^9}, {3.707485116339763*^9, 
   3.7074851201357455`*^9}, {3.7074852153269997`*^9, 
   3.7074852216602783`*^9}, {3.7255752143366055`*^9, 3.7255752504620886`*^9}, 
   3.725652746668275*^9, 3.7256528194718027`*^9, {3.7256608044786997`*^9, 
   3.725660816255563*^9}, {3.725660866071517*^9, 3.7256609167893567`*^9}, {
   3.7256609576935716`*^9, 3.7256610245095577`*^9}, {3.725661162771232*^9, 
   3.725661262456598*^9}, {3.7256612997870684`*^9, 3.7256613190384583`*^9}, {
   3.7256613956158323`*^9, 3.7256614096322966`*^9}, {3.72566178751818*^9, 
   3.725661797508412*^9}, {3.725662143117152*^9, 3.7256621889164443`*^9}, {
   3.7256622773136635`*^9, 3.7256623001779704`*^9}, {3.725662475304827*^9, 
   3.7256625445081315`*^9}, {3.7256626498972654`*^9, 3.725662653220956*^9}, {
   3.725662869368046*^9, 3.725662872007134*^9}, {3.7256629321633053`*^9, 
   3.72566309442342*^9}, {3.7256632018494067`*^9, 3.7256632610857644`*^9}, {
   3.72566329994473*^9, 3.7256633008036366`*^9}, {3.7256633591797495`*^9, 
   3.7256633636012936`*^9}, {3.725663520820182*^9, 3.7256635232726593`*^9}, {
   3.7256637725192747`*^9, 3.725663999711353*^9}, {3.7256646887583513`*^9, 
   3.725664711586318*^9}, {3.725664749976631*^9, 3.7256648246646447`*^9}, {
   3.7256656108904057`*^9, 3.7256656116756334`*^9}, {3.725665879368424*^9, 
   3.7256659098524427`*^9}, {3.7256707879475374`*^9, 
   3.7256708066699114`*^9}, {3.7256709754691267`*^9, 
   3.7256709755478477`*^9}, {3.7256720817754183`*^9, 
   3.7256720824004817`*^9}, {3.725672858332389*^9, 3.725672861010508*^9}, {
   3.725672920312142*^9, 3.7256729212887726`*^9}, 3.725672988193612*^9, {
   3.725673873785909*^9, 3.7256738738460636`*^9}, {3.725674644885081*^9, 
   3.725674742252947*^9}, {3.7256748183252344`*^9, 3.7256748449008923`*^9}, {
   3.725675084227127*^9, 3.7256750895853395`*^9}, 3.7256754460187693`*^9, {
   3.725675743237745*^9, 3.725675745613817*^9}, 3.7257235514720025`*^9, {
   3.7258015893387055`*^9, 3.7258015946362915`*^9}, {3.725921316545022*^9, 
   3.7259213171061144`*^9}, 3.726313111206411*^9, {3.7263131799625807`*^9, 
   3.7263132056292996`*^9}, {3.726313352016542*^9, 3.726313359661414*^9}, {
   3.726313399413915*^9, 3.7263134458527265`*^9}, {3.726313632980955*^9, 
   3.7263136722883453`*^9}, {3.726313795234081*^9, 3.7263138594151964`*^9}, {
   3.726314584651007*^9, 3.726314599938589*^9}, {3.72631490414935*^9, 
   3.7263149139073973`*^9}, {3.72763124053618*^9, 3.7276312946238174`*^9}, {
   3.7276333398790216`*^9, 3.7276333790464983`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e4891087-d4a7-4114-ad8a-cdee469f93ac"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define some constants", "Subsection",
 CellChangeTimes->{{3.6970359862114453`*^9, 3.697035995149681*^9}, {
  3.6970360375016403`*^9, 3.6970360413486853`*^9}, {3.700058513622113*^9, 
  3.700058517943403*^9}},ExpressionUUID->"d6ebf84f-0fe1-49cf-b492-\
4feee81b2620"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"supply", "=", "1"}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "nutrient", " ", "supply"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", "supply"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "=", "25"}], ";"}], "             ", 
  RowBox[{"(*", " ", 
   RowBox[{"total", " ", "enzyme", " ", "budget"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"steps", "=", "1000"}], ";"}]}], "Input",
 CellChangeTimes->{{3.697036003317241*^9, 3.6970360050404153`*^9}, {
   3.6970361257067647`*^9, 3.697036125954379*^9}, {3.697036440930212*^9, 
   3.69703645638844*^9}, {3.697037302639391*^9, 3.6970373123204017`*^9}, {
   3.6970507242243767`*^9, 3.6970507262175274`*^9}, {3.697055154897043*^9, 
   3.6970551560591965`*^9}, {3.697118825449203*^9, 3.6971188258116217`*^9}, {
   3.697128454003417*^9, 3.6971284577137637`*^9}, {3.698168478716077*^9, 
   3.6981684824539857`*^9}, {3.698169447370621*^9, 3.6981694510535116`*^9}, {
   3.6981698812807*^9, 3.69816988409868*^9}, {3.6981710321098948`*^9, 
   3.6981710371321816`*^9}, {3.6981713914386168`*^9, 3.698171395990609*^9}, {
   3.6981714776687984`*^9, 3.6981714971336193`*^9}, {3.698251047292657*^9, 
   3.698251049972903*^9}, {3.6982510879537983`*^9, 3.698251089939497*^9}, {
   3.6982530586430435`*^9, 3.6982530636043806`*^9}, {3.6993658717549124`*^9, 
   3.6993658749278793`*^9}, {3.6993663164470606`*^9, 
   3.6993663182337265`*^9}, {3.6993721197096524`*^9, 
   3.6993721226129017`*^9}, {3.699373524516584*^9, 3.6993735272124867`*^9}, {
   3.6993964443015738`*^9, 3.699396447245603*^9}, {3.6993972143248796`*^9, 
   3.6993972163956175`*^9}, {3.699440814003462*^9, 3.6994408199424906`*^9}, {
   3.699446246945038*^9, 3.6994462527369514`*^9}, {3.6994470530445576`*^9, 
   3.699447053507271*^9}, {3.699447154302987*^9, 3.699447170971987*^9}, {
   3.699447298831275*^9, 3.6994473009487023`*^9}, {3.699449625313756*^9, 
   3.6994496603655157`*^9}, {3.699453801744172*^9, 3.6994538024768877`*^9}, {
   3.6994550104256067`*^9, 3.699455010779344*^9}, 3.699456901019549*^9, {
   3.699553964407193*^9, 3.6995539701720123`*^9}, {3.6995542181600122`*^9, 
   3.6995542193402023`*^9}, {3.699554547084464*^9, 3.699554559899356*^9}, {
   3.699566505733038*^9, 3.6995665074056063`*^9}, {3.6995665591584015`*^9, 
   3.699566559505181*^9}, {3.6995695858630896`*^9, 3.6995695864324875`*^9}, {
   3.699571301196702*^9, 3.699571305886142*^9}, 3.699571361347297*^9, {
   3.6995736551618567`*^9, 3.6995736605479116`*^9}, {3.699573768898692*^9, 
   3.6995737694555297`*^9}, {3.699612302538701*^9, 3.6996123363515077`*^9}, {
   3.6996124671420064`*^9, 3.699612467795125*^9}, {3.6996125152936516`*^9, 
   3.699612515330737*^9}, {3.6996125513276653`*^9, 3.699612552012285*^9}, {
   3.6996130615584097`*^9, 3.699613061611391*^9}, {3.6996133391784787`*^9, 
   3.6996133392408*^9}, {3.6996133887938814`*^9, 3.6996133888723297`*^9}, {
   3.6996258348162875`*^9, 3.699625862887531*^9}, {3.699625996328104*^9, 
   3.699626002678961*^9}, 3.6996324517256374`*^9, {3.6996329498160596`*^9, 
   3.699632972181456*^9}, 3.6996352816607103`*^9, 3.6996354622471333`*^9, 
   3.6996354947712965`*^9, 3.6996544830702677`*^9, {3.6996545671555414`*^9, 
   3.699654577282707*^9}, {3.699962189725032*^9, 3.699962190225335*^9}, {
   3.6999713016822577`*^9, 3.699971316489889*^9}, {3.699971795365285*^9, 
   3.699971797134596*^9}, {3.699972007660735*^9, 3.6999720086926155`*^9}, {
   3.699972096417343*^9, 3.6999720994208865`*^9}, {3.699972211773486*^9, 
   3.699972212281362*^9}, {3.699972244212758*^9, 3.6999722445597754`*^9}, {
   3.699972281768825*^9, 3.699972312070153*^9}, {3.69997235987883*^9, 
   3.699972361406088*^9}, {3.6999723952197905`*^9, 3.699972400945874*^9}, {
   3.6999727432144737`*^9, 3.699972743683963*^9}, {3.6999730674428167`*^9, 
   3.699973070029214*^9}, 3.699974884287904*^9, {3.699975383353013*^9, 
   3.6999753867382674`*^9}, 3.699976541846511*^9, {3.699976579971016*^9, 
   3.69997658635697*^9}, {3.699976631093182*^9, 3.699976662025007*^9}, {
   3.699976751777618*^9, 3.6999767520241213`*^9}, {3.6999773804800844`*^9, 
   3.699977381912174*^9}, {3.700049659562945*^9, 3.700049664506611*^9}, {
   3.7000498643826003`*^9, 3.7000498657994566`*^9}, {3.700057357528302*^9, 
   3.700057364864167*^9}, {3.700058477028633*^9, 3.700058522819972*^9}, {
   3.700058675118908*^9, 3.70005871788548*^9}, 3.7003339777495146`*^9, 
   3.700651475266257*^9, 3.7006515301505165`*^9, {3.70065601222486*^9, 
   3.7006560250335164`*^9}, {3.7006564106070127`*^9, 
   3.7006564281568074`*^9}, {3.7006566017618055`*^9, 3.7006566039963055`*^9}, 
   3.7009085414844975`*^9, 3.701001737770876*^9, {3.701564534345542*^9, 
   3.701564537158204*^9}, {3.701599549607532*^9, 3.701599551029725*^9}, {
   3.7016005261817985`*^9, 3.701600526244336*^9}, {3.7016007764937024`*^9, 
   3.7016007773720455`*^9}, {3.7017735855660677`*^9, 3.7017735860193896`*^9}, 
   3.7017737022205524`*^9, {3.701786110793132*^9, 3.7017861112464657`*^9}, 
   3.701788921997776*^9, {3.7017925086566267`*^9, 3.701792509197062*^9}, {
   3.701793704395212*^9, 3.7017937053226786`*^9}, {3.7020315229131427`*^9, 
   3.7020315229912653`*^9}, {3.7020321531881433`*^9, 3.702032154187046*^9}, {
   3.7020325102222414`*^9, 3.7020325127539806`*^9}, {3.7020328326652975`*^9, 
   3.7020328339308715`*^9}, {3.702033147121477*^9, 3.7020331522782936`*^9}, {
   3.702033497350094*^9, 3.702033522693539*^9}, {3.7020335590998907`*^9, 
   3.7020335592405233`*^9}, {3.702033851200451*^9, 3.702033854252754*^9}, {
   3.702054850309044*^9, 3.702054850840373*^9}, {3.70205546090345*^9, 
   3.7020554697787123`*^9}, {3.702120583806003*^9, 3.702120584953787*^9}, {
   3.702133472519328*^9, 3.702133472644326*^9}, {3.7021335122686057`*^9, 
   3.7021335132791843`*^9}, {3.7021406953101807`*^9, 
   3.7021406953883286`*^9}, {3.702157637258851*^9, 3.7021576391401587`*^9}, {
   3.702739223158681*^9, 3.702739224455714*^9}, {3.7027392899314423`*^9, 
   3.7027392906346455`*^9}, {3.702747303927847*^9, 3.702747304085672*^9}, {
   3.702748922490742*^9, 3.7027489237228484`*^9}, {3.702759325790595*^9, 
   3.70275935077761*^9}, {3.702760683274763*^9, 3.702760684445593*^9}, {
   3.7027680070682893`*^9, 3.7027680121156983`*^9}, {3.702769528859099*^9, 
   3.7027695297187448`*^9}, {3.7027696323847494`*^9, 
   3.7027696337755127`*^9}, {3.7027700290147*^9, 3.7027700294210014`*^9}, {
   3.70277101508643*^9, 3.7027710155550814`*^9}, {3.702813274639353*^9, 
   3.702813275108182*^9}, {3.7028133188999557`*^9, 3.702813319540643*^9}, {
   3.7028214229612303`*^9, 3.702821423070783*^9}, {3.7028522361451125`*^9, 
   3.7028522368014507`*^9}, {3.7028547237949533`*^9, 3.702854725265542*^9}, {
   3.7028593742099047`*^9, 3.702859375835058*^9}, {3.702859451124337*^9, 
   3.7028594525151167`*^9}, {3.702912235708605*^9, 3.7029122363180437`*^9}, {
   3.702912344956532*^9, 3.7029123451127925`*^9}, 3.7029125865257826`*^9, {
   3.7029211875549135`*^9, 3.702921187800399*^9}, {3.702921526925952*^9, 
   3.702921528144945*^9}, {3.7029400166588097`*^9, 3.702940017138683*^9}, {
   3.7029420895876503`*^9, 3.702942090206854*^9}, {3.702942199117424*^9, 
   3.7029421997670517`*^9}, {3.7031674601411524`*^9, 
   3.7031674608601694`*^9}, {3.7031681329625654`*^9, 3.703168134431467*^9}, {
   3.703196543201259*^9, 3.7031965504726048`*^9}, {3.703197109710092*^9, 
   3.703197110929158*^9}, {3.7032723989357333`*^9, 3.70327239962331*^9}, {
   3.7033742605431547`*^9, 3.7033742606175537`*^9}, {3.7034353087176113`*^9, 
   3.7034353096314363`*^9}, {3.70358523147233*^9, 3.703585231925517*^9}, {
   3.7041074351426563`*^9, 3.7041074359085407`*^9}, {3.704118089321489*^9, 
   3.7041180894308643`*^9}, {3.7041203118808413`*^9, 3.704120312981744*^9}, {
   3.7041216147414026`*^9, 3.7041216180856943`*^9}, {3.7043929741362486`*^9, 
   3.704392974776924*^9}, {3.704393675026535*^9, 3.7043936753390737`*^9}, {
   3.7043940991423044`*^9, 3.7043941001428823`*^9}, 3.7043948181556034`*^9, 
   3.7045575823961177`*^9, {3.7045576749967747`*^9, 3.7045576765750513`*^9}, 
   3.7045581162435503`*^9, {3.704901428960699*^9, 3.7049014319766507`*^9}, {
   3.706541226825553*^9, 3.7065412282007065`*^9}, {3.706541301526221*^9, 
   3.7065413024327307`*^9}, {3.7065414595810547`*^9, 
   3.7065414624719954`*^9}, {3.7065416406056376`*^9, 3.706541641136924*^9}, {
   3.7065417179688854`*^9, 3.706541719925084*^9}, {3.72557474935495*^9, 
   3.7255747512006087`*^9}, {3.7259165050002747`*^9, 
   3.7259165154602356`*^9}, {3.7259166756831045`*^9, 3.725916675772687*^9}, 
   3.725917605048106*^9, {3.725918446550211*^9, 3.7259184657213078`*^9}, 
   3.7259198903582883`*^9, {3.725920223117715*^9, 3.725920229012422*^9}, {
   3.7262284748003783`*^9, 3.726228483607055*^9}, {3.726232174196838*^9, 
   3.726232174899846*^9}, {3.7262322100858984`*^9, 3.726232213039154*^9}, {
   3.7262326755657673`*^9, 3.7262326755812397`*^9}, {3.7263127856392155`*^9, 
   3.7263127859205027`*^9}, 3.726312820730816*^9, 3.726314932424716*^9, {
   3.726315752541557*^9, 3.726315753508316*^9}, {3.7263161980316563`*^9, 
   3.726316214236738*^9}, {3.7263170734049606`*^9, 3.726317073668169*^9}, 
   3.7263171280833235`*^9, {3.7264276052764044`*^9, 3.726427607924378*^9}, {
   3.726427684853177*^9, 3.7264276849160647`*^9}, {3.726427846342225*^9, 
   3.726427897029306*^9}, {3.7264280302489815`*^9, 3.726428075229349*^9}, {
   3.726428152671248*^9, 3.726428152764804*^9}, {3.726428223719919*^9, 
   3.7264282522855587`*^9}, {3.7264282855683947`*^9, 3.726428299172845*^9}, 
   3.7264284298887577`*^9, {3.7264284975437346`*^9, 3.7264284975987573`*^9}, {
   3.726428852729035*^9, 3.7264288563019004`*^9}, {3.726498592265546*^9, 
   3.7264986215758657`*^9}, {3.726498739859763*^9, 3.726498770041049*^9}, {
   3.726499037153983*^9, 3.7264990387686634`*^9}, 3.7264990709393625`*^9, {
   3.726499109248748*^9, 3.726499109323476*^9}, {3.7265102537529445`*^9, 
   3.72651025486487*^9}, 3.7265875595015526`*^9, 3.72658761840734*^9, {
   3.72676963255846*^9, 3.7267696626371384`*^9}, {3.726791431468948*^9, 
   3.7267914429703617`*^9}, {3.726791481226034*^9, 3.7267914821018443`*^9}, {
   3.726851626565467*^9, 3.726851626783679*^9}, {3.72685201155692*^9, 
   3.7268520395655947`*^9}, {3.7268522931405935`*^9, 3.726852293341139*^9}, {
   3.726951215074041*^9, 3.726951215776682*^9}, {3.7271021770520916`*^9, 
   3.7271021942899837`*^9}, {3.7271022504581857`*^9, 
   3.7271022679456863`*^9}, {3.7271023274120145`*^9, 
   3.7271023445134926`*^9}, {3.727102678473711*^9, 3.727102683082144*^9}, {
   3.72717858368355*^9, 3.7271785851886983`*^9}, {3.7273672231037517`*^9, 
   3.727367226468868*^9}, {3.727367515587777*^9, 3.7273675301008096`*^9}, {
   3.727367784285633*^9, 3.7273678089987173`*^9}, 3.727368005773307*^9, {
   3.7273709669197035`*^9, 3.7273709695003705`*^9}, {3.727371179511157*^9, 
   3.7273711798437643`*^9}, 3.7273775147593975`*^9, {3.727382562236678*^9, 
   3.7273825634397693`*^9}, {3.727385363885741*^9, 3.7273853651514807`*^9}, {
   3.727386037274422*^9, 3.7273860373183136`*^9}, {3.727436146659217*^9, 
   3.7274361479251223`*^9}, {3.727438423175781*^9, 3.727438439994993*^9}, {
   3.7274622948877187`*^9, 3.7274622956768036`*^9}, {3.7276242125319386`*^9, 
   3.7276242131234837`*^9}, {3.7276313237823176`*^9, 3.7276313239385777`*^9}, 
   3.7276313803171186`*^9, {3.7276314593728247`*^9, 3.727631487937564*^9}, {
   3.7276528492763395`*^9, 3.727652849682644*^9}, {3.7276533909228077`*^9, 
   3.727653392813645*^9}, {3.727653523530835*^9, 3.727653524140279*^9}, {
   3.7276943558073215`*^9, 3.727694370845718*^9}, 3.727694412161547*^9, {
   3.727694448999857*^9, 3.7276944656674285`*^9}, {3.727694607290311*^9, 
   3.72769460764974*^9}, {3.7276946387384195`*^9, 3.727694664461509*^9}, {
   3.7276948544245915`*^9, 3.7276948781030016`*^9}, {3.7276953026302953`*^9, 
   3.7276953297112246`*^9}, {3.7276954725026293`*^9, 3.7276954824289045`*^9}, 
   3.727696041761572*^9, {3.72769618487897*^9, 3.7276961852540255`*^9}, {
   3.727696324929608*^9, 3.727696339359556*^9}, {3.727696500590621*^9, 
   3.727696501612608*^9}, {3.727696994810011*^9, 3.727696995450818*^9}, {
   3.727697094173427*^9, 3.727697113387396*^9}, {3.7277058267750664`*^9, 
   3.7277058274457893`*^9}, {3.727705985959084*^9, 3.7277060412059884`*^9}, {
   3.7277061121367054`*^9, 3.7277061123979397`*^9}, {3.7277063220696487`*^9, 
   3.7277063236062007`*^9}, {3.727706671733384*^9, 3.7277066719333444`*^9}, 
   3.727706719241252*^9, {3.7277069726882973`*^9, 3.7277069727654977`*^9}, {
   3.7279780459236956`*^9, 3.7279780492054195`*^9}, {3.7279781484930553`*^9, 
   3.7279781499539056`*^9}, {3.7279785465138245`*^9, 
   3.7279785492477922`*^9}, {3.7279786064916897`*^9, 3.727978607685904*^9}, {
   3.7279787891867523`*^9, 3.727978789571583*^9}, {3.728150143487645*^9, 
   3.728150143746316*^9}, 3.7281505630102735`*^9, {3.72815163022637*^9, 
   3.7281516306799192`*^9}, {3.7281516874973855`*^9, 3.72815168831907*^9}, 
   3.7281517991214743`*^9, {3.7281531225227385`*^9, 3.728153123010866*^9}, {
   3.728153165603778*^9, 3.7281531849127626`*^9}, {3.7282323962530017`*^9, 
   3.7282324357003536`*^9}, {3.7282341842519646`*^9, 3.728234197378403*^9}, {
   3.7288616536464043`*^9, 3.728861682554188*^9}, {3.7288617839135475`*^9, 
   3.728861798386026*^9}, {3.7288618290014515`*^9, 3.7288618303239374`*^9}, {
   3.7288619223034763`*^9, 3.7288619601089897`*^9}, {3.729628596249839*^9, 
   3.7296285964008837`*^9}, {3.730405585930815*^9, 3.730405634131381*^9}, {
   3.730405695078393*^9, 3.730405696391189*^9}, {3.7304057312855062`*^9, 
   3.730405731691806*^9}, 3.731707111199296*^9, {3.7322930399598513`*^9, 
   3.732293041243371*^9}, {3.73229353177592*^9, 3.732293531900771*^9}, {
   3.732293957662097*^9, 3.732293959364642*^9}, {3.7322941423206005`*^9, 
   3.7322941429180946`*^9}, {3.732294308369203*^9, 3.73229430950338*^9}, {
   3.7322944834813313`*^9, 3.732294484720369*^9}, {3.7322948199564657`*^9, 
   3.732294820738516*^9}, {3.732974413958082*^9, 3.73297441519039*^9}, {
   3.7330680089618773`*^9, 3.733068021832218*^9}, {3.733071762420032*^9, 
   3.733071762579991*^9}, {3.7330719694034147`*^9, 3.733071969503624*^9}, {
   3.733072564426529*^9, 3.7330725647342815`*^9}, {3.7330736052864127`*^9, 
   3.7330736056127977`*^9}, 3.7330736479895616`*^9, {3.733073990658784*^9, 
   3.7330739907619677`*^9}, {3.7330749851713457`*^9, 
   3.7330749853601007`*^9}, {3.7331592916958156`*^9, 3.7331592920083637`*^9}, 
   3.733159624816738*^9, {3.7331764861241846`*^9, 3.7331765138581195`*^9}, {
   3.7332259776919594`*^9, 3.7332259779577837`*^9}, {3.7332260436990128`*^9, 
   3.733226043761334*^9}, {3.733227279616027*^9, 3.733227280553607*^9}, {
   3.733612263693363*^9, 3.7336122642715416`*^9}, {3.7336123609336805`*^9, 
   3.7336123610586643`*^9}, 3.733612489779175*^9, {3.7336136151021013`*^9, 
   3.73361363879202*^9}, {3.735565980893736*^9, 3.7355659809784594`*^9}, 
   3.7355660822125697`*^9, {3.7355669963267555`*^9, 3.7355669964539146`*^9}, {
   3.7355674961889496`*^9, 3.735567496323862*^9}, 3.73556753055135*^9, 
   3.7355675862366304`*^9, {3.7355703035035963`*^9, 3.735570304341631*^9}, {
   3.7355704192862945`*^9, 3.735570419434635*^9}, {3.735570463044862*^9, 
   3.735570467155408*^9}, {3.7355708199694395`*^9, 3.7355708211944404`*^9}, 
   3.7355710207612324`*^9, {3.7355721210234413`*^9, 3.7355721215347834`*^9}, {
   3.7355730231452894`*^9, 3.7355730236226916`*^9}, {3.7355777522092123`*^9, 
   3.735577770789573*^9}, {3.735577887688393*^9, 3.735577888064193*^9}, 
   3.7355780547630777`*^9, 3.7355782414175153`*^9, {3.7355792706738224`*^9, 
   3.7355792708166323`*^9}, {3.7355810591713657`*^9, 
   3.7355811280181003`*^9}, {3.735581405811122*^9, 3.735581407330742*^9}, {
   3.7356594565098643`*^9, 3.7356594763039265`*^9}, {3.7357530566220517`*^9, 
   3.7357530566906295`*^9}, {3.735753276639608*^9, 3.7357532767576356`*^9}, {
   3.735753320716158*^9, 3.7357533212811193`*^9}, {3.7357537346998563`*^9, 
   3.7357537348089514`*^9}, {3.735830877082585*^9, 3.735830902465297*^9}, {
   3.735831014247811*^9, 3.7358310151193027`*^9}, {3.7358318018625016`*^9, 
   3.7358318047137165`*^9}, {3.7358982417742357`*^9, 3.7358982419771366`*^9}, 
   3.7358986596064796`*^9, {3.735898960828109*^9, 3.735898960897865*^9}, {
   3.7359014105014677`*^9, 3.735901435870366*^9}, {3.7359014662254896`*^9, 
   3.7359014672159605`*^9}, {3.7359015572779837`*^9, 3.735901557989208*^9}, {
   3.7359015940007486`*^9, 3.7359015940741186`*^9}, {3.735943309870846*^9, 
   3.7359433125507665`*^9}, {3.7359433623852797`*^9, 3.73594338523025*^9}, {
   3.7360745443524017`*^9, 3.7360745903024178`*^9}, {3.7360749329736433`*^9, 
   3.736074934090191*^9}, {3.736088164609576*^9, 3.736088165487093*^9}, {
   3.736455421055501*^9, 3.7364554430284*^9}, {3.7365965186092978`*^9, 
   3.7365965191091814`*^9}, {3.7365966963799667`*^9, 3.736596749513652*^9}, {
   3.736596850817518*^9, 3.736596875796274*^9}, {3.736763686159734*^9, 
   3.7367636869189634`*^9}, {3.736763767409404*^9, 3.736763767506747*^9}, {
   3.7371460163569455`*^9, 3.7371460168099976`*^9}, {3.7417064188781204`*^9, 
   3.741706436899953*^9}, 3.7425639813700576`*^9, {3.7425640125658813`*^9, 
   3.7425640133310747`*^9}, {3.7425644597628593`*^9, 
   3.7425644601218977`*^9}, {3.7425644987130575`*^9, 3.742564500541646*^9}, 
   3.7425649092802415`*^9, {3.7425666177692065`*^9, 3.7425666529725184`*^9}, {
   3.742568704044242*^9, 3.7425687042941833`*^9}, 3.742568739962216*^9, {
   3.74256877904554*^9, 3.7425688290231023`*^9}, {3.7425691028772717`*^9, 
   3.742569103002276*^9}, {3.742569211881468*^9, 3.74256921223643*^9}, 
   3.7425692438200636`*^9, {3.7425692776544757`*^9, 3.74256927804475*^9}, {
   3.7425695006272516`*^9, 3.742569501142966*^9}, {3.7425695321221037`*^9, 
   3.74256955426258*^9}, {3.7425697892478485`*^9, 3.7425697893416147`*^9}, {
   3.7425698235818005`*^9, 3.742569823769436*^9}, {3.742569868730573*^9, 
   3.742569875695554*^9}, 3.7425700863356576`*^9, {3.742570184225988*^9, 
   3.7425701847568398`*^9}, {3.742570240988158*^9, 3.7425702586862383`*^9}, 
   3.742570307724933*^9, 3.742570344283907*^9, {3.742570397279416*^9, 
   3.7425704204645324`*^9}, {3.742570472902691*^9, 3.742570474703472*^9}, {
   3.742577354266049*^9, 3.7425773543399653`*^9}, {3.7425773968353343`*^9, 
   3.742577397397705*^9}, {3.742577509604536*^9, 3.742577509698263*^9}, {
   3.742582052518962*^9, 3.7425820526283092`*^9}, {3.742584250401931*^9, 
   3.742584324271947*^9}, {3.7425846771491146`*^9, 3.7425847046762533`*^9}, {
   3.742584790114916*^9, 3.7425847909116983`*^9}, {3.742584843151619*^9, 
   3.7425848434652777`*^9}, {3.7425849006665144`*^9, 
   3.7425849140667896`*^9}, {3.7425877731537895`*^9, 3.74258777362243*^9}, {
   3.7425878064171305`*^9, 3.7425878241581078`*^9}, {3.7425878747944093`*^9, 
   3.7425879031315265`*^9}, {3.7425880443171387`*^9, 
   3.7425880471448755`*^9}, {3.742588333363019*^9, 3.742588335159542*^9}, {
   3.7425885539672527`*^9, 3.7425885547170706`*^9}, {3.7425886186551886`*^9, 
   3.7425886188116283`*^9}, {3.7425889422393274`*^9, 3.742588942364558*^9}, {
   3.7425891053933907`*^9, 3.74258910558221*^9}, {3.742589170478894*^9, 
   3.7425891709942226`*^9}, {3.742589267889366*^9, 3.7425892701147914`*^9}, {
   3.742590870144144*^9, 3.7425908704409523`*^9}, {3.744381037752672*^9, 
   3.744381038939867*^9}, {3.744388598041043*^9, 3.7443885995919294`*^9}, 
   3.744388645535741*^9, {3.744389338746821*^9, 3.7443893397653975`*^9}, {
   3.744453441392544*^9, 3.74445344554782*^9}, {3.7444701229554605`*^9, 
   3.744470124376995*^9}, {3.755950331670307*^9, 3.755950334205367*^9}, 
   3.756478019850447*^9, {3.7564783928221483`*^9, 3.756478394118788*^9}, {
   3.7564785667581425`*^9, 3.756478571772623*^9}, 3.756478716366096*^9, {
   3.7564789110449643`*^9, 3.75647895026132*^9}, {3.7564791645716476`*^9, 
   3.756479168976847*^9}, {3.7564792306900144`*^9, 3.7564792444609084`*^9}, {
   3.7564793724023595`*^9, 3.7564793752451973`*^9}, {3.756483388473321*^9, 
   3.7564834077253437`*^9}, {3.7564954533798823`*^9, 
   3.7564954582672987`*^9}, {3.756556334935542*^9, 3.7565563350791616`*^9}, 
   3.7565563998621736`*^9, {3.756556434530611*^9, 3.756556436711949*^9}, 
   3.7572459599714746`*^9, 3.7572459975590525`*^9, {3.757251206649341*^9, 
   3.757251206821224*^9}, {3.7572519812583923`*^9, 3.7572519818522234`*^9}, {
   3.757252027771946*^9, 3.7572520286465235`*^9}, {3.7572520627909775`*^9, 
   3.757252062978682*^9}, {3.75725274542657*^9, 3.757252745587186*^9}, 
   3.757252854102418*^9, 3.7572567015268583`*^9, 3.757256756966837*^9, {
   3.7572569637418766`*^9, 3.7572569660514603`*^9}, 3.757257122139165*^9, {
   3.757257247053527*^9, 3.7572572771053705`*^9}, 3.7572573645433283`*^9, 
   3.7572574076079407`*^9, {3.757258272795636*^9, 3.7572582730611477`*^9}, {
   3.7572585612169333`*^9, 3.7572585637563367`*^9}, {3.7572607146898236`*^9, 
   3.757260714877248*^9}, {3.7572607889469147`*^9, 3.757260789181266*^9}, {
   3.757428937330599*^9, 3.7574289484741297`*^9}, {3.75742904913558*^9, 
   3.7574290492605157`*^9}, {3.7574292364495497`*^9, 
   3.7574292471656103`*^9}, {3.7574295556564655`*^9, 
   3.7574295668879704`*^9}, {3.7574296688331575`*^9, 3.757429699325778*^9}, {
   3.757618266247278*^9, 3.757618266372053*^9}, {3.7576187557144685`*^9, 
   3.757618755886309*^9}, {3.757788293517701*^9, 3.7577882936902623`*^9}, {
   3.757806079925031*^9, 3.757806081269964*^9}, 3.757806907925541*^9, {
   3.7578069383677063`*^9, 3.7578069404952974`*^9}, {3.7578075605082235`*^9, 
   3.7578075606697936`*^9}, 3.757862949445253*^9, 3.7578658363785706`*^9, {
   3.7579349759594746`*^9, 3.757934976068786*^9}, {3.7579350499988403`*^9, 
   3.757935050170884*^9}, {3.7579351268516016`*^9, 3.7579351286948605`*^9}, {
   3.7579354427174196`*^9, 3.7579354427954893`*^9}, {3.757937970747216*^9, 
   3.7579379727831774`*^9}, 3.7579380321543956`*^9, {3.757949501094049*^9, 
   3.75794950315709*^9}, 3.7579500370626764`*^9, {3.757950130107833*^9, 
   3.7579501303265405`*^9}, {3.757950289265208*^9, 3.7579502897179995`*^9}, 
   3.7579515271606407`*^9, {3.7579520450997906`*^9, 3.7579520452091208`*^9}, {
   3.7579522832168503`*^9, 3.7579522837949095`*^9}, {3.757952460878643*^9, 
   3.757952461034655*^9}, {3.7579780205136633`*^9, 3.7579780207196226`*^9}, {
   3.7580203121086683`*^9, 3.758020312233594*^9}, {3.758021025150342*^9, 
   3.7580210273688726`*^9}, 3.7580210615623665`*^9, {3.7580211528433366`*^9, 
   3.758021153421321*^9}, {3.7580211998202887`*^9, 3.7580211999605865`*^9}, {
   3.7580214512308702`*^9, 3.758021451579234*^9}, 3.7580215161864405`*^9, 
   3.7580216970925884`*^9, {3.758021781564021*^9, 3.7580217861251574`*^9}, {
   3.758022058904725*^9, 3.7580220593108783`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"73435eb7-54e0-4b19-8c5e-39c9e5291f4a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numeric parameters", "Subsection",
 CellChangeTimes->{{3.7257341910322104`*^9, 
  3.725734198104739*^9}},ExpressionUUID->"1200a26f-89f9-417f-9907-\
c571605ef586"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d", "=", "1"}], ";"}], " ", "//", "N"}], 
  RowBox[{"(*", 
   RowBox[{"diffusion", " ", "coefficient"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", 
   RowBox[{"1", "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s1", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", "=", 
   RowBox[{"1", "-", "s1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2"}], "}"}], "*", "supply"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.725733503602087*^9, 3.7257335542731795`*^9}, 
   3.7257339312647057`*^9, {3.725734043249301*^9, 3.7257340470646057`*^9}, {
   3.725734238629345*^9, 3.7257342473223753`*^9}, {3.7257987307454476`*^9, 
   3.725798767595275*^9}, {3.7257996070802803`*^9, 3.7257996073460913`*^9}, {
   3.725913423095943*^9, 3.725913424131578*^9}, {3.725913486550043*^9, 
   3.7259134899424925`*^9}, {3.7262320864922533`*^9, 
   3.7262321301484256`*^9}, {3.726312683175921*^9, 3.7263126867856846`*^9}, {
   3.72631592924984*^9, 3.726315929312381*^9}, {3.72642740389495*^9, 
   3.72642740414927*^9}, {3.726428156021737*^9, 3.7264281574851866`*^9}, {
   3.726428309861814*^9, 3.7264283216532555`*^9}, {3.7264284011046486`*^9, 
   3.726428402062109*^9}, {3.726428501286252*^9, 3.7264285021096945`*^9}, {
   3.7264288600871162`*^9, 3.726428871269583*^9}, {3.7264984377917757`*^9, 
   3.7264984607568607`*^9}, {3.7264986555012712`*^9, 
   3.7264986555978003`*^9}, {3.726502684988872*^9, 3.7265027009898424`*^9}, {
   3.726504493061347*^9, 3.7265045004557714`*^9}, 3.726504766537942*^9, {
   3.7265048279194098`*^9, 3.726504847806918*^9}, 3.7265053393837414`*^9, {
   3.726505433567273*^9, 3.7265054621331463`*^9}, 3.72650549284591*^9, 
   3.7265057419775944`*^9, {3.726510165374783*^9, 3.726510174975325*^9}, 
   3.726510261242845*^9, 3.726511636074026*^9, {3.7265875041960487`*^9, 
   3.726587547893953*^9}, 3.7265882968783607`*^9, {3.726767754977374*^9, 
   3.726767775401531*^9}, {3.7267695581526737`*^9, 3.7267695646369753`*^9}, 
   3.7267912467294564`*^9, 3.7267913574935217`*^9, {3.726791411085636*^9, 
   3.726791411265828*^9}, {3.726851631366864*^9, 3.726851632279084*^9}, {
   3.726851983928867*^9, 3.726852005183937*^9}, {3.7268520625748577`*^9, 
   3.7268520794139338`*^9}, 3.726852330566964*^9, {3.7271022329321012`*^9, 
   3.727102234658057*^9}, 3.72710231017949*^9, {3.727102622130866*^9, 
   3.727102624074063*^9}, {3.7271027191592317`*^9, 3.7271027261460824`*^9}, {
   3.727178519510494*^9, 3.7271785227564783`*^9}, {3.7271785535198565`*^9, 
   3.7271785642205377`*^9}, {3.7271786000940466`*^9, 
   3.7271786002359734`*^9}, {3.7271928775618258`*^9, 3.727192883694849*^9}, {
   3.727192999438631*^9, 3.727193001805627*^9}, {3.7271938627503757`*^9, 
   3.727193924973624*^9}, {3.7273660867155514`*^9, 3.727366138533971*^9}, {
   3.72736634647375*^9, 3.7273663767080116`*^9}, {3.7273664158391666`*^9, 
   3.727366441572178*^9}, {3.7273665672176514`*^9, 3.7273665734600134`*^9}, {
   3.727366646177684*^9, 3.7273666487015653`*^9}, {3.72736718910252*^9, 
   3.7273671925451155`*^9}, {3.727367490254678*^9, 3.727367490759043*^9}, {
   3.727367579447149*^9, 3.7273675810423374`*^9}, {3.7273676259410963`*^9, 
   3.7273676260574694`*^9}, {3.727367671299402*^9, 3.727367672176199*^9}, {
   3.7273678223272166`*^9, 3.727367846777938*^9}, {3.727367878546256*^9, 
   3.7273678789125*^9}, {3.727367970845069*^9, 3.7273679733849564`*^9}, {
   3.727368137301108*^9, 3.727368137475151*^9}, {3.7273682437314577`*^9, 
   3.7273682439429398`*^9}, {3.727368290147503*^9, 3.7273682907497554`*^9}, {
   3.7273683473723116`*^9, 3.7273683474280157`*^9}, {3.727368403439048*^9, 
   3.7273686164974856`*^9}, {3.7273686734274607`*^9, 3.727368674684946*^9}, {
   3.7273688200141706`*^9, 3.7273688801687407`*^9}, {3.727368974900004*^9, 
   3.7273689982082334`*^9}, {3.7273693402216964`*^9, 
   3.7273693605857735`*^9}, {3.727370220768489*^9, 3.727370222131555*^9}, {
   3.72737072787269*^9, 3.727370729221193*^9}, {3.727375305999798*^9, 
   3.727375307985941*^9}, {3.727375417408583*^9, 3.7273754186260757`*^9}, {
   3.727377462301524*^9, 3.727377488480383*^9}, {3.7273823787560472`*^9, 
   3.7273824715918612`*^9}, {3.7273832097107964`*^9, 
   3.7273832100233326`*^9}, {3.727383298919055*^9, 3.727383299419117*^9}, 
   3.7273833352197375`*^9, {3.7273860125391912`*^9, 3.727386017142149*^9}, {
   3.7274361015547533`*^9, 3.7274361303705616`*^9}, {3.727436161777789*^9, 
   3.7274361791444387`*^9}, {3.727437341894087*^9, 3.72743734694233*^9}, {
   3.7274384008969464`*^9, 3.7274384012407303`*^9}, {3.7274468924922743`*^9, 
   3.72744689528926*^9}, {3.7274469530405693`*^9, 3.727446953087449*^9}, {
   3.727462281427043*^9, 3.7274622856109037`*^9}, {3.7274623161924996`*^9, 
   3.727462318411233*^9}, {3.7274769795240545`*^9, 3.7274769795554657`*^9}, {
   3.7274771818851156`*^9, 3.7274772029910493`*^9}, {3.7274798100250077`*^9, 
   3.727479812253301*^9}, {3.7274798450020237`*^9, 3.727479848091025*^9}, {
   3.727479957815284*^9, 3.727479960724245*^9}, {3.727480237483058*^9, 
   3.727480237779952*^9}, {3.7276239928121085`*^9, 3.727624014378785*^9}, {
   3.727624588229066*^9, 3.727624588468141*^9}, {3.7276285881793513`*^9, 
   3.727628595983348*^9}, {3.727628785628275*^9, 3.72762883329*^9}, {
   3.727628867685651*^9, 3.7276288910341616`*^9}, {3.727628936237521*^9, 
   3.7276289375305195`*^9}, {3.7276325631655874`*^9, 
   3.7276325729887924`*^9}, {3.7276326144093556`*^9, 
   3.7276326311451883`*^9}, {3.727632669187136*^9, 3.7276327211152334`*^9}, {
   3.7276327562803817`*^9, 3.727632856676214*^9}, {3.727632946126235*^9, 
   3.7276329709261513`*^9}, 3.727633027700227*^9, {3.7276330584132442`*^9, 
   3.7276330645091686`*^9}, {3.72763332844569*^9, 3.727633332701617*^9}, {
   3.7276527669391737`*^9, 3.7276527760182753`*^9}, {3.727652828867712*^9, 
   3.727652828946025*^9}, {3.7276943319784985`*^9, 3.727694333197403*^9}, {
   3.727694389722571*^9, 3.727694390238078*^9}, {3.72769459926945*^9, 
   3.7276945996601334`*^9}, {3.7276946580713606`*^9, 3.7276946586181564`*^9}, 
   3.7276947161476154`*^9, 3.7276948142703753`*^9, {3.727695276727865*^9, 
   3.727695327835992*^9}, {3.7276961386710114`*^9, 3.727696158980405*^9}, {
   3.727697061630063*^9, 3.7276970624271984`*^9}, {3.727705719380797*^9, 
   3.7277057337940183`*^9}, {3.727705800991767*^9, 3.7277058158386936`*^9}, {
   3.7277064559342275`*^9, 3.7277064560375032`*^9}, {3.7279778252695837`*^9, 
   3.727977830759903*^9}, {3.72797794538279*^9, 3.7279779718895774`*^9}, {
   3.727978124255081*^9, 3.72797812505521*^9}, {3.7279781813038025`*^9, 
   3.72797818416842*^9}, {3.7279919934202905`*^9, 3.727992029742624*^9}, {
   3.7279920604838333`*^9, 3.7279921236369085`*^9}, {3.728150048933112*^9, 
   3.728150049073726*^9}, {3.7281500917969284`*^9, 3.728150102679181*^9}, {
   3.72815158341175*^9, 3.7281516115275345`*^9}, {3.728153113073809*^9, 
   3.728153118326266*^9}, {3.7281532514696455`*^9, 3.7281532520817633`*^9}, {
   3.728153308597163*^9, 3.7281533109214897`*^9}, {3.7281534392438407`*^9, 
   3.7281534534665594`*^9}, {3.728232343335647*^9, 3.728232345376519*^9}, {
   3.7282336587021055`*^9, 3.7282336589786468`*^9}, {3.728233876448826*^9, 
   3.728233890372979*^9}, {3.7282341548364716`*^9, 3.728234156906581*^9}, {
   3.7288616386084237`*^9, 3.7288616601807785`*^9}, {3.728861697401661*^9, 
   3.728861754549478*^9}, {3.7289253176855807`*^9, 3.7289253265115695`*^9}, 
   3.728925378654459*^9, {3.728948128157336*^9, 3.7289481664800243`*^9}, {
   3.7290967151542454`*^9, 3.7290967217018166`*^9}, {3.7296283869982457`*^9, 
   3.7296284018915987`*^9}, {3.729628433763114*^9, 3.729628435093992*^9}, {
   3.7296285397436485`*^9, 3.7296285659620113`*^9}, {3.7304055898530617`*^9, 
   3.7304055922126827`*^9}, {3.7304059181021366`*^9, 
   3.7304059246651635`*^9}, {3.730836017419747*^9, 3.7308360281200953`*^9}, {
   3.731000629262525*^9, 3.7310006444049487`*^9}, {3.731000679049263*^9, 
   3.731000698504464*^9}, {3.7317070411221886`*^9, 3.731707054477502*^9}, 
   3.731707388463253*^9, {3.7317084975918837`*^9, 3.731708498066003*^9}, {
   3.732291777771637*^9, 3.732291805806057*^9}, {3.732291849492696*^9, 
   3.732291849805234*^9}, 3.7322932551001997`*^9, 3.732294138688771*^9, {
   3.7322942997935295`*^9, 3.732294302832718*^9}, {3.7322944889469748`*^9, 
   3.7322944894423366`*^9}, {3.732294786673247*^9, 3.7322948062195697`*^9}, {
   3.7322959205894012`*^9, 3.7322959207471623`*^9}, 3.7329742028572917`*^9, 
   3.7329744795379725`*^9, {3.732974672132433*^9, 3.7329746722560077`*^9}, {
   3.732974820586175*^9, 3.7329748206488523`*^9}, {3.7329749101621714`*^9, 
   3.7329749129350753`*^9}, {3.732975108207242*^9, 3.732975108634968*^9}, {
   3.732975155757128*^9, 3.7329751558510504`*^9}, {3.7330041855575027`*^9, 
   3.7330041922300854`*^9}, {3.733066876515244*^9, 3.7330668797053013`*^9}, {
   3.73307183516875*^9, 3.7330718355581365`*^9}, {3.7330749808687572`*^9, 
   3.733074981321205*^9}, {3.7331591937419386`*^9, 3.7331592694813843`*^9}, {
   3.733159370165913*^9, 3.733159372619281*^9}, {3.733159531370793*^9, 
   3.733159588048681*^9}, 3.7331597466095557`*^9, {3.7331599450524244`*^9, 
   3.7331599835877557`*^9}, {3.7331600840851183`*^9, 3.733160084382039*^9}, 
   3.7331601894290943`*^9, {3.7331602656998277`*^9, 3.733160287249154*^9}, {
   3.733160559323771*^9, 3.7331605594489384`*^9}, {3.733160673512068*^9, 
   3.733160673980693*^9}, {3.733163280959112*^9, 3.733163284249756*^9}, {
   3.733163367745859*^9, 3.733163373753724*^9}, {3.73316350214386*^9, 
   3.7331635054355373`*^9}, {3.733174376296794*^9, 3.7331743769218607`*^9}, {
   3.7331744161068125`*^9, 3.7331744313267612`*^9}, {3.7331764485019145`*^9, 
   3.7331764832419624`*^9}, {3.733225958856566*^9, 3.7332259621225586`*^9}, {
   3.7332272618796024`*^9, 3.733227275584346*^9}, {3.733612226514329*^9, 
   3.7336122297177916`*^9}, {3.733612354682997*^9, 3.7336123549799643`*^9}, {
   3.735565652605628*^9, 3.7355656942668376`*^9}, {3.73556592174045*^9, 
   3.7355659370839386`*^9}, 3.7355661634618263`*^9, {3.735566831152958*^9, 
   3.735566831600009*^9}, {3.735566870277642*^9, 3.7355669323018556`*^9}, {
   3.7355673494958525`*^9, 3.735567380137287*^9}, {3.735567448496418*^9, 
   3.7355674522632008`*^9}, 3.7355674924482756`*^9, {3.7355675716156015`*^9, 
   3.7355675783440876`*^9}, {3.735567628241951*^9, 3.735567630800356*^9}, {
   3.7355686489448795`*^9, 3.735568650738949*^9}, {3.735568706058361*^9, 
   3.735568724939625*^9}, {3.7355687637700253`*^9, 3.7355687651330414`*^9}, 
   3.735570317566983*^9, {3.7355703653005576`*^9, 3.735570367769656*^9}, 
   3.735570402450656*^9, {3.73557065786587*^9, 3.735570658276559*^9}, {
   3.7355708798639956`*^9, 3.7355708942191167`*^9}, {3.735570959511524*^9, 
   3.735570959664674*^9}, {3.7355710968225107`*^9, 3.735571097620536*^9}, {
   3.7355711358734365`*^9, 3.735571137662408*^9}, {3.735571544030363*^9, 
   3.7355715487102127`*^9}, {3.735571625183345*^9, 3.7355716254397764`*^9}, {
   3.735572450579607*^9, 3.735572451582816*^9}, {3.735572769275304*^9, 
   3.7355727694014316`*^9}, {3.735572808727976*^9, 3.735572882314317*^9}, {
   3.735572957010614*^9, 3.735572957096106*^9}, {3.7355729929423633`*^9, 
   3.735572993096707*^9}, {3.7355731491577373`*^9, 3.735573149299239*^9}, {
   3.735573968852962*^9, 3.7355740717062683`*^9}, {3.7355748732584734`*^9, 
   3.7355749016356716`*^9}, {3.7355749621254673`*^9, 
   3.7355749807082043`*^9}, {3.735575357533139*^9, 3.7355753576673126`*^9}, {
   3.735577710069953*^9, 3.73557771937012*^9}, {3.735577754918964*^9, 
   3.735577755014045*^9}, {3.7355778527726545`*^9, 3.735577855699969*^9}, {
   3.735578592840212*^9, 3.7355785942954545`*^9}, {3.735581023000141*^9, 
   3.735581035962351*^9}, {3.735581600032055*^9, 3.735581604093535*^9}, {
   3.735591831336829*^9, 3.7355920007065077`*^9}, {3.735596950360736*^9, 
   3.7355969635010276`*^9}, {3.7356594083199897`*^9, 3.735659420364296*^9}, {
   3.735752565394433*^9, 3.735752573583312*^9}, 3.735752858034663*^9, {
   3.7357530145621796`*^9, 3.7357530147184258`*^9}, {3.7357532296756067`*^9, 
   3.735753230786955*^9}, 3.7357536613410826`*^9, {3.735830820849087*^9, 
   3.7358308711119423`*^9}, {3.73583093076251*^9, 3.735830942297985*^9}, {
   3.735831742236865*^9, 3.7358317605920606`*^9}, {3.7358982204854393`*^9, 
   3.73589822231369*^9}, {3.73590106729885*^9, 3.7359010879199677`*^9}, {
   3.7359013969800835`*^9, 3.735901408245169*^9}, {3.7359431610494843`*^9, 
   3.7359431880109324`*^9}, {3.7359433363629303`*^9, 3.735943336565919*^9}, {
   3.7359912874758196`*^9, 3.735991301078756*^9}, {3.7359983580534534`*^9, 
   3.7359983670704746`*^9}, {3.7360744997402906`*^9, 3.736074539347541*^9}, {
   3.736074855772688*^9, 3.7360748569442773`*^9}, {3.736088161207595*^9, 
   3.736088181486576*^9}, {3.7360882234387026`*^9, 3.7360882235324025`*^9}, {
   3.7364553017648697`*^9, 3.7364553627714214`*^9}, {3.736455393644834*^9, 
   3.7364554071098137`*^9}, {3.736455491880666*^9, 3.736455511761333*^9}, {
   3.736504725307418*^9, 3.7365047622283115`*^9}, {3.7365049374415736`*^9, 
   3.7365050104701414`*^9}, {3.7365050776167545`*^9, 3.73650508190106*^9}, {
   3.7365052579807477`*^9, 3.736505452763093*^9}, 3.7365055119386654`*^9, {
   3.7365055517833815`*^9, 3.736505582035838*^9}, 3.7365056528764257`*^9, {
   3.73659634484627*^9, 3.7365963475487633`*^9}, {3.7365963851656113`*^9, 
   3.736596389985669*^9}, {3.73659669256833*^9, 3.7365966931622505`*^9}, {
   3.736698275620165*^9, 3.736698279509836*^9}, {3.73669840534769*^9, 
   3.7366984079875093`*^9}, {3.7367636958907356`*^9, 3.736763749255301*^9}, {
   3.7367637987040925`*^9, 3.7367638609628906`*^9}, {3.7367639883416395`*^9, 
   3.7367640137491474`*^9}, {3.7367641912883253`*^9, 3.73676419142536*^9}, {
   3.736764584186921*^9, 3.73676460104452*^9}, {3.737145988092636*^9, 
   3.7371459973718677`*^9}, {3.7413542111729383`*^9, 3.741354224252*^9}, {
   3.741705456092988*^9, 3.7417054650419455`*^9}, {3.741705498724573*^9, 
   3.7417055045729427`*^9}, {3.741705575427066*^9, 3.7417056020133605`*^9}, {
   3.741705808730723*^9, 3.741705902368929*^9}, {3.741705958609148*^9, 
   3.741706012858965*^9}, {3.741706066799096*^9, 3.741706095479517*^9}, {
   3.7417061254890156`*^9, 3.741706177799078*^9}, {3.7425639009356675`*^9, 
   3.742563901430252*^9}, 3.742564036709253*^9, {3.7425645042851315`*^9, 
   3.7425645045663157`*^9}, {3.7425646921170797`*^9, 
   3.7425647207869835`*^9}, {3.742565542498659*^9, 3.742565542576764*^9}, {
   3.7425661535076265`*^9, 3.742566153663662*^9}, {3.7425694770301094`*^9, 
   3.7425694796931386`*^9}, {3.74256976452595*^9, 3.7425697646040597`*^9}, {
   3.742569847937752*^9, 3.742569848093974*^9}, {3.7425700589367275`*^9, 
   3.742570064408152*^9}, {3.7425701755737257`*^9, 3.742570175714362*^9}, 
   3.7425702357033873`*^9, {3.742570298739864*^9, 3.742570301551205*^9}, {
   3.742570337162582*^9, 3.7425703395760255`*^9}, {3.7425703713763227`*^9, 
   3.742570388990732*^9}, {3.742577343666977*^9, 3.7425773437916875`*^9}, {
   3.7425833429580975`*^9, 3.7425833436615396`*^9}, {3.7425878142277966`*^9, 
   3.7425878143840103`*^9}, {3.742587981222539*^9, 3.7425879814415426`*^9}, {
   3.7425880495034223`*^9, 3.7425880502219667`*^9}, {3.742588337518053*^9, 
   3.7425883376744556`*^9}, {3.742588546094298*^9, 3.742588546281646*^9}, 
   3.742588613719055*^9, {3.7425887430713973`*^9, 3.7425887455083275`*^9}, {
   3.742589263493184*^9, 3.7425892636180506`*^9}, {3.7425908621728926`*^9, 
   3.7425908631750555`*^9}, {3.742591023291839*^9, 3.7425910242290726`*^9}, {
   3.742761585796831*^9, 3.742761592288199*^9}, {3.743767037589571*^9, 
   3.74376706198365*^9}, {3.743775504828097*^9, 3.743775504989974*^9}, {
   3.743775841721185*^9, 3.743775845258103*^9}, 3.743776624555317*^9, {
   3.7443810134870906`*^9, 3.744381054107873*^9}, 3.744381089333897*^9, {
   3.7443811969213634`*^9, 3.7443811969838467`*^9}, 3.744381240723442*^9, {
   3.7443813306689067`*^9, 3.7443813508987293`*^9}, {3.7443816383733435`*^9, 
   3.744381638467205*^9}, {3.74438289205614*^9, 3.7443829020693893`*^9}, {
   3.74904949993596*^9, 3.7490495004039946`*^9}, {3.7513012074646063`*^9, 
   3.7513012599649487`*^9}, {3.7531999362947626`*^9, 3.753199937796749*^9}, 
   3.7564779230403786`*^9, {3.7564782763104625`*^9, 3.7564782773102245`*^9}, 
   3.756478363675456*^9, 3.7564784486527147`*^9, {3.756478508664567*^9, 
   3.7564785147687044`*^9}, {3.7564791555895433`*^9, 3.7564791568392444`*^9}, 
   3.756479238056398*^9, {3.756483382718583*^9, 3.756483384515236*^9}, {
   3.7565563313331704`*^9, 3.75655633148676*^9}, {3.756556362521571*^9, 
   3.756556362665187*^9}, {3.7572516950259485`*^9, 3.7572516972596807`*^9}, {
   3.757429092250519*^9, 3.7574290923598313`*^9}, {3.757429558421194*^9, 
   3.7574295585305047`*^9}, {3.757787223875699*^9, 3.757787224592781*^9}, 
   3.7578572069337206`*^9, {3.757861238401087*^9, 3.7578612512725067`*^9}, 
   3.7578615457227564`*^9, {3.7578631788259597`*^9, 3.7578631798279123`*^9}, {
   3.75786583385639*^9, 3.757865833956892*^9}, {3.757865945875435*^9, 
   3.75786594640777*^9}, {3.7578669347072763`*^9, 3.757866935115551*^9}, {
   3.757934889519717*^9, 3.7579348900664787`*^9}, {3.7579494582371635`*^9, 
   3.7579494606448193`*^9}, {3.757952662942238*^9, 3.7579526630362186`*^9}, {
   3.7579526932910795`*^9, 3.7579527411695533`*^9}, {3.757978016282603*^9, 
   3.757978016473406*^9}, {3.758020315889022*^9, 3.7580203194818954`*^9}, {
   3.7580220561712112`*^9, 3.7580220562805777`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"40f46580-0e88-459e-aa6a-7b279a6d3963"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "225", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alphas", "=", 
   RowBox[{"{", 
    RowBox[{".3", ",", ".65", ",", ".7"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alphas", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"alphas", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], "*", "e"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "alphas", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.756477974386989*^9, 3.7564779959341536`*^9}, {
   3.756478585651784*^9, 3.756478609844901*^9}, {3.7570963389847565`*^9, 
   3.757096347092467*^9}, {3.757101045390766*^9, 3.7571010455001535`*^9}, {
   3.7571011713194366`*^9, 3.7571011714134007`*^9}, {3.7571017456437645`*^9, 
   3.7571017494709525`*^9}, {3.757107313909732*^9, 3.7571073600358*^9}, {
   3.7572456235259557`*^9, 3.7572456607303143`*^9}, {3.757245704010621*^9, 
   3.7572457107178183`*^9}, 3.757245774703025*^9, {3.757245812879294*^9, 
   3.757245820355678*^9}, {3.7572458766118283`*^9, 3.7572458878370237`*^9}, {
   3.757251166608536*^9, 3.7572511754608173`*^9}, {3.757251517192273*^9, 
   3.7572515235212927`*^9}, {3.75725235001628*^9, 3.7572523512503796`*^9}, 
   3.7572524403035765`*^9, 3.757252534877322*^9, 3.7572528121367836`*^9, {
   3.7572565829071336`*^9, 3.7572565873203635`*^9}, {3.7572607006618533`*^9, 
   3.757260710300196*^9}, {3.757428957478542*^9, 3.7574289905706472`*^9}, {
   3.7574296220625825`*^9, 3.7574296322948112`*^9}, {3.7577872354168396`*^9, 
   3.757787241136547*^9}, {3.7578612339018545`*^9, 3.757861235135972*^9}, {
   3.7579523492282867`*^9, 3.7579523667137957`*^9}, {3.7579524272196355`*^9, 
   3.7579524309581065`*^9}, 3.7579781125474544`*^9, {3.757978161966689*^9, 
   3.7579781706156473`*^9}, {3.758021204975031*^9, 3.7580212217021685`*^9}, {
   3.7580223254846888`*^9, 3.758022330061735*^9}, 3.7580250702552886`*^9, {
   3.774371740866711*^9, 3.77437174183313*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a3768f65-c0ea-458b-a697-7759385ae123"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"Length", "[", "\[Alpha]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"strat", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Alpha]", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}]}], ";"}], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "maps", " ", "strategies", " ", "to", " ", "continuum", " ", "of", " ", 
     "nutrient", " ", "1"}], ",", " ", 
    RowBox[{"nutrient", " ", "2"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sScaled", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"e", "/", 
      RowBox[{"Total", "[", "s", "]"}]}], ")"}], "*", 
    RowBox[{"s", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.744388399867404*^9, 3.7443884113767357`*^9}, 
   3.7572515508638844`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"41987a5b-168f-4331-9760-f782a385538c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", "=", ".005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7577872706207123`*^9, 3.757787278265278*^9}, {
   3.757808149608938*^9, 3.7578081520843086`*^9}, 3.7578570634661303`*^9, 
   3.7578629108353715`*^9, 3.757865839216606*^9, 3.757866943951886*^9, 
   3.7578670014948497`*^9, 3.7578672307666516`*^9, {3.7579348964711933`*^9, 
   3.7579349031573644`*^9}, {3.757937791682001*^9, 3.7579377922912436`*^9}, 
   3.7579380008577385`*^9, {3.7579380706199527`*^9, 3.7579380707602453`*^9}, {
   3.757949464586729*^9, 3.7579494675860195`*^9}, 3.7579496002161922`*^9, {
   3.757949713374627*^9, 3.7579497135620027`*^9}, {3.7579500165205383`*^9, 
   3.7579500171920996`*^9}, {3.757950127021688*^9, 3.7579501272249575`*^9}, 
   3.757950660497485*^9, 3.757950784661257*^9, {3.7579515341522036`*^9, 
   3.757951559949462*^9}, 3.757951986506877*^9, {3.757952110264033*^9, 
   3.757952120058215*^9}, {3.757952210278266*^9, 3.7579522105436263`*^9}, {
   3.7580208374888797`*^9, 3.758020865695183*^9}, {3.758021015028012*^9, 
   3.758021017402463*^9}, {3.7580210570197077`*^9, 3.7580210574258566`*^9}, {
   3.758021143572893*^9, 3.758021144072467*^9}, 3.7580214818293*^9, {
   3.7580215652549224`*^9, 3.758021565911065*^9}, {3.758021636404699*^9, 
   3.758021663016301*^9}, {3.758021740034384*^9, 3.7580217436275387`*^9}, {
   3.7580219327664795`*^9, 3.758021943217293*^9}, {3.7580220983931723`*^9, 
   3.758022102748168*^9}, {3.758022133045897*^9, 3.75802213523289*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fbcc40e9-67f8-44a8-89b0-3d13e163f83b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dynamics ", "Subsection",
 CellChangeTimes->{{3.7074755289899797`*^9, 3.7074755299744635`*^9}, {
   3.725669514072843*^9, 3.725669524397403*^9}, 
   3.7257333820908866`*^9},ExpressionUUID->"e990d96f-e4fe-4734-ac1f-\
01616c4e8497"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getGrowth", "[", 
    RowBox[{"pop_", ",", "species_", ",", "c_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"growth", ",", "myN", ",", "myA", ",", "myB"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myN", "=", 
       RowBox[{"pop", "[", 
        RowBox[{"[", "species", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"myA", "=", 
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"species", "*", "2"}], "-", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"myB", "=", 
       RowBox[{"c", "[", 
        RowBox[{"[", 
         RowBox[{"species", "*", "2"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"growth", "=", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Alpha]", "[", 
            RowBox[{"[", 
             RowBox[{"species", ",", "i"}], "]"}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "*", 
               RowBox[{"myN", "/", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"[", 
                  RowBox[{"species", ",", "i"}], "]"}], "]"}]}]}], ")"}], "+", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"d", "/", 
                RowBox[{"\[Alpha]", "[", 
                 RowBox[{"[", 
                  RowBox[{"species", ",", "i"}], "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"myA", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{"myN", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", 
                    RowBox[{"[", 
                    RowBox[{"species", ",", "i"}], "]"}], "]"}], "/", "d"}], 
                    "]"}]}], ")"}]}], "-", "1"}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"myB", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "myN"}], "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]", "[", 
                    RowBox[{"[", 
                    RowBox[{"species", ",", "i"}], "]"}], "]"}], "/", "d"}], 
                    "]"}]}], ")"}]}], "-", "1"}], ")"}]}]}], ")"}]}]}], 
            ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "//", "Total"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6965895227227125`*^9, 3.696589523824609*^9}, {
   3.696589555651825*^9, 3.6965895565514193`*^9}, {3.696589614615326*^9, 
   3.696589666974783*^9}, {3.6965897022498207`*^9, 3.696589748968171*^9}, {
   3.696589790313078*^9, 3.6965898335312843`*^9}, {3.696589874920477*^9, 
   3.69658989450873*^9}, {3.6965899383402815`*^9, 3.696589948267783*^9}, {
   3.696590007007851*^9, 3.6965900108591866`*^9}, {3.696590131142317*^9, 
   3.696590150176012*^9}, {3.696590258997075*^9, 3.696590286696235*^9}, {
   3.6965904194645615`*^9, 3.696590470811558*^9}, 3.6965905234339805`*^9, 
   3.696590597481418*^9, {3.6965906613702135`*^9, 3.6965906775066757`*^9}, {
   3.6965907182467437`*^9, 3.696590766366455*^9}, {3.696590894944403*^9, 
   3.6965909097120028`*^9}, {3.696590965296879*^9, 3.69659098390123*^9}, {
   3.6965910166064*^9, 3.696591109740837*^9}, {3.696591146840334*^9, 
   3.696591206643772*^9}, {3.6965912456554375`*^9, 3.696591249373863*^9}, {
   3.6965912909455585`*^9, 3.6965913876744127`*^9}, {3.6965914541600227`*^9, 
   3.696591499502432*^9}, {3.69659154636117*^9, 3.6965916088609867`*^9}, 
   3.6965916944391756`*^9, 3.696592049835128*^9, {3.6965920930072513`*^9, 
   3.696592158342303*^9}, 3.6965934995283647`*^9, 3.6965937849316792`*^9, {
   3.696594100978546*^9, 3.6965941012633758`*^9}, {3.6965948103846345`*^9, 
   3.6965948144023857`*^9}, 3.696594881930228*^9, 3.6971188739770265`*^9, {
   3.6999717265107164`*^9, 3.699971784167533*^9}, {3.700658499237542*^9, 
   3.700658511848712*^9}, {3.700658996513068*^9, 3.700659013463374*^9}, {
   3.700659267341464*^9, 3.7006592739500847`*^9}, {3.700659392403618*^9, 
   3.700659392688162*^9}, {3.7006596105568314`*^9, 3.7006596347153463`*^9}, {
   3.7006597845759845`*^9, 3.7006597902123985`*^9}, {3.7006598277274513`*^9, 
   3.700659896531273*^9}, {3.700660069405628*^9, 3.700660078561034*^9}, {
   3.700663235311222*^9, 3.7006632361766043`*^9}, {3.7006655347959414`*^9, 
   3.700665538005338*^9}, {3.7006658861048126`*^9, 3.7006658902236633`*^9}, {
   3.700908361585142*^9, 3.7009083658268366`*^9}, {3.700909829277989*^9, 
   3.700909841139907*^9}, {3.700948222401856*^9, 3.700948222717701*^9}, {
   3.7010007318315887`*^9, 3.701000731931446*^9}, {3.7010069697023396`*^9, 
   3.701006973567937*^9}, {3.7010329130453763`*^9, 3.701032913145445*^9}, {
   3.7010339675519137`*^9, 3.7010339705860653`*^9}, {3.701105153511359*^9, 
   3.7011051652401037`*^9}, {3.701117352424009*^9, 3.701117352500263*^9}, {
   3.7011748441309443`*^9, 3.701174845783497*^9}, {3.702852069948423*^9, 
   3.7028520700109243`*^9}, {3.7029216705632286`*^9, 3.702921722085047*^9}, {
   3.7029218129228783`*^9, 3.702921819704427*^9}, {3.7029219152110014`*^9, 
   3.7029219220917263`*^9}, {3.7029219791039443`*^9, 3.702921987961296*^9}, {
   3.703197602981612*^9, 3.703197604653681*^9}, {3.707478209791501*^9, 
   3.7074782152275*^9}, {3.707482521886603*^9, 3.7074825329816794`*^9}, {
   3.707482633475793*^9, 3.7074826340225744`*^9}, {3.7074837977853227`*^9, 
   3.7074838052893543`*^9}, {3.7074844086904726`*^9, 3.707484411190901*^9}, {
   3.7074846092121906`*^9, 3.7074846211143703`*^9}, {3.7074851053974533`*^9, 
   3.7074851100543966`*^9}, {3.707485205563261*^9, 3.7074852105454254`*^9}, {
   3.7256680779433484`*^9, 3.725668182784665*^9}, {3.7256682259973927`*^9, 
   3.72566827573297*^9}, {3.7256683265631433`*^9, 3.7256685296783085`*^9}, {
   3.725668565422694*^9, 3.7256685700355577`*^9}, {3.7256688240574913`*^9, 
   3.725668836722292*^9}, 3.7256689400254946`*^9, {3.7256690726415987`*^9, 
   3.7256690741449943`*^9}, {3.7256691928889017`*^9, 
   3.7256692794245863`*^9}, {3.725669865841851*^9, 3.725669871722834*^9}, 
   3.7256702335767136`*^9, {3.725670397843544*^9, 3.7256704079723797`*^9}, 
   3.7256757610668173`*^9, 3.72591694560189*^9, 3.7259169959571924`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"c37157d8-1802-4a94-80d1-4ef55bbfc7eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ndot", "[", 
    RowBox[{"n_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"VectorQ", "[", 
        RowBox[{"#", ",", " ", "NumericQ"}], "]"}], "&"}], ")"}]}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dn", ",", "growthTable", ",", "n0", ",", "nNew", ",", "cCoeff"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n0", "=", "n"}], ";", "\[IndentingNewLine]", 
      RowBox[{"n0", "=", 
       RowBox[{"n0", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x_", "/;", 
           RowBox[{"x", "<", 
            RowBox[{"10", "^", 
             RowBox[{"-", "8"}]}]}]}], "\[Rule]", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cCoeff", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"getConcentration", "[", 
           RowBox[{"n0", ",", "1"}], "]"}], ",", 
          RowBox[{"getConcentration", "[", 
           RowBox[{"n0", ",", "2"}], "]"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"growthTable", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"getGrowth", "[", 
          RowBox[{"n0", ",", "i", ",", "cCoeff"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "n0", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\[Delta]", "=", 
         RowBox[{"Total", "[", "growthTable", "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"dn", "=", 
       RowBox[{"growthTable", "-", 
        RowBox[{"\[Delta]", "*", "n0"}]}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6965931219887357`*^9, 3.696593140462175*^9}, {
   3.6965932258660197`*^9, 3.696593357367965*^9}, {3.696593391650141*^9, 
   3.6965934771557083`*^9}, {3.6965936885087624`*^9, 3.696593795642787*^9}, {
   3.696593825991562*^9, 3.696593858633007*^9}, {3.6965939301340184`*^9, 
   3.6965939700487213`*^9}, {3.6965940373023825`*^9, 
   3.6965940557244453`*^9}, {3.6965940978273497`*^9, 3.696594098057909*^9}, {
   3.696594137000656*^9, 3.696594143322132*^9}, {3.696594285378239*^9, 
   3.696594315930116*^9}, {3.6965945975379486`*^9, 3.6965946954888077`*^9}, {
   3.6965949421181135`*^9, 3.696594945984907*^9}, {3.69659533621733*^9, 
   3.6965953567050557`*^9}, {3.696595821343733*^9, 3.6965958214970512`*^9}, {
   3.696595914598648*^9, 3.6965959438287416`*^9}, {3.6965967018791523`*^9, 
   3.696596718052206*^9}, {3.6965968161398*^9, 3.6965968176756077`*^9}, {
   3.69659704810172*^9, 3.6965970818853817`*^9}, {3.6965971749234853`*^9, 
   3.6965971799036636`*^9}, {3.6966032418769712`*^9, 
   3.6966032512105923`*^9}, {3.6966032997151623`*^9, 
   3.6966034201281223`*^9}, {3.696603452477832*^9, 3.6966034537326508`*^9}, {
   3.6966035310872064`*^9, 3.6966035548144083`*^9}, {3.696603609934909*^9, 
   3.6966036118841324`*^9}, {3.6966036667048864`*^9, 
   3.6966036723963194`*^9}, {3.6966038780515537`*^9, 3.696603878467641*^9}, {
   3.6966041696464205`*^9, 3.6966041831753006`*^9}, 3.697118877027338*^9, {
   3.6971218205323486`*^9, 3.6971218400696306`*^9}, {3.697121871371745*^9, 
   3.6971218774006853`*^9}, {3.6971219321052246`*^9, 3.697121939812664*^9}, {
   3.697121985671056*^9, 3.6971220176615705`*^9}, {3.6971220909040055`*^9, 
   3.697122092288337*^9}, {3.6971221333560038`*^9, 3.697122205482888*^9}, {
   3.6971222449453564`*^9, 3.697122298638214*^9}, 3.697122351487322*^9, {
   3.6971224405546536`*^9, 3.697122442525339*^9}, {3.6971225080414124`*^9, 
   3.6971225543053627`*^9}, {3.6971225989027014`*^9, 3.697122634736966*^9}, {
   3.697122670831673*^9, 3.697122688361349*^9}, 3.697122746016963*^9, {
   3.6971232896947446`*^9, 3.6971232922624435`*^9}, {3.69712339790242*^9, 
   3.6971234002344313`*^9}, {3.697125472238125*^9, 3.6971254876695547`*^9}, {
   3.69712902943244*^9, 3.697129036262988*^9}, {3.697168004727966*^9, 
   3.697168004873673*^9}, 3.69815941939165*^9, {3.698162539023039*^9, 
   3.698162549328356*^9}, {3.6981629472742014`*^9, 3.6981629665539913`*^9}, {
   3.6981634804068317`*^9, 3.6981634885650587`*^9}, {3.698163542171053*^9, 
   3.6981635440416803`*^9}, {3.698163722229559*^9, 3.698163740410325*^9}, {
   3.699444142325899*^9, 3.699444148830888*^9}, {3.699633146223044*^9, 
   3.6996331538812456`*^9}, {3.699633433977247*^9, 3.699633435416217*^9}, {
   3.6996337535090685`*^9, 3.6996337565272512`*^9}, {3.699633797852626*^9, 
   3.699633799506392*^9}, {3.6996338875315046`*^9, 3.69963390647373*^9}, {
   3.6996339489052*^9, 3.699633950444665*^9}, {3.699634455910423*^9, 
   3.699634456995335*^9}, {3.6996353288133354`*^9, 3.6996353311310935`*^9}, {
   3.699635365562394*^9, 3.699635366879433*^9}, {3.6996354063380127`*^9, 
   3.699635407275827*^9}, {3.6996354541638584`*^9, 3.6996354547171087`*^9}, {
   3.699635588530047*^9, 3.6996355984402575`*^9}, {3.699635678439104*^9, 
   3.6996356800405474`*^9}, {3.6996554515830994`*^9, 3.699655478375041*^9}, {
   3.6997115561802387`*^9, 3.6997115736928797`*^9}, {3.699711763330311*^9, 
   3.69971177317004*^9}, 3.6997126494623632`*^9, 3.6997126875367217`*^9, {
   3.699714379258774*^9, 3.699714384779539*^9}, {3.699808071543378*^9, 
   3.6998080745675435`*^9}, 3.6998089609721284`*^9, {3.699972438059099*^9, 
   3.6999724495702252`*^9}, {3.699975017549372*^9, 3.6999750196388025`*^9}, {
   3.6999754171631823`*^9, 3.699975453277935*^9}, {3.699975745058668*^9, 
   3.699975746808499*^9}, {3.6999759574869275`*^9, 3.699975959473503*^9}, {
   3.699976510217533*^9, 3.6999765367130976`*^9}, {3.69997673717139*^9, 
   3.6999767436277976`*^9}, 3.6999773772241077`*^9, 3.7000495823014374`*^9, {
   3.7000607086501694`*^9, 3.7000607131011066`*^9}, {3.700062725190826*^9, 
   3.7000627258544073`*^9}, {3.7003269802155867`*^9, 
   3.7003269812625704`*^9}, {3.700334774660796*^9, 3.700334777650832*^9}, {
   3.7003544979692073`*^9, 3.7003544989863863`*^9}, {3.7003957925782657`*^9, 
   3.7003957950843525`*^9}, {3.7006585752330275`*^9, 
   3.7006585789392853`*^9}, {3.7006586840762854`*^9, 
   3.7006586872792807`*^9}, {3.7009961166357927`*^9, 
   3.7009961286914883`*^9}, {3.7010002083583765`*^9, 3.701000215149598*^9}, 
   3.701005700913456*^9, 3.7010057417524123`*^9, {3.7010322661449366`*^9, 
   3.7010322703780704`*^9}, 3.701115351823089*^9, 3.701115567278804*^9, {
   3.7017915594968243`*^9, 3.7017915662297306`*^9}, 3.7017918989209776`*^9, {
   3.7020410384516525`*^9, 3.7020410397488174`*^9}, {3.7031681380618114`*^9, 
   3.7031681417653046`*^9}, {3.7031682420956907`*^9, 3.703168243642543*^9}, {
   3.7031965562948637`*^9, 3.7031966052279997`*^9}, {3.703585185404916*^9, 
   3.7035851868581963`*^9}, 3.704393473086879*^9, {3.70439367835501*^9, 
   3.7043936801366324`*^9}, 3.7043937560667667`*^9, 3.7045575763515954`*^9, 
   3.704901473246514*^9, {3.707475702893363*^9, 3.707475727371952*^9}, {
   3.707479915895501*^9, 3.707479925597145*^9}, {3.70747997896212*^9, 
   3.7074799813217134`*^9}, {3.7074800595784826`*^9, 
   3.7074800681053734`*^9}, {3.7074815853343043`*^9, 3.707481594678403*^9}, {
   3.707481789668419*^9, 3.707481797511815*^9}, {3.7074822197031527`*^9, 
   3.7074822309764104`*^9}, {3.7074826393826513`*^9, 3.707482643200184*^9}, {
   3.7074827573730865`*^9, 3.7074827592461433`*^9}, {3.707482938914652*^9, 
   3.707482949943713*^9}, {3.707483827610365*^9, 3.707483840012514*^9}, {
   3.7074843956125846`*^9, 3.7074844044479475`*^9}, {3.7074851756405234`*^9, 
   3.7074852002140417`*^9}, 3.7074853498158693`*^9, {3.7074854327935705`*^9, 
   3.707485468115312*^9}, {3.707485669406521*^9, 3.707485676844804*^9}, {
   3.7255603252617393`*^9, 3.725560350311159*^9}, {3.725560568306842*^9, 
   3.7255606067960997`*^9}, {3.725560721311904*^9, 3.725560722603727*^9}, 
   3.725561264733946*^9, {3.72557245405363*^9, 3.725572474192114*^9}, {
   3.725572698155449*^9, 3.725572724331606*^9}, {3.7255728667312775`*^9, 
   3.725572918877166*^9}, {3.7255729494227962`*^9, 3.7255729611482368`*^9}, 
   3.725573277894163*^9, {3.72557464037195*^9, 3.7255746471510677`*^9}, 
   3.7255754670977077`*^9, {3.725575631773193*^9, 3.7255756430162926`*^9}, {
   3.7255832007150526`*^9, 3.7255832125239534`*^9}, {3.725584174109212*^9, 
   3.7255841942509565`*^9}, {3.725622691392416*^9, 3.725622698718047*^9}, {
   3.7256227497368107`*^9, 3.7256227679169745`*^9}, {3.725622889180257*^9, 
   3.7256229215070887`*^9}, {3.72562324272161*^9, 3.7256232486286573`*^9}, {
   3.7256233135886116`*^9, 3.72562332269898*^9}, {3.7256234126711106`*^9, 
   3.725623425614896*^9}, {3.7256238737185993`*^9, 3.725623883153957*^9}, {
   3.725665924633519*^9, 3.7256659334462843`*^9}, 3.725668793753273*^9, {
   3.7256688464150596`*^9, 3.7256689295885057`*^9}, {3.7256692945750084`*^9, 
   3.725669296516443*^9}, {3.725669380770099*^9, 3.7256693826404877`*^9}, {
   3.7256694329038596`*^9, 3.725669442417758*^9}, 3.725669566389431*^9, {
   3.7256698743866334`*^9, 3.725669878820814*^9}, {3.7256719257923155`*^9, 
   3.7256719303959193`*^9}, {3.7256723950259266`*^9, 
   3.7256724000365944`*^9}, {3.7256724940410833`*^9, 3.725672498949071*^9}, {
   3.7256754963166995`*^9, 3.72567551400504*^9}, {3.7256757670872297`*^9, 
   3.7256757734487066`*^9}, 3.7257204986785326`*^9, {3.7257207245993576`*^9, 
   3.725720736615986*^9}, {3.72572092481701*^9, 3.7257209334465733`*^9}, {
   3.7257210568205624`*^9, 3.7257210679155493`*^9}, {3.725721193008117*^9, 
   3.725721220415021*^9}, {3.7257233775389013`*^9, 3.7257234035102468`*^9}, {
   3.7257235749269915`*^9, 3.725723579489974*^9}, {3.7257237079906816`*^9, 
   3.725723723508066*^9}, {3.725734135526374*^9, 3.7257341450182905`*^9}, {
   3.7257979203233185`*^9, 3.7257979226410575`*^9}, {3.7257981812722073`*^9, 
   3.725798183256613*^9}, {3.725799099025768*^9, 3.725799114558829*^9}, {
   3.725800557816966*^9, 3.72580055898899*^9}, {3.7259135554163256`*^9, 
   3.7259135893762465`*^9}, {3.725916463669276*^9, 3.725916465494613*^9}, 
   3.7259169417268267`*^9, 3.7259169927739487`*^9, {3.7259175603314*^9, 
   3.7259175775742874`*^9}, {3.7259177676410666`*^9, 
   3.7259177833542876`*^9}, {3.7259207160999928`*^9, 
   3.7259207291062155`*^9}, {3.7259208965793276`*^9, 3.725920897141775*^9}, {
   3.725923888129238*^9, 3.725923892647778*^9}, {3.7264288338461275`*^9, 
   3.7264288430862474`*^9}, {3.7264293666570697`*^9, 3.7264293805765777`*^9}, 
   3.7264294396411676`*^9, 3.7264294802258005`*^9, {3.726429630123275*^9, 
   3.726429632999919*^9}, {3.726510187856618*^9, 3.726510190339199*^9}, {
   3.7269510831788497`*^9, 3.726951092476907*^9}, {3.726951261832266*^9, 
   3.726951281466823*^9}, {3.7271018287169013`*^9, 3.7271018343963127`*^9}, {
   3.727102687555174*^9, 3.727102692409358*^9}, {3.7425665272707515`*^9, 
   3.7425665745431623`*^9}, 3.7425679438393884`*^9, 3.7425690871179314`*^9, 
   3.7425691432152615`*^9, 3.7425692040766907`*^9, 3.74438932922795*^9, {
   3.744456908805189*^9, 3.7444569098627176`*^9}, 3.7444692475508327`*^9, 
   3.7444694543320727`*^9, 3.744469550392381*^9, 3.7444696119717045`*^9, 
   3.7444698080185013`*^9, {3.7572570708596773`*^9, 3.7572570709534054`*^9}, {
   3.7572571036290274`*^9, 3.7572571040039463`*^9}, {3.7577872848656244`*^9, 
   3.7577873090200777`*^9}, {3.7577873710870895`*^9, 
   3.7577873748580027`*^9}, {3.7577874354899235`*^9, 3.757787438264469*^9}, {
   3.7577875052563553`*^9, 3.7577875597376814`*^9}, {3.757787594620407*^9, 
   3.757787674934661*^9}, {3.7577877139453554`*^9, 3.757787731271036*^9}, {
   3.757787761734585*^9, 3.757787805816716*^9}, {3.7578045783537865`*^9, 
   3.757804606633215*^9}, {3.757805873841172*^9, 3.7578058768561263`*^9}, {
   3.757808788768989*^9, 3.7578087954039044`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"073b1b23-f99a-4563-b171-4050a2499bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "project", " ", "noise", " ", "vector", " ", "onto", " ", "plane", " ", 
    "where", " ", "total", " ", "growth", " ", "is", " ", "0"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"planeProject", "[", "u_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"normalVector", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Length", "[", "u", "]"}], "]"}]}], ",", 
         RowBox[{"Length", "[", "u", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"correctedVector", "=", 
       RowBox[{"u", "-", 
        RowBox[{"Projection", "[", 
         RowBox[{"u", ",", "normalVector"}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.757804236946251*^9, 3.7578043176980667`*^9}, {
   3.7578043827217197`*^9, 3.7578043858641553`*^9}, {3.7578044452659283`*^9, 
   3.757804456707477*^9}, {3.757804490467*^9, 3.757804505708446*^9}, 
   3.7578045493572364`*^9, {3.7578073947734423`*^9, 3.757807407231127*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"a6ff3186-c79c-423d-af4d-515b563fa15a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rescaleNoise", "[", 
   RowBox[{"n_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "prevent", " ", "sending", " ", "populations", " ", "below", " ", "0"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"finalPop", "=", 
      RowBox[{"n", "+", "\[Nu]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"minPop", "=", 
      RowBox[{"Min", "[", "finalPop", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"minPop", "<", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mostNegativeIndex", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"finalPop", ",", "minPop"}], "]"}], "//", "Flatten"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"multiplier", "=", 
         RowBox[{"c", "/.", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"n", "[", 
               RowBox[{"[", "mostNegativeIndex", "]"}], "]"}], "+", 
              RowBox[{"c", "*", 
               RowBox[{"\[Nu]", "[", 
                RowBox[{"[", "mostNegativeIndex", "]"}], "]"}]}]}], 
             "\[Equal]", "0"}], ",", "c"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"scaledNoise", "=", 
         RowBox[{"\[Nu]", "*", 
          RowBox[{"multiplier", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", "\[Nu]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.757850769176052*^9, 3.7578508436479425`*^9}, {
  3.7578566346125264`*^9, 3.75785664583787*^9}, {3.7578566875834427`*^9, 
  3.757856722539317*^9}, {3.7578567683759184`*^9, 3.757856864976042*^9}, {
  3.757856919981524*^9, 3.7578569924126854`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"de874ba0-4ce1-45d8-97d7-815e4668766b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"noiseFn", "[", "n_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"noise", ",", "correctedNoise", ",", "n0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n0", "=", 
       RowBox[{"n", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x_", "/;", 
           RowBox[{"x", "<", 
            RowBox[{"10", "^", 
             RowBox[{"-", "8"}]}]}]}], "\[Rule]", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"don", "'"}], "t", " ", "want", " ", "noise", " ", "for", " ",
         "dead", " ", "species"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nonzero", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"n", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{"x", "\[NotEqual]", "0"}]}]}], "]"}], "//", "Flatten"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"noise", "=", 
       RowBox[{
        RowBox[{"Sqrt", "[", "\[Omega]", "]"}], "*", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"n0", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "nonzero"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"correctedNoise", "=", 
       RowBox[{"planeProject", "[", "noise", "]"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"zero", " ", "total", " ", "growth"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"survivingNoise", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "nonzero", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"survivingNoise", "[", 
           RowBox[{"[", 
            RowBox[{"nonzero", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "=", 
          RowBox[{"correctedNoise", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"now", ",", " ", 
        RowBox[{
        "shorten", " ", "vector", " ", "to", " ", "prevent", " ", "negative", 
         " ", "populations"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"finalNoise", "=", 
       RowBox[{"rescaleNoise", "[", 
        RowBox[{"n0", ",", "survivingNoise"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7578064777971077`*^9, 3.757806549203954*^9}, {
   3.757806982711317*^9, 3.757806990105109*^9}, {3.75780702987685*^9, 
   3.757807053431149*^9}, 3.757807212561725*^9, {3.7578073001016245`*^9, 
   3.7578074180980735`*^9}, {3.757807490390741*^9, 3.7578075472237515`*^9}, 
   3.7578077093305016`*^9, {3.7578077670372124`*^9, 3.7578077731139297`*^9}, {
   3.75780792217414*^9, 3.7578079286876907`*^9}, {3.7578500828659363`*^9, 
   3.757850150637124*^9}, {3.757850193186901*^9, 3.7578502124532337`*^9}, {
   3.7578565735033317`*^9, 3.7578566014656467`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"72baf970-ba3b-4fc9-b981-39cb6f01416d"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "\[Sigma]"], TraditionalForm]],ExpressionUUID->
  "7628727f-8ff9-479a-b5fe-5339b86e8ce1"],
 "(t) and plot"
}], "Subsection",
 CellChangeTimes->{{3.69659437399642*^9, 3.6965943795777426`*^9}, {
  3.69660535740208*^9, 3.696605357439315*^9}, {3.696606141669324*^9, 
  3.696606176658435*^9}, {3.726316284954395*^9, 
  3.7263162897292795`*^9}},ExpressionUUID->"15b4091c-fcef-4307-bb5c-\
c1b34ac23bab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"nInit", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{".9", ",", ".08", ",", ".02"}], "}"}], "*", "l"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.696597120207774*^9, 3.69659714878784*^9}, {
   3.696597188809554*^9, 3.696597189993047*^9}, {3.6965972230407834`*^9, 
   3.6965972245728865`*^9}, 3.696603426370083*^9, {3.6966037564077077`*^9, 
   3.696603758595476*^9}, {3.696603798638183*^9, 3.6966038033925295`*^9}, {
   3.6966041068627677`*^9, 3.696604109224783*^9}, {3.6966041853271265`*^9, 
   3.6966041862823763`*^9}, {3.6966042516624813`*^9, 
   3.6966043821208053`*^9}, {3.6966044566411147`*^9, 
   3.6966045642872286`*^9}, {3.6966046409545994`*^9, 
   3.6966046748970532`*^9}, {3.696604718964842*^9, 3.696604803000972*^9}, {
   3.696604857092992*^9, 3.6966048891563854`*^9}, {3.696605072234622*^9, 
   3.6966051002504845`*^9}, {3.6966052388924923`*^9, 
   3.6966052400723057`*^9}, {3.696605282240817*^9, 3.696605299141591*^9}, {
   3.6966063014381833`*^9, 3.6966064559423976`*^9}, {3.6966066446936445`*^9, 
   3.6966066607826624`*^9}, {3.6966117776131043`*^9, 3.696611780705112*^9}, {
   3.6966118848679724`*^9, 3.6966118916912193`*^9}, {3.6966120607272687`*^9, 
   3.6966120723377237`*^9}, {3.696612117353552*^9, 3.696612161114149*^9}, {
   3.6966122356875496`*^9, 3.6966122679281993`*^9}, {3.696612313365041*^9, 
   3.6966123181711416`*^9}, {3.6966277508732786`*^9, 3.696627751357646*^9}, {
   3.6971192142742653`*^9, 3.6971192740543776`*^9}, {3.697119408277728*^9, 
   3.697119550803069*^9}, {3.6971196046007233`*^9, 3.6971196105532084`*^9}, {
   3.697119938022659*^9, 3.697119985090053*^9}, {3.697120176083581*^9, 
   3.6971202686589317`*^9}, {3.6971203106926284`*^9, 3.697120322928398*^9}, {
   3.697120413724265*^9, 3.6971204896265345`*^9}, {3.6971205468694563`*^9, 
   3.697120616689003*^9}, {3.697120682678132*^9, 3.697120709422633*^9}, {
   3.6971207532802715`*^9, 3.697120754698656*^9}, {3.6971212803418016`*^9, 
   3.6971213163977675`*^9}, {3.6971220276299715`*^9, 
   3.6971220410475283`*^9}, {3.697122080862914*^9, 3.697122124928113*^9}, {
   3.6971225650989084`*^9, 3.6971225907632427`*^9}, {3.697122757030884*^9, 
   3.6971228245909543`*^9}, {3.697123174613331*^9, 3.697123175783882*^9}, {
   3.697123281148862*^9, 3.697123281564766*^9}, {3.697123313639655*^9, 
   3.697123314071412*^9}, {3.6971254513726892`*^9, 3.6971254635505605`*^9}, {
   3.6971290502388487`*^9, 3.6971290520875683`*^9}, {3.6971679968356323`*^9, 
   3.6971679994489293`*^9}, {3.6972385915214233`*^9, 
   3.6972385945633993`*^9}, {3.6981594397746277`*^9, 
   3.6981594427090187`*^9}, {3.6981604438645306`*^9, 3.6981604479842997`*^9}, 
   3.6981604831758814`*^9, {3.6981605430635223`*^9, 3.6981605637656446`*^9}, {
   3.698160925089241*^9, 3.698160929546414*^9}, {3.698160992482808*^9, 
   3.6981610265352855`*^9}, {3.698161190384816*^9, 3.698161192222887*^9}, {
   3.698161679144*^9, 3.6981618617080708`*^9}, {3.6981622472309523`*^9, 
   3.6981622668751636`*^9}, {3.6981625713769207`*^9, 
   3.6981625955154552`*^9}, {3.6981627141356726`*^9, 
   3.6981628170606184`*^9}, {3.6981628531613593`*^9, 
   3.6981628871876526`*^9}, {3.6981629769421806`*^9, 
   3.6981629814164248`*^9}, {3.698163431655864*^9, 3.698163461387519*^9}, {
   3.6981634969028482`*^9, 3.6981635059108334`*^9}, {3.6981636954316797`*^9, 
   3.6981636981058216`*^9}, {3.698164465721336*^9, 3.698164548698886*^9}, {
   3.6981647326476583`*^9, 3.6981647390527487`*^9}, {3.6981650317779655`*^9, 
   3.698165064522391*^9}, {3.698165144504154*^9, 3.698165192326701*^9}, {
   3.698165230251128*^9, 3.698165234108839*^9}, {3.6981655144911637`*^9, 
   3.698165518125058*^9}, {3.6981655572453146`*^9, 3.698165564189581*^9}, {
   3.6981656527363877`*^9, 3.698165666647214*^9}, {3.698165703467546*^9, 
   3.698165711508031*^9}, {3.6981658200549717`*^9, 3.6981658294631014`*^9}, {
   3.698165909532024*^9, 3.6981659190549955`*^9}, {3.698166015656212*^9, 
   3.6981660157716417`*^9}, {3.698166073053624*^9, 3.6981660967960997`*^9}, {
   3.698166265004465*^9, 3.698166279433549*^9}, {3.6981664517212887`*^9, 
   3.698166463203433*^9}, {3.6981665224775753`*^9, 3.698166602196309*^9}, {
   3.698166638503273*^9, 3.6981666666834435`*^9}, {3.698166738220354*^9, 
   3.698166771305093*^9}, {3.6981668531937284`*^9, 3.6981668549636574`*^9}, {
   3.698166888638536*^9, 3.6981669280092506`*^9}, {3.6981670432244525`*^9, 
   3.698167147333606*^9}, {3.698167241289383*^9, 3.6981673577907476`*^9}, {
   3.6981674116484303`*^9, 3.6981674779202037`*^9}, {3.6981675131544533`*^9, 
   3.69816752027731*^9}, {3.698167658499273*^9, 3.6981677760601225`*^9}, {
   3.6981684713757906`*^9, 3.698168493049093*^9}, {3.6981689349713*^9, 
   3.698169001541974*^9}, {3.698169034157092*^9, 3.6981690577626014`*^9}, {
   3.698169104537967*^9, 3.6981691272716985`*^9}, {3.698169164435144*^9, 
   3.698169167669111*^9}, {3.6981692334959974`*^9, 3.6981692440225677`*^9}, {
   3.6981693075902257`*^9, 3.6981693084752226`*^9}, {3.698169340671818*^9, 
   3.6981693407410574`*^9}, {3.698169624676326*^9, 3.698169638309388*^9}, {
   3.6981696831187325`*^9, 3.6981697122617297`*^9}, {3.6981697952727475`*^9, 
   3.698169841440634*^9}, {3.6981706601919193`*^9, 3.6981707365099297`*^9}, {
   3.6981708049237976`*^9, 3.698170832876467*^9}, {3.6981709072143373`*^9, 
   3.698170913365114*^9}, {3.698170979851647*^9, 3.6981709807681584`*^9}, {
   3.698171079832771*^9, 3.6981710952902403`*^9}, {3.6981711407378764`*^9, 
   3.698171145539421*^9}, {3.6981711777622232`*^9, 3.6981713319044104`*^9}, {
   3.6981713624729967`*^9, 3.6981713636046314`*^9}, {3.698171407898594*^9, 
   3.6981714090651026`*^9}, {3.6981715012391357`*^9, 
   3.6981715049737005`*^9}, {3.698171968528412*^9, 3.6981719744342256`*^9}, {
   3.6982501440099063`*^9, 3.698250151118806*^9}, {3.698250216000881*^9, 
   3.698250259932623*^9}, {3.6982504853938046`*^9, 3.6982505807532234`*^9}, {
   3.6982506114976373`*^9, 3.69825061356048*^9}, {3.6982506812142525`*^9, 
   3.698250733621978*^9}, {3.6982507774426875`*^9, 3.698250785125102*^9}, {
   3.698250907144203*^9, 3.6982509122348137`*^9}, 3.698250956192663*^9, {
   3.6982510675469837`*^9, 3.6982511002269597`*^9}, 3.6982515127893844`*^9, {
   3.6982529262412977`*^9, 3.698252970484473*^9}, {3.6993692713363934`*^9, 
   3.699369272769223*^9}, {3.699369895879484*^9, 3.699369902214223*^9}, {
   3.699456908506357*^9, 3.6994569093897963`*^9}, {3.699543855552058*^9, 
   3.699543855784213*^9}, {3.699571365361035*^9, 3.6995713665907927`*^9}, {
   3.6996123242226114`*^9, 3.69961232519151*^9}, {3.699632457025611*^9, 
   3.6996324579786997`*^9}, {3.6996325137951217`*^9, 3.699632524040962*^9}, {
   3.6996326559110975`*^9, 3.699632674616704*^9}, {3.69963293317146*^9, 
   3.699632936073383*^9}, {3.6996329806131344`*^9, 3.6996329847942715`*^9}, {
   3.69963303049566*^9, 3.699633050862652*^9}, {3.699633086380621*^9, 
   3.699633087196954*^9}, {3.6996333074256687`*^9, 3.6996333077722955`*^9}, {
   3.69963594431133*^9, 3.699635945512658*^9}, {3.6996527141101213`*^9, 
   3.699652722845644*^9}, {3.6996535280430593`*^9, 3.6996535321918507`*^9}, {
   3.699653604909643*^9, 3.699653660621286*^9}, {3.6996538746441336`*^9, 
   3.699653913347759*^9}, {3.699653956730248*^9, 3.699654025883651*^9}, {
   3.6996541054737744`*^9, 3.6996541741009803`*^9}, {3.6996542253172336`*^9, 
   3.6996542436789474`*^9}, {3.6996542902307262`*^9, 
   3.6996543691756496`*^9}, {3.6996544149913073`*^9, 3.699654415675994*^9}, {
   3.6996545976739173`*^9, 3.6996546029241743`*^9}, {3.6996546374356422`*^9, 
   3.6996546393051295`*^9}, {3.699655501057479*^9, 3.6996555370692806`*^9}, {
   3.6996556187753205`*^9, 3.6996556226103888`*^9}, {3.699655720347027*^9, 
   3.69965572530591*^9}, 3.699655789681839*^9, {3.6996560118039913`*^9, 
   3.6996560458329954`*^9}, {3.6996560967370596`*^9, 
   3.6996560970374436`*^9}, {3.699656144931757*^9, 3.6996561683783712`*^9}, {
   3.6996562321988273`*^9, 3.6996562324145613`*^9}, {3.699656289819217*^9, 
   3.6996563013932476`*^9}, {3.6996563524223375`*^9, 
   3.6996563657371426`*^9}, {3.699656575885339*^9, 3.6996566504772406`*^9}, {
   3.699656695672867*^9, 3.699656731569064*^9}, {3.699656766035224*^9, 
   3.699656791669168*^9}, {3.6996569127150984`*^9, 3.69965696164311*^9}, {
   3.699657027156825*^9, 3.699657070139079*^9}, {3.69965788919088*^9, 
   3.6996578966956787`*^9}, {3.6996579465888677`*^9, 
   3.6996581159359417`*^9}, {3.699658193371475*^9, 3.6996582431813555`*^9}, {
   3.6996586412008305`*^9, 3.6996586874250607`*^9}, {3.6996607988232107`*^9, 
   3.6996608086849947`*^9}, {3.6996608653025*^9, 3.6996608773264475`*^9}, {
   3.699711500110798*^9, 3.6997115085355515`*^9}, {3.69971180919232*^9, 
   3.6997118374201527`*^9}, {3.6997118776660757`*^9, 
   3.6997118907708683`*^9}, {3.699712458870918*^9, 3.699712461640026*^9}, {
   3.6997128657877674`*^9, 3.699712869661007*^9}, {3.6997129741523237`*^9, 
   3.6997129852917233`*^9}, {3.6997133094061856`*^9, 3.699713310106564*^9}, {
   3.6997134237657137`*^9, 3.6997134251285677`*^9}, {3.699713486944004*^9, 
   3.699713489430321*^9}, {3.699715264644099*^9, 3.6997152658818245`*^9}, {
   3.6997159251117773`*^9, 3.699715953263534*^9}, {3.699715987105957*^9, 
   3.699716101532148*^9}, {3.699716183236718*^9, 3.699716218892763*^9}, {
   3.699721666023202*^9, 3.6997216702813253`*^9}, {3.6997244945613103`*^9, 
   3.699724496437439*^9}, {3.6997245475725107`*^9, 3.699724560838334*^9}, {
   3.6997392986582565`*^9, 3.6997392996898985`*^9}, {3.699739333181405*^9, 
   3.699739347453555*^9}, {3.6997432642921195`*^9, 3.6997433237010045`*^9}, {
   3.6997489547195597`*^9, 3.699748990764305*^9}, {3.699749755440675*^9, 
   3.6997497630296183`*^9}, {3.6997894805868573`*^9, 3.699789494892416*^9}, {
   3.6998082705808473`*^9, 3.6998082706809955`*^9}, {3.69988353630091*^9, 
   3.6998835519225035`*^9}, {3.6998836747105684`*^9, 3.699883683754092*^9}, {
   3.699892196739133*^9, 3.699892207550579*^9}, {3.699892340308215*^9, 
   3.6998923426248446`*^9}, {3.699912998254855*^9, 3.699913014248931*^9}, {
   3.6999617422907934`*^9, 3.699961769597513*^9}, {3.6999619261955137`*^9, 
   3.6999619342380695`*^9}, {3.699961970279685*^9, 3.6999619913866825`*^9}, {
   3.699962916651224*^9, 3.699962919216872*^9}, {3.6999718790483117`*^9, 
   3.699971882982074*^9}, {3.6999720168987093`*^9, 3.699972043501946*^9}, {
   3.6999724628523846`*^9, 3.699972466056143*^9}, {3.6999727486221523`*^9, 
   3.6999727613286896`*^9}, {3.6999750250122776`*^9, 
   3.6999750432501626`*^9}, {3.699975190657791*^9, 3.6999751951644096`*^9}, {
   3.6999755750940933`*^9, 3.699975576863249*^9}, {3.69997572313762*^9, 
   3.6999757585838394`*^9}, {3.6999758902084217`*^9, 
   3.6999758970144463`*^9}, {3.699975944060953*^9, 3.699975953830305*^9}, {
   3.699976550894487*^9, 3.699976560301777*^9}, {3.6999767110220685`*^9, 
   3.6999767289109917`*^9}, {3.699977285638877*^9, 3.6999773069393787`*^9}, {
   3.700060720946223*^9, 3.700060754539377*^9}, {3.7000626013017244`*^9, 
   3.700062636890397*^9}, {3.700062715628064*^9, 3.700062720601387*^9}, {
   3.7000662283351355`*^9, 3.700066229889101*^9}, {3.7000663930875187`*^9, 
   3.7000663939192805`*^9}, {3.7000664652820415`*^9, 
   3.7000664655508456`*^9}, {3.7000718820539017`*^9, 3.70007188403332*^9}, {
   3.700071924209386*^9, 3.7000719359511027`*^9}, {3.700072004892273*^9, 
   3.700072039093115*^9}, {3.7001435922488775`*^9, 3.700143646843529*^9}, {
   3.7001437288079405`*^9, 3.700143811671055*^9}, {3.700146309194255*^9, 
   3.70014632442586*^9}, {3.7001468230662274`*^9, 3.7001468445491714`*^9}, {
   3.700147357215391*^9, 3.7001474156717176`*^9}, 3.7001474458349667`*^9, {
   3.7003191724626827`*^9, 3.700319176018262*^9}, {3.7003192358655863`*^9, 
   3.700319236266158*^9}, {3.7003193930596204`*^9, 3.7003193942278056`*^9}, {
   3.7003194931190863`*^9, 3.7003195016286917`*^9}, {3.7003269892728567`*^9, 
   3.7003269900579233`*^9}, {3.700328736964608*^9, 3.7003287386633983`*^9}, {
   3.7003333976435413`*^9, 3.7003333977436113`*^9}, {3.7003339870983047`*^9, 
   3.7003339878781924`*^9}, {3.700334650808528*^9, 3.700334651020883*^9}, {
   3.700334832073936*^9, 3.7003348334538918`*^9}, {3.700354474863182*^9, 
   3.7003544806832075`*^9}, {3.70035451334758*^9, 3.7003545140486207`*^9}, {
   3.7003893137641163`*^9, 3.7003893160998383`*^9}, {3.700389467078298*^9, 
   3.700389467793118*^9}, {3.7003897110903196`*^9, 3.7003897112994213`*^9}, {
   3.700395823490224*^9, 3.700395854046029*^9}, {3.70039600652056*^9, 
   3.700396006716973*^9}, {3.70039737508914*^9, 3.70039738568336*^9}, {
   3.7006512207269144`*^9, 3.700651220925476*^9}, {3.700656028437305*^9, 
   3.700656029670124*^9}, {3.7006563975796876`*^9, 3.700656399035971*^9}, {
   3.700656629427703*^9, 3.700656629658712*^9}, {3.70065678632858*^9, 
   3.7006567870069304`*^9}, {3.70065714209381*^9, 3.700657144935809*^9}, {
   3.7006595316225877`*^9, 3.70065953234543*^9}, {3.7006600850848093`*^9, 
   3.7006600853222904`*^9}, {3.7009345898606834`*^9, 3.700934648015918*^9}, {
   3.7009347469445934`*^9, 3.700934747781438*^9}, 3.700934882971218*^9, {
   3.7009476123036137`*^9, 3.7009476184231544`*^9}, {3.70094825788235*^9, 
   3.700948258100619*^9}, {3.7009946168803635`*^9, 3.700994689116935*^9}, {
   3.7009947236071196`*^9, 3.7009947800166116`*^9}, {3.7009954107260523`*^9, 
   3.7009954172310753`*^9}, {3.7009956030817113`*^9, 
   3.7009956075622163`*^9}, {3.701000739880352*^9, 3.7010007403494806`*^9}, {
   3.701004706715315*^9, 3.701004706915885*^9}, {3.701005679539564*^9, 
   3.7010056812090783`*^9}, {3.701006465624614*^9, 3.701006467093501*^9}, {
   3.7010065009905224`*^9, 3.701006526523307*^9}, {3.7010065699638844`*^9, 
   3.7010065746990943`*^9}, {3.701006639642932*^9, 3.701006645830961*^9}, {
   3.7010070039386406`*^9, 3.701007005022725*^9}, {3.701032182362971*^9, 
   3.7010322575669966`*^9}, 3.701032340448074*^9, {3.7010329252050333`*^9, 
   3.701032942044774*^9}, 3.7011153608174295`*^9, 3.701115573497834*^9, {
   3.7011747564289427`*^9, 3.701174808704857*^9}, 3.701175039549576*^9, {
   3.7011761980551662`*^9, 3.701176202714489*^9}, {3.7011797677237196`*^9, 
   3.7011797717419724`*^9}, {3.701447727435988*^9, 3.7014477306086226`*^9}, {
   3.7014494577309947`*^9, 3.7014495043592515`*^9}, {3.701460018487322*^9, 
   3.7014600189873734`*^9}, {3.7014601031680517`*^9, 3.701460106371515*^9}, {
   3.7015645427814426`*^9, 3.7015645442616243`*^9}, {3.7017736547921658`*^9, 
   3.701773655073638*^9}, {3.7017737314736786`*^9, 3.7017737322548685`*^9}, {
   3.702041033670045*^9, 3.702041034326359*^9}, 3.7021428325728035`*^9, {
   3.702142940667242*^9, 3.7021429479343905`*^9}, {3.702154882690512*^9, 
   3.7021548955319834`*^9}, {3.702157549509489*^9, 3.702157558206582*^9}, {
   3.7027391443688693`*^9, 3.7027391478067293`*^9}, {3.702746099739462*^9, 
   3.7027461428999844`*^9}, {3.702746635825549*^9, 3.702746642295605*^9}, 
   3.7027472974676585`*^9, 3.7027481663852615`*^9, 3.702748912661572*^9, 
   3.702750453960754*^9, {3.7027593094138603`*^9, 3.7027593186962123`*^9}, {
   3.702759916071512*^9, 3.7027599710713463`*^9}, {3.702760667226021*^9, 
   3.7027606750850725`*^9}, {3.702768112021253*^9, 3.702768115881301*^9}, {
   3.7027693579353514`*^9, 3.702769475770018*^9}, {3.7027696053533545`*^9, 
   3.7027696239619756`*^9}, {3.7027698620375657`*^9, 
   3.7027698669858847`*^9}, {3.702813142683278*^9, 3.702813206141227*^9}, {
   3.702821052229452*^9, 3.702821053073323*^9}, 3.7028213337485895`*^9, {
   3.7028527287938232`*^9, 3.7028527512760854`*^9}, {3.7028528117777605`*^9, 
   3.7028528396540008`*^9}, {3.702852886936067*^9, 3.70285297679482*^9}, {
   3.702853010122706*^9, 3.702853067615904*^9}, 3.702853379497079*^9, {
   3.702854178247484*^9, 3.7028541845762777`*^9}, {3.702854740572877*^9, 
   3.702854795151185*^9}, {3.7029122627743196`*^9, 3.702912294633684*^9}, {
   3.7029140270327754`*^9, 3.702914037094586*^9}, 3.702915530474453*^9, 
   3.7029179809822474`*^9, 3.7029195835327263`*^9, {3.7029220320901794`*^9, 
   3.7029220401533804`*^9}, {3.702922102266024*^9, 3.7029221232031937`*^9}, {
   3.7029225213998384`*^9, 3.7029225241885166`*^9}, {3.7029225661478033`*^9, 
   3.7029225710727324`*^9}, {3.702939995680356*^9, 3.702939999207704*^9}, {
   3.703196510687357*^9, 3.703196514187719*^9}, 3.7031975910895567`*^9, 
   3.703435362150888*^9, {3.704392955514207*^9, 3.704392968286969*^9}, {
   3.7043933019760914`*^9, 3.704393310680048*^9}, {3.70490168329694*^9, 
   3.7049017155523186`*^9}, {3.7049025549055176`*^9, 3.704902557811951*^9}, {
   3.7065412725958033`*^9, 3.706541276424341*^9}, {3.706832913468275*^9, 
   3.7068329331423693`*^9}, {3.7074382491640778`*^9, 
   3.7074382540905156`*^9}, {3.7087224318703475`*^9, 
   3.7087224813105536`*^9}, {3.7087810502205048`*^9, 3.70878105454676*^9}, {
   3.7087876664094887`*^9, 3.7087877175862865`*^9}, {3.7088579997815742`*^9, 
   3.7088580027350473`*^9}, {3.7095814451302214`*^9, 
   3.7095814528968334`*^9}, {3.7096419775809536`*^9, 3.70964198078423*^9}, {
   3.709933450063184*^9, 3.709933483738732*^9}, {3.709933666863552*^9, 
   3.709933681716885*^9}, {3.7105254731058364`*^9, 3.7105254834320354`*^9}, {
   3.7226396418610864`*^9, 3.7226396596136284`*^9}, {3.722642307712639*^9, 
   3.722642314239343*^9}, {3.7226428204104476`*^9, 3.7226428231920304`*^9}, {
   3.7244147064258547`*^9, 3.7244147370391693`*^9}, {3.7244148271226616`*^9, 
   3.7244148318866544`*^9}, {3.724415060091154*^9, 3.7244150630546727`*^9}, {
   3.7244153177885265`*^9, 3.724415319022226*^9}, {3.7244159656861143`*^9, 
   3.724415966693798*^9}, {3.72441623814633*^9, 3.7244162394868937`*^9}, 
   3.724417614607323*^9, {3.72441953385807*^9, 3.724419535061269*^9}, {
   3.724441034093484*^9, 3.724441038652353*^9}, {3.724454023235179*^9, 
   3.724454078076432*^9}, {3.7244545074825325`*^9, 3.7244545337307544`*^9}, 
   3.724455041430977*^9, {3.7244555275123997`*^9, 3.724455531778487*^9}, {
   3.724698959366644*^9, 3.724698963669801*^9}, {3.7255776196904435`*^9, 
   3.7255776248055162`*^9}, {3.725578099989299*^9, 3.725578149375029*^9}, {
   3.725580871314521*^9, 3.72558087313857*^9}, 3.7255814229405055`*^9, {
   3.725583585675892*^9, 3.7255835956376405`*^9}, {3.7256342271149173`*^9, 
   3.725634253881558*^9}, {3.7256344898329463`*^9, 3.7256345364351587`*^9}, 
   3.72563479290958*^9, {3.7256354802469587`*^9, 3.7256355072319*^9}, {
   3.725737232853419*^9, 3.725737239603638*^9}, {3.725917715580911*^9, 
   3.725917716049711*^9}, {3.7259178111424704`*^9, 3.725917817837238*^9}, {
   3.7259178841397552`*^9, 3.7259178884825573`*^9}, {3.72591792196271*^9, 
   3.725917930572539*^9}, {3.725918431126296*^9, 3.725918436145552*^9}, {
   3.7259184717853966`*^9, 3.7259184972789555`*^9}, {3.7259202922381396`*^9, 
   3.7259202992377615`*^9}, {3.7262284908003945`*^9, 
   3.7262284914880486`*^9}, {3.7264274119649525`*^9, 
   3.7264274123729424`*^9}, {3.726427514239694*^9, 3.726427514644912*^9}, {
   3.7264280048550606`*^9, 3.7264280052219906`*^9}, {3.7264280931911697`*^9, 
   3.7264280938067493`*^9}, {3.726428259631044*^9, 3.7264282612219687`*^9}, {
   3.7264289902829485`*^9, 3.7264289903342476`*^9}, {3.726498477024164*^9, 
   3.7264985099086027`*^9}, {3.726502705206123*^9, 3.7265027058342752`*^9}, {
   3.7265101801671357`*^9, 3.726510212693674*^9}, {3.7265115377043333`*^9, 
   3.726511539107044*^9}, {3.72651162663391*^9, 3.7265116276085033`*^9}, {
   3.726587513233105*^9, 3.7265875175492587`*^9}, {3.7265875799336557`*^9, 
   3.7265876022933683`*^9}, {3.726769569462705*^9, 3.7267695743094177`*^9}, {
   3.7268516775365953`*^9, 3.726851678085493*^9}, 3.7268517500613112`*^9, {
   3.7268519479441695`*^9, 3.7268519481028485`*^9}, {3.726852094308806*^9, 
   3.7268521209673414`*^9}, 3.7268522649291644`*^9, {3.7268523347609673`*^9, 
   3.726852413620755*^9}, {3.7269510971021957`*^9, 3.7269510978212023`*^9}, {
   3.726951248232233*^9, 3.7269512497962675`*^9}, {3.727102731322988*^9, 
   3.727102880437241*^9}, {3.7271785717071185`*^9, 3.7271785743064766`*^9}, {
   3.72719294987764*^9, 3.727192950516136*^9}, {3.7271930071022234`*^9, 
   3.727193007459929*^9}, {3.727624021447632*^9, 3.727624027732319*^9}, {
   3.7276241090307913`*^9, 3.727624127363038*^9}, {3.7276241737416573`*^9, 
   3.7276242060944*^9}, {3.727624571213664*^9, 3.727624576937119*^9}, {
   3.7276313606431255`*^9, 3.7276313646591897`*^9}, {3.7276314750824203`*^9, 
   3.7276314826839924`*^9}, {3.7308366457095375`*^9, 3.730836655992031*^9}, {
   3.7308367540198956`*^9, 3.730836772224825*^9}, {3.731000659218853*^9, 
   3.7310006633286905`*^9}, {3.731707088860606*^9, 3.7317070916206465`*^9}, {
   3.7317085893226295`*^9, 3.7317085901790867`*^9}, {3.732291821208096*^9, 
   3.7322918239896593`*^9}, {3.7322959056858225`*^9, 
   3.7322959117474856`*^9}, {3.7329742570661993`*^9, 
   3.7329742603164625`*^9}, {3.7355717023960295`*^9, 3.735571774373193*^9}, {
   3.735571825566152*^9, 3.735571827045878*^9}, {3.7355718603743305`*^9, 
   3.7355718669850693`*^9}, 3.7355719194645*^9, 3.735571954765859*^9, {
   3.735571997936364*^9, 3.735572011703212*^9}, 3.7355720485810823`*^9, 
   3.735572181377735*^9, 3.735572464108286*^9, 3.735572673825591*^9, 
   3.735572894478374*^9, {3.7359000241145926`*^9, 3.735900106181577*^9}, {
   3.7359001457821264`*^9, 3.7359003880873213`*^9}, {3.7359004584428167`*^9, 
   3.735900458845069*^9}, {3.7532000649261513`*^9, 3.753200065630517*^9}, {
   3.757934951948804*^9, 3.7579349679613247`*^9}, {3.7580250766131563`*^9, 
   3.7580250836553507`*^9}, {3.7743717509305687`*^9, 3.774371751818889*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"556f8bca-0d77-45b9-9642-83bb7e0c7271"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"n", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"ndot", "[", 
         RowBox[{"n", "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"n", "[", "0", "]"}], "\[Equal]", "nInit"}], ",", 
       RowBox[{"WhenEvent", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"t", ",", "\[Gamma]"}], "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{
          RowBox[{"n", "[", "t", "]"}], "\[Rule]", 
          RowBox[{
           RowBox[{"n", "[", "t", "]"}], "+", 
           RowBox[{"noiseFn", "[", 
            RowBox[{"n", "[", "t", "]"}], "]"}]}]}]}], "]"}]}], "}"}], ",", 
     "n", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "steps"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.742581908017624*^9, 3.7425819539343414`*^9}, {
   3.7425820409527364`*^9, 3.742582071141328*^9}, {3.7425821936292276`*^9, 
   3.742582199096757*^9}, {3.7425824138473473`*^9, 3.74258241409033*^9}, {
   3.742582483779008*^9, 3.7425825085564356`*^9}, {3.7425826104527016`*^9, 
   3.7425826422337823`*^9}, 3.742582674490565*^9, {3.742582735086889*^9, 
   3.742582735305276*^9}, {3.742583251150956*^9, 3.742583257189426*^9}, 
   3.7425842626334124`*^9, 3.7425843421737537`*^9, {3.7425849410427675`*^9, 
   3.742584948902347*^9}, {3.74258818461252*^9, 3.742588184752898*^9}, {
   3.7425883817889166`*^9, 3.742588384647924*^9}, {3.7425888891580696`*^9, 
   3.7425888910484047`*^9}, {3.742589138180543*^9, 3.742589144506484*^9}, 
   3.7425908844877896`*^9, 3.742761448751457*^9, 3.753199976333802*^9, {
   3.753201227549531*^9, 3.753201237675119*^9}, 3.757805911709093*^9, {
   3.7578059904537687`*^9, 3.7578061082680893`*^9}, {3.7578062466982193`*^9, 
   3.7578062930751905`*^9}, 3.75780651491543*^9, {3.7578065557380114`*^9, 
   3.7578065647132874`*^9}, {3.757806889413206*^9, 3.75780689568419*^9}, {
   3.7578079329453087`*^9, 3.757807933139784*^9}, {3.757808330540619*^9, 
   3.7578083728917065`*^9}, {3.757808409205169*^9, 3.757808481476754*^9}, {
   3.757937785539802*^9, 3.7579377862271423`*^9}, {3.7579494739378347`*^9, 
   3.7579494741096663`*^9}, 3.757949627425101*^9, {3.757949707557269*^9, 
   3.757949707775853*^9}, {3.7579500254902277`*^9, 3.757950025771703*^9}, {
   3.7579501206288137`*^9, 3.7579501207847643`*^9}, 3.7579506554944715`*^9, 
   3.757950789420272*^9, {3.7579515484650183`*^9, 3.7579515504553113`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"098f55e8-87f9-46ca-bdeb-e23e8f47aca8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Indexed", "[", 
       RowBox[{
        RowBox[{"sol", "[", "t", "]"}], ",", "i"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "steps"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "steps"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "l"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(n\), \(1\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(2\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(n\), \(3\)]\)\>\""}], "}"}]}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "12"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "18"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.757935573319528*^9, 3.7579355791150494`*^9}, {
  3.7579356333515587`*^9, 3.757935812835133*^9}, {3.7579360148212886`*^9, 
  3.7579360279093137`*^9}, {3.758021299332993*^9, 3.7580213285743604`*^9}, {
  3.7580222026103745`*^9, 3.7580222213402414`*^9}, {3.7633933326192856`*^9, 
  3.7633933330723057`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"20716cc6-5dd5-4732-aefe-64814640c22d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
XoGQXFsfFPqvxYxRQAXtztCNfO4+eNhL/9Heq1T40fSy+1igD86HvJiccyf9
1W2FwytifJCt/ijDxIP0e9VZShnJPnjTs+pXCRlvKRlnsB/zwb4XZi5TZFyS
XbH7T4kPTlC+RyZ70sEx+e+XpKs+GKmu4/SEjIViXMt+3fHBfkXhRXYvOpxw
F/03+8wH79ftfZVIxkZ28bei3vigyzZ91TtkzG4y4PGV7oMPL524PUHGzaC2
JmzSB+3LSnxEvOlA0Sxo+/zNBz+8++BhRMYa22YiA5d8cNziWHM0GX+VNpOZ
5PbFHS/W7F0UJOC68PU3Pmt88a7U+IkacQL8+XmOjIr74sU3p/5ybSHnO4e/
mscWX5xY/2x57XaS5352vGds98ULtg8H3+gQYDeWakA19EUxovZHtCkB+k0/
uXrDfbF5e+i/uDBynnt/0DhP8cXHN87W9MYSoMo75Ot1xBe3Z/LpzB0i4L+7
z85szfHFy/Kvt0wcIUDS+f7T2SJf3DTAPVx5nIANHNVzzeW+eOqqyOMdJH/w
Xy+Sy7rmi/c9pweunaYDp02mnWW9Lz78JyEvUUiHxd+xGaKPfXHND6sb5wvo
8P2Sb8PoM18898NKQiqfDh+N7cav9/lir+AZzVu5dBi6oG64e9wX559csZs6
QYcG3R+c3nx+eL2rzaknkw43RkfVt23ww7rmh+suZNDh8vE3PnOSfnh+u2ZO
2FE6XNjx5PRjBT+8dSQi3/gIHQpotzuy1PzwkhRrXCmdDtnpFbOWu/xwt06R
s0ga6f8VC2TFjPxQ+XJy+j01BsS/SbV9b+mHUccZNzwUGRCWGHH0hpMfivq/
vmMmzQBfGY/6WB8//Ovg3ZkkQvLcC4ux3WF+6LWpTuajAANMxFQM+tL8sKzj
5M/Ev3SQb5zmmL/qhy7vn/WYjdBhkxdDreWOH25P6Xm+n0aH9at6vLMf+WHe
lryzcf104LvzqNCq0w+/3hslBrrpwOF0o12s1w9nNpVr+3bS4Tdb8Y/3VD/0
je/02NxKh281JzbXvvfDDqP5yrKfQ/DRKskmbtoPX0ptHY5eTYXhX0FH9iz4
oUdzxoOGzVQYrHC6u5LNHycMzg8GaFPh9QHj932r/DGUy60735QKzecV9vps
8kezmxMyZtGk/up8YD9m6I8aPMt/3zZSIX9kcIe1hT8y7uCNkyQPZB175iXu
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
e6WqIw2n/nOU3jQihAxnuUO3nGk4sFi0+kM1F9auM1y62Y2GM6OWUe+/4sJn
W8/Obxto6J5731jjIxcy11Jy09xpyFQ4+mBwmAtgVbJj5RYaah+dfGLNdB70
rX6n/HobDeN1fggmL+ABGi1kye+kYfFaD43Z63jwZYUzXvWhoQP36tagHTw4
uyx8zMmXhiavUkptg3lgu+R8ZbcfDfdN69AvieFBv05DGHMfDfNaOipzT/Dg
3MJefd39NFwi07xocQ4P7DSVOh+G0LBjBs3WtowHA+oWuXsPkvuSvnN/1vHg
/GzfHVLhNAzXS57J8hOAvQpH+WIkDV+deL3EKYj4c8XylzZHaVhp3unaf0AA
DtOkMDaGhg0BIY2fjgjg25+L+sMMGkpHTD57lfj/ZfvKHgaxaagkznu5M0kA
AW9qdgmSaLh7w9eosRQB5K1+MuyaQkP2Fx9NVroA+Jea0utTaSh/O9HkX4YA
Zsm3Llt5ioblr3JWBZ4TwPrDfY8vZtDQ1uUvqy5bACzx8G7lszQM8br0379c
ATSskx6lnaeh3g+rpEdzJTB2QzHjZzYN1VOcxJ7Eb5jO1VgRmEvDn5FVBxIH
xVDSZ7rXpYDwZSTzXMRTMaSlBb5QLKNh1tbFOZw4MTz/HelPvUHDuFnjmesO
kH3jl/h3qJyGuioet457i+GY6XkjbhUNva9kMMzWiIGsv5dONTTsnfF5551l
YuiTrdh3p5bwK25Hw5X5YtANv/tv2V0aKrtf+vuXzIPdghdZOfdpKF7s73uH
6KHzdlyTmQ9pmNQ8GM0/3QrNpR9fJz6m4QmN7Lttka2goPY16PtTGr7PmGlb
u6UVHBP+TPJ/QcNZQS6tfmatQOmZmtPykoadF5aebZnTCrXuquaOb2j40U06
RP6PBFbqrAhZ+p6GJ8scGm88In43xVLmwgcaenydpKV6lfjFX+vyFPg07Avl
cZelSWD2893NX8U0DF6+oMCb+D93owOhe9tIPSquWB1YJ4Hk7CjZ9x009DHy
ma2xUgKPpRmXHLpouC70knbwHAlMhKavqe6moeOmF9SNk4jf5ua0LPlMw0nx
3bkFMhKIhKthWV/I+776ZC8m87mspEpu+iCJN8C61JYrhm7lhwVx32h4+0rm
+NB9MSyMfWM9OETqdcOnw4zsd+8uIXfPL9KvEadqZMk+fl39Q95+jIbGTOGI
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
d6Tn1mbKwMXwk8/0AhqFtsLFSQQPtf88u+sLyX0dE03EMTJgwgzVp5TS6MdX
uVFA7r/GNvZS1UMavZYV6TiT+48d+nFWUAWNgbrmf5Y5yaCh2v3B+Cc0Lk4V
h2QTPBJ49/8pfUrjaI0zmWEEj/Xrp0j8qmksmBTbfIXgMXFKdIBaLY2rD6oE
mmvIQNrS0Z9fT6PTxsIyLYJPSvaa096vCX9usCmndgphy7572kqNNK7kzjxQ
f0gIhot1M7MEhC8JiTmpHCFkPG2r6pfSOC5k/cGOHCFkvw0fmtRG6tnU/HBH
lxCCbrw/Y9dB5tEC4+ilP4Uw+18Xo7YPNB5Y15BTMVIEny1v53G7aQwZPJTU
pC2C/F/j0fIzjS3vUq+mmYgg9PGRV7KvNI7RqpyhMl8ElpzmLdG9NB4cErpF
C0TQ57q8Z9YAjZEm0xZOrhFDsXbO8YafpL6qjXs5tWI4qhg7+uhvGh2+3LVr
rxfDkmsHU4yGcFH6uV1zwWviv+c5lu4dzsWcwjsHU/lieL5KMqAxlou2lg5r
nsvFMDHSOIAzjovBa/7u5zWJIaAgWKQ8gYt/gvzWrnorhpL2+04ROlyM9whY
+If4fzXdoUUDk7iYctHP73qLGDauXjVt/2SSbwFPz7FNDDmRSQnd+lwsHfE7
jd8uhsGCt8oBRlxsCxpj9We8FFb9N2v/e2PyvoWBi1TJfruse+D95ulczM7i
rLch+61ndbm7yJSL5xvK0+OHSoF3b+3cOgsuGmz6d/jNfjL/osK7C6246Oqe
h3tbJGBc+GzzXBsuNgZ+a8hvkkBYx9i67CXkvgvbSjSlEqjS22Q7DbjoUz5t
Pk8ggQmu17PTHLjYc9f8yMw3EvA/+WmS7jIu+lq2iprrJFBUaM1JcOKiof7r
S/nVEhjRGT2g8Q8Xh8kfHra+pACvyS93cVZy8bHf48roCAXcdJ0oUl7DxUiX
XbtO+yng50k/pwg3Lv6yO/EEnBVwqbPPZP86LtqtYmRl44j+KzJ4v9mXi55O
9Z0h+XKY82G3u2gbF//94fzoSjLRZ1PuVbjv4OLw7N1KO2Pk8Nrtz5w6fy6u
Tb6tWvKvHIxiXNKcdnPx9G+d2ReJPgu9f1ajMpCLSx4r3igtl8PjD/Ljtv9y
cavvcebTXDmM15/RXbiXi3hrdfWgvwJ2uO/bPHc/wSt6ybYLKxVQGFNam32A
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
ddQg0Tv/Axj6cOs=
          "]]}, Annotation[#, "Charting`Private`Tag$3732#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81f8XtkIUDWWkhYpCGZFS5xjZ2Tt7b9deRRpWJaShCJVRSdIQyQpF
iMvFXbbqiwghNH6f31/39bw+r/fnvj/POec5z7PbJdDUnY2FhWULDwvL/38n
534baHksnLjy/lTDl+iXEFwQpaCZ3w19R8syxepfQSTvdw/h/FFYyXbcu2lD
BcTUFLJw5M/DnZDgzz8bK+HPrQunlvPYcV5nw3+XQmqhhmNufj5vMwoYhVb0
3WiCXt7bTDa6AKamC8klCnyE6U0nPmzcshU5J7SMet9/BE6RsbJdRoKYn8LN
3UxqgR27U+4cTBbCoWiy/KFtraAkeejiiffCeOWBxdX5hlYwPNjrf+qPCDYI
azvPe36Cs8fF1HyDtuPxu3yP9B61Qabmx/3RT3agYOtv9rMn26FEP0AgeXwn
5h+++D5voB2mpZkh3dK7cbBio/5trs8QfajsG61lN1LHJHWcbn0GTsUL9iMe
Yugcb/ofy6ZOyFC2JP/HLo5N5aKZNZadsOOYlPZsnjiWdKVLT2R1wuMTv9/+
Oi6BntdPOlpzfQIl9c+HWOgSuH4P72jP+U/QcPJ+AVfkHnyo/f3A09VPYKgb
JsK/ZS8O3XtlMhrUBjQDnWtby/eiJ3XNcvR4G3gYb+PYYbQPm4d4N0dZtkOs
Vf136WRJfCplJtBwqAN4Tme6KO6VwsoM3YOidzrgpoNn37H3Upjhm927wvIZ
St3X1+v92Y87qu7F+n34DEe9hw6b3jmAcVJZHCmbO6HZ78VjG2VpfNkWdFlR
vRNMSQk7nXuksT5HMPptYCcwQ2wyvYJkcGSqOFkiuxO8IqTXkvhk8Zkx298N
L7vgZ/S/sxFPZHE7T86mEUoXnIslz8XqHMTh5utNzMUuWHe+wDNh/CDCbGb8
WkEytKmrTmupHcKxIK1cHyUyZDQWFLdeO4T5LlN2nBZk2PExcjtZWg6PCpYp
s6WRYUx3pM8iRg6jD3+x8Cshw+NP+hnUFjmk+CkJ7PlIBqXPO7iGPeSRpPfd
6MYfMvw2Tqp3e0Xgpf5lC8FuaCDPxnxjV0C1HKN7EYe6Icn8tJKfqQLue/Hj
0l+dbjDsbfwxk6eAqp3q89NO3RA3aG/Dt6iAUfcP3T8e3Q1l3xbrpfUVUfDs
UH7dYBcMzV7br5+niIZyB4bUV7tg46rkde8FRRz4/LxcaCsZ1DkaVhP1DmPj
iL2A9iEyBK8/7VaYexjnG8dnyLpk6Nl59fCorhLej1Do2BJDhjVSe++x5iph
zRaVKUoG8T3ytZy7firh4T+Zj9c8JsMtzdk+u3vK+K7O70tjLxk+nkrBmHll
9NuxLtZuigy/LMUfZekcwZIsx+kQ1m6Qcqre+CbnCBptuvWXb2s32HpbRPfO
HcFdZsN2cvu74XLw9MhPbRW8rvZ0830hMlTHJOpvzlFBjsv58wlSZJi6uOul
3JwKftKk79x+lAzbUytFjbWP4g3NS00eemQwvGV6KSD7KPJeqvvjbkuG2LzJ
71dmj+K+xZMDoj5kGCrfXtty9xg+fH3JrzKJDBurX+/79uMYrumyHb9/i+Cn
ySiNU0sVI1mSb+sXkiGk49svibuqOODBc/LVSzI87It31vihimtAu2C4gQyU
IZFW55PHkZ8/1ZbcSQbOiRfy5+4cx7apt3+SBgi+5g3u3ps5jq1WT3dzEXx4
/h5nf6d5AmlHGD8t+clwe02cHz3rBNal+/3J2kTwxydEWZ4+gS/0hFPZiHrt
361XqJQFOFzodhm2k+H0/lE+i2nALLpk8cbdZGgWrnlbuRuxqVGglGMPGZbE
rCT6wxEjv8bv1ZUhQ1rRA2vPfEQnffeY23JkkJT+cWXxE6LioTOXOIj+ritT
rb+0iLjBO1fjCsGn9eHkBYHdajgzvFAjC2T4UUmReqivhlkfvnJOapAh+YSY
g0K4Gg4VSUvX6ZBB7H1ARkOeGl423qbQJdIBVdpvm00+qWHe7o/77eU6wLSN
a3VoQQ2ZQrvFGNodMGlsfpC0Sx0vzbb8POXQAaK232+lhqnj7yRq8drLHfBy
QKVte5463tLm1TXL7wAD1wSWp63q2HR6XP1aRQec9dvp/WmnBuZ5lLQyRztg
66xvjq2eBvZkxIr+WO6A0rA3Xf+FaqA2t6jpT/7PoLXCwRmVq4HbH5UbT+z5
DAOxJke5WzUwyor0p+vYZwhnvxdw66cGxi6cP/7E5DPwJ03c37tTE5dNr+Yv
/dcGxeuU+17pauKm9YIrhdztgOkXeE+GaiKP+6mz6/e1w4eBrSfYsjVx7bOw
mYMa7WAo/ZhU+14TtSNuX97i2A72HzopKptPIsvGdMmDN9thTMCNe+noSRxf
Hktxf94Ofi5LR1+6nMR7HYqdrm3tEP1ne55s+Uk89AMCqlk7gFX/OXmSehLX
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
I2tzN+zJ4USZdcThq8sWRmP7uiFuyuSDtb1xuGBEtqDarRsuBwb/XSqOQ6dr
a7+gbzc0NgtR/UMczhg3XBtzuBvGLfbRVUbiUF+OGnAspBs0i14/l/sWhyZq
H88tJfvIcbql3L9fcTh7Re6V7JhuCA8vtf8xGYeZwt1HGijdkNetdeqTZDwe
fHymUJjaBS83ZjUIZOOxQHbwdUx6F3y5oaDSPi0en+m7B3w90wXz58TvqVeO
xwWvdyfanu0Cm/ivmc9U4zE8LNE44lwXBPb78irnx+MrnT+H2DldkLmtfUHZ
onjs+2M9PyqvCwY1HufnrohH6yC5EsnCLpjJNhCl68bjyTUl7ucudsH6z0VL
Ew3j8fsHqtbcoi7w2a8WQDGNR5my5w0nLndB0uOkaxGW8Xj7beW66itdcGeZ
xHCgdTzeazLXHCnugp6UsLU+m+Jxe1z/DulrXSA31n/M2TEev3GpTInrXaDv
6VK+fWc8Ot3bbP4psh1cXtX93LgvHutPiE6pMdqBoWdlZnGAxJ97PO9zSju0
SiyvWu5H4knT0cq93A7/As5LLDocj4scKcejytph+bsZNqrB8fgj+uDuqQ/b
Ibrgx0vJqHhsZ1PKsLEdLsofUhiLi8d9CeG0L7x2eHusy3GEFo/qA7IpLqJ2
+MnbniJmx+PDZYrvKUPtsMj66buOpHi86TJ7s9+Pdth8zWT2u9PxOH/hxnb5
v+0QqnJt38vMeLxM+borRJYH56MXZj86H4/OrRLMczN48EyY2nk7Px63XSr2
qHzOg3jdVatPF8Vj3aPjWf6veWAa/Tw26Brp1zf23bG3PCiZObFwRXk86lA9
k96950EG+njmvYzHaBXpqwF8oo+S/pTGvI1Hhujnnv0iHsi1Z0k6vyP9N6br
6vfzIDb4beGsznhcF7L9avEnHpg88P/2pZfkox12aNMID77IStrWi+OxWPXT
yfdfeHBt1/mM6x/ikfNalLb1Gw9884z7OCPxuHLlNYm7P3ig8bHB2P9bPJYp
eOjRm7ug3fgwy2YsHmvd3Kfav+2CNOqUtsV/4tGi9s8teNYFjnV5y/5KJmDR
R5lpPg+7QFbN7ESnbAI6brIdulXeBdW+719VTEvADM2LoHujC4wmpx4OU03A
Ha7ioULCx5FNhZU75ifgzGbaqnNZXVCcbjFNd1ECMgaiyirIPKivOlYyuDwB
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
ffcrqIvA933j5tJlLHzsFMBX1BDB74ScZu2VLLzmy70ltZjcx9UBntmrWTju
GKcxtEQEK3iGQ9PXstCePn7sNdE31cx/kTR9Frpd3P2gnei1/QZvpH8ZsvBN
S9OPIaLXRnoyU46YsHDftP4rwz+FwDzpvYBvykKPk7ytnUSvqZvqXtljzkJe
i7vX3Ukh2J9+XmWJLDytuOuaCalHkc33YSV7Fl4oKvhzhOR3IlB/+31HFlYs
v7JxCtFr9meCSr23s3Dq78zqRJKvetX1mYq7WEh7df7TP6LXRvoHQ+/sYeHZ
e3IWvnNIvEo6ze77Wfjb/OnSinkkP1MfYzkXFm54WqhqQ/yVr1d+ZpkrCzfm
P1IzIv7KJLH7l4sHCy827S/VIP5K7vZ85yneLLyTckpGmvirjs79lTd8Wbg1
TdJWQHDCmqZYicMsTMgtWZK0nfipxheSl4+zMFqju+QC8VfnxqV9tkeycLe3
eu5+4qcCNa2ejUWx0Fd642UF4qc2OMQvLYxlIcvlxacKgmcef8BySGCht1dk
kvdewvecsYHvVBbeXH+YOuWDEO4+N96Sx2Dh6uf1/SlDQuCMhF7bxGbhgdyA
z1KkHy5zS6d95ZJ8HyfbuJN+rMbhwHNJLHyY+ptdSPrxN2BlvU0KC7V2rnRt
JP24WHkpNTODhTGdy+Z+Ivo5QiT4ClkstNBeuoZH+rFZcdHuD9ksXMDv0Lkt
I4Iht2xViwsstPw7MLB6GvGrrNaIvgIWOnhYPKqbTvTPf7Paky+xcGaeZaKr
MtGX7TvMTK+w0H0l5Q1PRQTGksnnBFdZWBzm/EdYIwS5lW9+J5awcE1kwpvj
L4XQsUvOzeg/Uq/MnYsH3ggh/hJtEbuche/VZZ+GNAthR91jit49Fi6c9fcW
t10Imj8nBbz7LOzQeBvE6hISvRd5afVjFm5Z991DVyyEsyHlMq1PyPOzz6d2
DhA/kf3VP+EZC8cc7x8O+iQEpU9HVjS9ZuE5TtYix1EhCGddTYx5y0LNHSuq
sn4Iodyi/5N2AwsXWek+eDsmBJaf1tb6dyy8oVeYtFNPBE7Jnjcjm1lY+syj
/5s+0Xf3cpWWtLEQXXJVThoSPd7bEVLLY+FiP4rbXKLX8/X3Gi7sZeHaaGGk
MtHnoS5pGS8ELLRN82+LI/rclt7wI1jMQhXl9eECos8/NG+pqPnAwpFZZseS
LEXw8A9LLXCI1E+nZWfzBhEk6zyLVv3MQk+z+LBZSPbVdsmuqq8s3BOroGxv
JQKDExssA76zcJvfU88T1kRPT/eMF/8k+Yh0vE7aiIg+pD72HCf56v8tePuf
CPaaXpTo/k3q7zNUufwm2cd1z6yc/5L5TuUbpJSQfeTTT2uRYGMjX+L1v2tk
PsemPtspzcaf7zoto6+Se6HlYGcvx8Yts9vfnrxM/FNFIPuFAhvfQHiQZpEI
/m5NfmU9nY2C+rf/nlwk83ninb25ChufbT0/a0GBCJbM+Hby3mw2ynnOXdZ8
QQS0i7PrDOeysUbu6PYzeSIQmZrMKFVj44hP1gH3XFKv+v3bV6uzkWp8e/7a
HLI/fKJSizXYOPtQ54Gp5N7Jjp97p72Ejb2BR7QDCN8OJj9UKdBiY8eZqUml
L4TwSqtn90IdNvaEnfPqrhXCivv/MrKXszF9a/H+z/VCSNy2pFV1FRu9rq5Y
ONAkhK1Rvk4z9Njo0nHrXmKHEG7OYGUnGrBRs8+1aV2PEJQvXemQNWZjXIbv
1jqBEJrqP7r+M2Pjus/7HtweFIKhr2JejAUb/xh8apIh85sxvqb31wY2bqI9
zrT+LIQfydsXH7diY4reseTDhI/7tI95fbFhox7hbjzh4737aYWBdmzsN5vQ
iyd8nLe9XDS4mY3JLrOlS9WFECVu0fZzYOPQQfcJnaVknqJ++Qm2kvwPfF5y
cI0QzJXUrrjtYOOsLdm9x4yFkHNp/SBvFxsfndNL2WwpBI+GuMNN+9m4++c5
KQ9HIVT7Xri+zYWNDjN4Bwp2k3mbqB6qdWVjw4EHj8tdhCDWnhL81IuNUZ4r
D+8OEMLGyqWl4MvG1Q/kJARBQri8fdPXB/5s9NNett42XAhT+wIMTA+xMdhg
un58jBACohPDyo+Q9yuv/ppCFcJrpZJyvSA2DurVxEazhbCyqO5HSQgbvV9d
KWiOE0DS+s8mK8LY+Pz0lJU7EwUw3KB8oiicjee8XzyNzRTANj+D+0tOsDHQ
SSXWuVAApRO7J3Kj2ZixINjxww0BhC7Nis1MYKPU7ZPfVzwTwPvKikcqNDZm
PeZl9NQLwGhHx99kBhs93xm82coTwM/ohVQ2l42TOidlfYYFsF8ZaqSTSL+j
1oQo/hJARZGnNCWZjesZfLNICSHMN6fZTqay8UjeJakieSHENF5knkhnY6Wj
494sFSFcamvfOniGjQvrUqK0Fwihvmf6HKezJJ8pHnBluQDG+qx7Xp5jY4Cv
yi+pdQLQHI68vC6XjQPzBznSGwXg+L0k6MoFNsoYLDG6vksA4b8FJnML2eh8
fo7mpIcAXsk7vvx5mY0Kk4fMC6MEMKpMTfG/SuoZapf1mymABfPu7m+9TuKv
2B0umyaAIJ3Fg3dK2cgs3O9jelUAZ9fsLV16m41YNgk+5QJ4YpR44swdNlpW
nVqw6bEAZtt8lwuvJPGfimnEZgFssF/xTvyQjZy2iQUuPQI4uNM9e89jNi45
st7IcFAAqU7pXs+ekP7PMVtFGRBApcerFUbP2HhpgcyCRV8FIPb/8/XiCzbO
PLClnzIhgOlBBpWzXrMx33Kl6hVpIXjG5th/q2OjfmRXlJ0qmUf6OxWfRjYW
Lz2WUbNQCLcTZTubmtj464xOvZyOEGSzQ47caiP7wm/4wxjht15+kaFmBxvT
yq4eKiL8dr7S8ft0Fxu7ojQNl2wUQskd26RjApKveIJykvC79WHUHoGIjaec
Z7vHEn7/e3pTfWc/G8OvnTey8hLC8jcicfUg4avqN48Bos92Nc27ofeJjRKr
nmX7En0Wy9sanj/MxolH09c0Ef1SxKdZKn9ho+7ZvFg9ol/GRobqPn9n47+j
Ko3VRK9o/lyS6fGLjV8qJFO+qYrA4c8+94ZxNj5xvBY3j+iVvGlPRm7+Je/b
1Weznui3Vyo/72pIcvB5bejLdUS/fVVblZAszcGWRpe3y4l+s11+RilIjoO8
G69O9RO9FrS2tq1bgYNcl+ni20tFkGXy78LW6RzcMWP7p/BlZP9aGgU8UuKg
xNTnH1avEMFH20N6a1Q4GP120fvNxC/Ndswby5nNwTPnH8mWE79kuft9teJc
8vdqTxr3DxO/6mW5c2gBByvN5rvadoqhMiBUzVWDg+8D+18mNolBFHxF8GYx
B0UhvaoytWIwiZ8Zen0pBwtOt3Wl3heDJ9Nu/YLlHKQv7VuZXyaGxKQYqZMr
ORjfljrec1UM3ef60g6v5aCfxamR/nNisNZI0lMy4GBm3NUTs4g/ulxgUH/b
iINB9h8lwk6KYdpS3hGndRxUPCW7dQqD+PHiBPk/ZhwcR1hQGSiCllU6Vwos
OGhhV6ZSTfD6/97a2hFXYqnqJ3xO8JS7apQUW/L76yHT3hF8yKx6odEmDs40
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
RhFC+Jkhney7XExIEpasJPvmkuSHqI33Cd9Or8o0Jvum+Wjf268PuFisKz43
J1sI0h2CRXlVXFxeXtZZnycEA7ueUPsnXIx9NCfS45IQvP5XcXnHY/m9cZyG
jDJKVlkRZVckxLkkUiktTaFSVkNCKtmJez1WCkmRmRCRVSiJSCWjofGMWyjq
q4RSfuf35/XiOec+1/hc70/p28e/HsVC2v3cCy35WG9UehSymmIh64mMjGQx
D9URr3wcW2KhLqLWImcfDw3/ev7gTyueHxP4KHqIh5QPtcnktcfCGw9/k1Xe
POTwvNl9x8tYOMPdnWNykocKchvEb3fjfvP8Y3U9hIfezHuwf8+bWLihGj9L
+gLW17Dqkpm9sSD3drbudhL71d1lO124eJ5WCzbsvsxDyY3F+eICXC/zmqyF
6bgfjAonK/pi4VwjEq7KxP1wNc/x0EAsHFjhFGyA9VNTLDtT6iueh8kVS0Kw
fm4PuDFaMxwL+o0+YvmluD+46fae/8VC0wft9VqYF+5sSk2T/RkLzdlZ/EkD
3B9VycP1v3D9889OS8b8IKWVaH1sIhYK7vc7/cD8YJXASVKcjIWiVZHn5eyx
XnvHmPsJE+Aj+fjGXcwPrd1RtMoMAsaDeMXLXXno95rwT09FCPj7tKkw+Ajm
8QVnozVmEzBfOmDpWX/MLxcD3zyXJKAqmXIzwv6w8oefXrAMAf4P06ZXYn/4
2fVE6BJZAjSyJXfPjcH90ObT0SlHwGig8WVgsP9c5bk4XJGAlTlZbF0vH/nf
dA/SX4jPz9j7t/UNH2VJH2h9o0KA4vyXs79281FH8H6VaHUCFuoaclQ7+ejp
3mPjizUJKL1wlPF7yUcNq853PNYiYGbFrp097Xg//rwaPVOPAKvj//l3tmD9
6Sh0yzYgoOyx6aDPEz7KKKk1t11GQBy/4tC8x1h/jvYOR60kYMdCm+a4ej6K
3vC1WdOMAPfPFoOHH/DR+SWTmY0W+O9K9Ln1tfh7RWafd7ciQOdTtrJFNR8d
FSzYNcOaAK8k0y2uM3nI/aHusps2BIjtf2k5JMlDztctJNbaEaDVuLzXTAHz
mvO+usiNBNS1+GjK6WDeMvdJ0dhMwNIAzSX5y3nIXOHcqUdbCFDOr7kmbIH9
dWeq9vSdBOxLqZcX24j1vbRAOGs3AekB21VqtvGQYlz1uzX7CLjCFF5fhf2Q
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
w+gU4sB5KqVaGPPO/wCdG5A+
          "]]}, Annotation[#, "Charting`Private`Tag$3732#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
eVvNDzv/zTj91vg0bM69Z7pT3Q97jSzaTPJPQ2qEStl7TT/c6zc+WC53BpZ4
Z2+I2O6HdNnLuRBwBq6d3HBj+w4/nPF/P6NM0R69afZWUvT2M5zmD/NT3240
mmbbL/IWrTunub39Ns/bZJo5qTfTufumeVvgksWu5tOccyGGLXV4mmO1I86e
spxm1+bA1RO20yzz0zthk/c0B/d+m/fUd5r/ci+RfSjT/D7MzZrHnOaadU5L
T1+bZudDFtGRKdNcfVfz2qRwmh/9jO3ybJ7m+n2TGz88meaW0arHPc+nuVfb
RJTb+//8+diKdX18mncN03wUlvv/x0Llx/b7Xab5y4odIuzZAf/xp1Xivz7m
TXPmzm+fJM2u/scavoYGzt+mmdKaHuAbHfgf99x6G+W6Jeg/lr189XdkxzSL
exqf8fQO/o+fUU/JX10b8h+XTB1LozZM89Hb51arOF37jwX7OyclpEL/4x9r
nBpz8qcZzj2xUza7/h+frrph+Wp8mnW2UXaaRIT9x+0U401zoqf5yiPxRbzY
aX5w8GavUcI0b3YtIRncmeY1yaP3taqmWVzcYaXi8DRnHVSZ9Xpkmk3ixt+n
fJpmf0XWQ/mv0/zXIOnI8r/TPH6pI2iRTPh/HFGe7N66ZJq3zDhnGS43zReu
f1dcuHqah+5K14ptmmb/z52Zgs3TrLgtNfTqlmm2fbTlxOxt0/xXbAK52tOc
eLBmA1t3mvXjAiSMDKa5q3v/938wzf8DWEM8dA==
          "]]}, Annotation[#, "Charting`Private`Tag$3732#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], 18], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1000}, {0, 1.}}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> Directive[
       GrayLevel[0], 12]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(3\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], 18], FontFamily -> "Arial"}, Background -> Automatic,
          StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "18"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7579358134131527`*^9, {3.757936015602132*^9, 3.7579360286615515`*^9}, 
   3.7579361979517975`*^9, {3.7579379799426627`*^9, 3.7579380079278913`*^9}, 
   3.75793805177524*^9, 3.7579380923060026`*^9, 3.757949479143671*^9, 
   3.757949514944606*^9, 3.757949588916316*^9, 3.7579496576392365`*^9, 
   3.757949751265233*^9, 3.757950079049267*^9, 3.7579501449882135`*^9, 
   3.757950606409546*^9, 3.7579507471995487`*^9, 3.7579508165039473`*^9, 
   3.757951574703835*^9, 3.75795180259169*^9, 3.757951868454311*^9, 
   3.757951899954005*^9, 3.7579519356902385`*^9, 3.757952001927694*^9, 
   3.7579520695130024`*^9, 3.7579521547564397`*^9, {3.7579522318011007`*^9, 
   3.7579522614507227`*^9}, {3.7579523013650117`*^9, 3.7579523260149093`*^9}, 
   3.7579523865583487`*^9, {3.7579524510616674`*^9, 3.7579524743378887`*^9}, 
   3.7579525240543785`*^9, 3.757952568416796*^9, 3.7579526779804115`*^9, 
   3.7579527255257196`*^9, 3.757952756240216*^9, 3.757957825714422*^9, 
   3.757978035657404*^9, 3.757978129530821*^9, 3.757978186223069*^9, 
   3.7580210359774647`*^9, 3.7580210967550745`*^9, 3.758021173625772*^9, {
   3.7580212288171377`*^9, 3.758021258979374*^9}, {3.7580213005045853`*^9, 
   3.758021329073928*^9}, 3.7580214573120127`*^9, 3.7580214902179437`*^9, 
   3.758021535884156*^9, 3.7580215986234274`*^9, {3.7580216782314835`*^9, 
   3.7580217011228886`*^9}, 3.758021749297866*^9, 3.7580217925299296`*^9, 
   3.758021954278452*^9, 3.7580220762482433`*^9, 3.75802211320233*^9, {
   3.758022143999486*^9, 3.7580221663818274`*^9}, {3.7580222046252184`*^9, 
   3.7580222220273733`*^9}, 3.758022260115453*^9, 3.7580224589395123`*^9, {
   3.7580251057525573`*^9, 3.758025135509751*^9}, 3.763393341648436*^9, 
   3.774371953150628*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"958a9a08-78e5-48bc-a322-cf601b98c118"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fig4B_timeseries.svg\>\"", ",", "%"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7743718387995453`*^9, 3.7743718609155645`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"e4d16522-add3-406d-a768-336492f62e87"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate deterministic fixed point", "Subsection",
 CellChangeTimes->{{3.69659437399642*^9, 3.6965943795777426`*^9}, {
  3.69660535740208*^9, 3.696605357439315*^9}, {3.696606141669324*^9, 
  3.696606176658435*^9}, {3.726316284954395*^9, 3.7263162897292795`*^9}, {
  3.7579517805599413`*^9, 
  3.757951785985634*^9}},ExpressionUUID->"5079fdf1-8d0f-4eff-92f1-\
441c55b32384"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randomInit", "[", "n_", "]"}], ":=", 
    RowBox[{"RandomPoint", "[", 
     RowBox[{
      RowBox[{"Simplex", "[", 
       RowBox[{"l", "*", 
        RowBox[{"IdentityMatrix", "[", "m", "]"}]}], "]"}], ",", "n"}], 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.727103173993972*^9, 3.7271031740140285`*^9}, {
  3.7281265341320667`*^9, 3.728126535991805*^9}, {3.7281267732350464`*^9, 
  3.7281267898878717`*^9}, {3.7281271274204607`*^9, 3.7281271365941687`*^9}, {
  3.728127407388222*^9, 3.728127408976376*^9}, {3.728832853491218*^9, 
  3.7288328538586135`*^9}, {3.742225376628583*^9, 3.7422253768160443`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"ee13b02d-d2fc-4746-ab45-e78ffb3fc3d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"numTrials", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inits", "=", 
   RowBox[{"randomInit", "[", "numTrials", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "numTrials"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fixedPoints", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "numTrials"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigenSystems", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "numTrials"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\"\<n\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "//", "ToExpression"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "m"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.696597120207774*^9, 3.69659714878784*^9}, {
   3.696597188809554*^9, 3.696597189993047*^9}, {3.6965972230407834`*^9, 
   3.6965972245728865`*^9}, 3.696603426370083*^9, {3.6966037564077077`*^9, 
   3.696603758595476*^9}, {3.696603798638183*^9, 3.6966038033925295`*^9}, {
   3.6966041068627677`*^9, 3.696604109224783*^9}, {3.6966041853271265`*^9, 
   3.6966041862823763`*^9}, {3.6966042516624813`*^9, 
   3.6966043821208053`*^9}, {3.6966044566411147`*^9, 
   3.6966045642872286`*^9}, {3.6966046409545994`*^9, 
   3.6966046748970532`*^9}, {3.696604718964842*^9, 3.696604803000972*^9}, {
   3.696604857092992*^9, 3.6966048891563854`*^9}, {3.696605072234622*^9, 
   3.6966051002504845`*^9}, {3.6966052388924923`*^9, 
   3.6966052400723057`*^9}, {3.696605282240817*^9, 3.696605299141591*^9}, {
   3.6966063014381833`*^9, 3.6966064559423976`*^9}, {3.6966066446936445`*^9, 
   3.6966066607826624`*^9}, {3.6966117776131043`*^9, 3.696611780705112*^9}, {
   3.6966118848679724`*^9, 3.6966118916912193`*^9}, {3.6966120607272687`*^9, 
   3.6966120723377237`*^9}, {3.696612117353552*^9, 3.696612161114149*^9}, {
   3.6966122356875496`*^9, 3.6966122679281993`*^9}, {3.696612313365041*^9, 
   3.6966123181711416`*^9}, {3.6966277508732786`*^9, 3.696627751357646*^9}, {
   3.6971192142742653`*^9, 3.6971192740543776`*^9}, {3.697119408277728*^9, 
   3.697119550803069*^9}, {3.6971196046007233`*^9, 3.6971196105532084`*^9}, {
   3.697119938022659*^9, 3.697119985090053*^9}, {3.697120176083581*^9, 
   3.6971202686589317`*^9}, {3.6971203106926284`*^9, 3.697120322928398*^9}, {
   3.697120413724265*^9, 3.6971204896265345`*^9}, {3.6971205468694563`*^9, 
   3.697120616689003*^9}, {3.697120682678132*^9, 3.697120709422633*^9}, {
   3.6971207532802715`*^9, 3.697120754698656*^9}, {3.6971212803418016`*^9, 
   3.6971213163977675`*^9}, {3.6971220276299715`*^9, 
   3.6971220410475283`*^9}, {3.697122080862914*^9, 3.697122124928113*^9}, {
   3.6971225650989084`*^9, 3.6971225907632427`*^9}, {3.697122757030884*^9, 
   3.6971228245909543`*^9}, {3.697123174613331*^9, 3.697123175783882*^9}, {
   3.697123281148862*^9, 3.697123281564766*^9}, {3.697123313639655*^9, 
   3.697123314071412*^9}, {3.6971254513726892`*^9, 3.6971254635505605`*^9}, {
   3.6971290502388487`*^9, 3.6971290520875683`*^9}, {3.6971679968356323`*^9, 
   3.6971679994489293`*^9}, {3.6972385915214233`*^9, 
   3.6972385945633993`*^9}, {3.6981594397746277`*^9, 
   3.6981594427090187`*^9}, {3.6981604438645306`*^9, 3.6981604479842997`*^9}, 
   3.6981604831758814`*^9, {3.6981605430635223`*^9, 3.6981605637656446`*^9}, {
   3.698160925089241*^9, 3.698160929546414*^9}, {3.698160992482808*^9, 
   3.6981610265352855`*^9}, {3.698161190384816*^9, 3.698161192222887*^9}, {
   3.698161679144*^9, 3.6981618617080708`*^9}, {3.6981622472309523`*^9, 
   3.6981622668751636`*^9}, {3.6981625713769207`*^9, 
   3.6981625955154552`*^9}, {3.6981627141356726`*^9, 
   3.6981628170606184`*^9}, {3.6981628531613593`*^9, 
   3.6981628871876526`*^9}, {3.6981629769421806`*^9, 
   3.6981629814164248`*^9}, {3.698163431655864*^9, 3.698163461387519*^9}, {
   3.6981634969028482`*^9, 3.6981635059108334`*^9}, {3.6981636954316797`*^9, 
   3.6981636981058216`*^9}, {3.698164465721336*^9, 3.698164548698886*^9}, {
   3.6981647326476583`*^9, 3.6981647390527487`*^9}, {3.6981650317779655`*^9, 
   3.698165064522391*^9}, {3.698165144504154*^9, 3.698165192326701*^9}, {
   3.698165230251128*^9, 3.698165234108839*^9}, {3.6981655144911637`*^9, 
   3.698165518125058*^9}, {3.6981655572453146`*^9, 3.698165564189581*^9}, {
   3.6981656527363877`*^9, 3.698165666647214*^9}, {3.698165703467546*^9, 
   3.698165711508031*^9}, {3.6981658200549717`*^9, 3.6981658294631014`*^9}, {
   3.698165909532024*^9, 3.6981659190549955`*^9}, {3.698166015656212*^9, 
   3.6981660157716417`*^9}, {3.698166073053624*^9, 3.6981660967960997`*^9}, {
   3.698166265004465*^9, 3.698166279433549*^9}, {3.6981664517212887`*^9, 
   3.698166463203433*^9}, {3.6981665224775753`*^9, 3.698166602196309*^9}, {
   3.698166638503273*^9, 3.6981666666834435`*^9}, {3.698166738220354*^9, 
   3.698166771305093*^9}, {3.6981668531937284`*^9, 3.6981668549636574`*^9}, {
   3.698166888638536*^9, 3.6981669280092506`*^9}, {3.6981670432244525`*^9, 
   3.698167147333606*^9}, {3.698167241289383*^9, 3.6981673577907476`*^9}, {
   3.6981674116484303`*^9, 3.6981674779202037`*^9}, {3.6981675131544533`*^9, 
   3.69816752027731*^9}, {3.698167658499273*^9, 3.6981677760601225`*^9}, {
   3.6981684713757906`*^9, 3.698168493049093*^9}, {3.6981689349713*^9, 
   3.698169001541974*^9}, {3.698169034157092*^9, 3.6981690577626014`*^9}, {
   3.698169104537967*^9, 3.6981691272716985`*^9}, {3.698169164435144*^9, 
   3.698169167669111*^9}, {3.6981692334959974`*^9, 3.6981692440225677`*^9}, {
   3.6981693075902257`*^9, 3.6981693084752226`*^9}, {3.698169340671818*^9, 
   3.6981693407410574`*^9}, {3.698169624676326*^9, 3.698169638309388*^9}, {
   3.6981696831187325`*^9, 3.6981697122617297`*^9}, {3.6981697952727475`*^9, 
   3.698169841440634*^9}, {3.6981706601919193`*^9, 3.6981707365099297`*^9}, {
   3.6981708049237976`*^9, 3.698170832876467*^9}, {3.6981709072143373`*^9, 
   3.698170913365114*^9}, {3.698170979851647*^9, 3.6981709807681584`*^9}, {
   3.698171079832771*^9, 3.6981710952902403`*^9}, {3.6981711407378764`*^9, 
   3.698171145539421*^9}, {3.6981711777622232`*^9, 3.6981713319044104`*^9}, {
   3.6981713624729967`*^9, 3.6981713636046314`*^9}, {3.698171407898594*^9, 
   3.6981714090651026`*^9}, {3.6981715012391357`*^9, 
   3.6981715049737005`*^9}, {3.698171968528412*^9, 3.6981719744342256`*^9}, {
   3.6982501440099063`*^9, 3.698250151118806*^9}, {3.698250216000881*^9, 
   3.698250259932623*^9}, {3.6982504853938046`*^9, 3.6982505807532234`*^9}, {
   3.6982506114976373`*^9, 3.69825061356048*^9}, {3.6982506812142525`*^9, 
   3.698250733621978*^9}, {3.6982507774426875`*^9, 3.698250785125102*^9}, {
   3.698250907144203*^9, 3.6982509122348137`*^9}, 3.698250956192663*^9, {
   3.6982510675469837`*^9, 3.6982511002269597`*^9}, 3.6982515127893844`*^9, {
   3.6982529262412977`*^9, 3.698252970484473*^9}, {3.6993692713363934`*^9, 
   3.699369272769223*^9}, {3.699369895879484*^9, 3.699369902214223*^9}, {
   3.699456908506357*^9, 3.6994569093897963`*^9}, {3.699543855552058*^9, 
   3.699543855784213*^9}, {3.699571365361035*^9, 3.6995713665907927`*^9}, {
   3.6996123242226114`*^9, 3.69961232519151*^9}, {3.699632457025611*^9, 
   3.6996324579786997`*^9}, {3.6996325137951217`*^9, 3.699632524040962*^9}, {
   3.6996326559110975`*^9, 3.699632674616704*^9}, {3.69963293317146*^9, 
   3.699632936073383*^9}, {3.6996329806131344`*^9, 3.6996329847942715`*^9}, {
   3.69963303049566*^9, 3.699633050862652*^9}, {3.699633086380621*^9, 
   3.699633087196954*^9}, {3.6996333074256687`*^9, 3.6996333077722955`*^9}, {
   3.69963594431133*^9, 3.699635945512658*^9}, {3.6996527141101213`*^9, 
   3.699652722845644*^9}, {3.6996535280430593`*^9, 3.6996535321918507`*^9}, {
   3.699653604909643*^9, 3.699653660621286*^9}, {3.6996538746441336`*^9, 
   3.699653913347759*^9}, {3.699653956730248*^9, 3.699654025883651*^9}, {
   3.6996541054737744`*^9, 3.6996541741009803`*^9}, {3.6996542253172336`*^9, 
   3.6996542436789474`*^9}, {3.6996542902307262`*^9, 
   3.6996543691756496`*^9}, {3.6996544149913073`*^9, 3.699654415675994*^9}, {
   3.6996545976739173`*^9, 3.6996546029241743`*^9}, {3.6996546374356422`*^9, 
   3.6996546393051295`*^9}, {3.699655501057479*^9, 3.6996555370692806`*^9}, {
   3.6996556187753205`*^9, 3.6996556226103888`*^9}, {3.699655720347027*^9, 
   3.69965572530591*^9}, 3.699655789681839*^9, {3.6996560118039913`*^9, 
   3.6996560458329954`*^9}, {3.6996560967370596`*^9, 
   3.6996560970374436`*^9}, {3.699656144931757*^9, 3.6996561683783712`*^9}, {
   3.6996562321988273`*^9, 3.6996562324145613`*^9}, {3.699656289819217*^9, 
   3.6996563013932476`*^9}, {3.6996563524223375`*^9, 
   3.6996563657371426`*^9}, {3.699656575885339*^9, 3.6996566504772406`*^9}, {
   3.699656695672867*^9, 3.699656731569064*^9}, {3.699656766035224*^9, 
   3.699656791669168*^9}, {3.6996569127150984`*^9, 3.69965696164311*^9}, {
   3.699657027156825*^9, 3.699657070139079*^9}, {3.69965788919088*^9, 
   3.6996578966956787`*^9}, {3.6996579465888677`*^9, 
   3.6996581159359417`*^9}, {3.699658193371475*^9, 3.6996582431813555`*^9}, {
   3.6996586412008305`*^9, 3.6996586874250607`*^9}, {3.6996607988232107`*^9, 
   3.6996608086849947`*^9}, {3.6996608653025*^9, 3.6996608773264475`*^9}, {
   3.699711500110798*^9, 3.6997115085355515`*^9}, {3.69971180919232*^9, 
   3.6997118374201527`*^9}, {3.6997118776660757`*^9, 
   3.6997118907708683`*^9}, {3.699712458870918*^9, 3.699712461640026*^9}, {
   3.6997128657877674`*^9, 3.699712869661007*^9}, {3.6997129741523237`*^9, 
   3.6997129852917233`*^9}, {3.6997133094061856`*^9, 3.699713310106564*^9}, {
   3.6997134237657137`*^9, 3.6997134251285677`*^9}, {3.699713486944004*^9, 
   3.699713489430321*^9}, {3.699715264644099*^9, 3.6997152658818245`*^9}, {
   3.6997159251117773`*^9, 3.699715953263534*^9}, {3.699715987105957*^9, 
   3.699716101532148*^9}, {3.699716183236718*^9, 3.699716218892763*^9}, {
   3.699721666023202*^9, 3.6997216702813253`*^9}, {3.6997244945613103`*^9, 
   3.699724496437439*^9}, {3.6997245475725107`*^9, 3.699724560838334*^9}, {
   3.6997392986582565`*^9, 3.6997392996898985`*^9}, {3.699739333181405*^9, 
   3.699739347453555*^9}, {3.6997432642921195`*^9, 3.6997433237010045`*^9}, {
   3.6997489547195597`*^9, 3.699748990764305*^9}, {3.699749755440675*^9, 
   3.6997497630296183`*^9}, {3.6997894805868573`*^9, 3.699789494892416*^9}, {
   3.6998082705808473`*^9, 3.6998082706809955`*^9}, {3.69988353630091*^9, 
   3.6998835519225035`*^9}, {3.6998836747105684`*^9, 3.699883683754092*^9}, {
   3.699892196739133*^9, 3.699892207550579*^9}, {3.699892340308215*^9, 
   3.6998923426248446`*^9}, {3.699912998254855*^9, 3.699913014248931*^9}, {
   3.6999617422907934`*^9, 3.699961769597513*^9}, {3.6999619261955137`*^9, 
   3.6999619342380695`*^9}, {3.699961970279685*^9, 3.6999619913866825`*^9}, {
   3.699962916651224*^9, 3.699962919216872*^9}, {3.6999718790483117`*^9, 
   3.699971882982074*^9}, {3.6999720168987093`*^9, 3.699972043501946*^9}, {
   3.6999724628523846`*^9, 3.699972466056143*^9}, {3.6999727486221523`*^9, 
   3.6999727613286896`*^9}, {3.6999750250122776`*^9, 
   3.6999750432501626`*^9}, {3.699975190657791*^9, 3.6999751951644096`*^9}, {
   3.6999755750940933`*^9, 3.699975576863249*^9}, {3.69997572313762*^9, 
   3.6999757585838394`*^9}, {3.6999758902084217`*^9, 
   3.6999758970144463`*^9}, {3.699975944060953*^9, 3.699975953830305*^9}, {
   3.699976550894487*^9, 3.699976560301777*^9}, {3.6999767110220685`*^9, 
   3.6999767289109917`*^9}, {3.699977285638877*^9, 3.6999773069393787`*^9}, {
   3.700060720946223*^9, 3.700060754539377*^9}, {3.7000626013017244`*^9, 
   3.700062636890397*^9}, {3.700062715628064*^9, 3.700062720601387*^9}, {
   3.7000662283351355`*^9, 3.700066229889101*^9}, {3.7000663930875187`*^9, 
   3.7000663939192805`*^9}, {3.7000664652820415`*^9, 
   3.7000664655508456`*^9}, {3.7000718820539017`*^9, 3.70007188403332*^9}, {
   3.700071924209386*^9, 3.7000719359511027`*^9}, {3.700072004892273*^9, 
   3.700072039093115*^9}, {3.7001435922488775`*^9, 3.700143646843529*^9}, {
   3.7001437288079405`*^9, 3.700143811671055*^9}, {3.700146309194255*^9, 
   3.70014632442586*^9}, {3.7001468230662274`*^9, 3.7001468445491714`*^9}, {
   3.700147357215391*^9, 3.7001474156717176`*^9}, 3.7001474458349667`*^9, {
   3.7003191724626827`*^9, 3.700319176018262*^9}, {3.7003192358655863`*^9, 
   3.700319236266158*^9}, {3.7003193930596204`*^9, 3.7003193942278056`*^9}, {
   3.7003194931190863`*^9, 3.7003195016286917`*^9}, {3.7003269892728567`*^9, 
   3.7003269900579233`*^9}, {3.700328736964608*^9, 3.7003287386633983`*^9}, {
   3.7003333976435413`*^9, 3.7003333977436113`*^9}, {3.7003339870983047`*^9, 
   3.7003339878781924`*^9}, {3.700334650808528*^9, 3.700334651020883*^9}, {
   3.700334832073936*^9, 3.7003348334538918`*^9}, {3.700354474863182*^9, 
   3.7003544806832075`*^9}, {3.70035451334758*^9, 3.7003545140486207`*^9}, {
   3.7003893137641163`*^9, 3.7003893160998383`*^9}, {3.700389467078298*^9, 
   3.700389467793118*^9}, {3.7003897110903196`*^9, 3.7003897112994213`*^9}, {
   3.700395823490224*^9, 3.700395854046029*^9}, {3.70039600652056*^9, 
   3.700396006716973*^9}, {3.70039737508914*^9, 3.70039738568336*^9}, {
   3.7006512207269144`*^9, 3.700651220925476*^9}, {3.700656028437305*^9, 
   3.700656029670124*^9}, {3.7006563975796876`*^9, 3.700656399035971*^9}, {
   3.700656629427703*^9, 3.700656629658712*^9}, {3.70065678632858*^9, 
   3.7006567870069304`*^9}, {3.70065714209381*^9, 3.700657144935809*^9}, {
   3.7006595316225877`*^9, 3.70065953234543*^9}, {3.7006600850848093`*^9, 
   3.7006600853222904`*^9}, {3.7009345898606834`*^9, 3.700934648015918*^9}, {
   3.7009347469445934`*^9, 3.700934747781438*^9}, 3.700934882971218*^9, {
   3.7009476123036137`*^9, 3.7009476184231544`*^9}, {3.70094825788235*^9, 
   3.700948258100619*^9}, {3.7009946168803635`*^9, 3.700994689116935*^9}, {
   3.7009947236071196`*^9, 3.7009947800166116`*^9}, {3.7009954107260523`*^9, 
   3.7009954172310753`*^9}, {3.7009956030817113`*^9, 
   3.7009956075622163`*^9}, {3.701000739880352*^9, 3.7010007403494806`*^9}, {
   3.701004706715315*^9, 3.701004706915885*^9}, {3.701005679539564*^9, 
   3.7010056812090783`*^9}, {3.701006465624614*^9, 3.701006467093501*^9}, {
   3.7010065009905224`*^9, 3.701006526523307*^9}, {3.7010065699638844`*^9, 
   3.7010065746990943`*^9}, {3.701006639642932*^9, 3.701006645830961*^9}, {
   3.7010070039386406`*^9, 3.701007005022725*^9}, {3.701032182362971*^9, 
   3.7010322575669966`*^9}, 3.701032340448074*^9, {3.7010329252050333`*^9, 
   3.701032942044774*^9}, 3.7011153608174295`*^9, 3.701115573497834*^9, {
   3.7011747564289427`*^9, 3.701174808704857*^9}, 3.701175039549576*^9, {
   3.7011761980551662`*^9, 3.701176202714489*^9}, {3.7011797677237196`*^9, 
   3.7011797717419724`*^9}, {3.701447727435988*^9, 3.7014477306086226`*^9}, {
   3.7014494577309947`*^9, 3.7014495043592515`*^9}, {3.701460018487322*^9, 
   3.7014600189873734`*^9}, {3.7014601031680517`*^9, 3.701460106371515*^9}, {
   3.7015645427814426`*^9, 3.7015645442616243`*^9}, {3.7017736547921658`*^9, 
   3.701773655073638*^9}, {3.7017737314736786`*^9, 3.7017737322548685`*^9}, {
   3.702041033670045*^9, 3.702041034326359*^9}, 3.7021428325728035`*^9, {
   3.702142940667242*^9, 3.7021429479343905`*^9}, {3.702154882690512*^9, 
   3.7021548955319834`*^9}, {3.702157549509489*^9, 3.702157558206582*^9}, {
   3.7027391443688693`*^9, 3.7027391478067293`*^9}, {3.702746099739462*^9, 
   3.7027461428999844`*^9}, {3.702746635825549*^9, 3.702746642295605*^9}, 
   3.7027472974676585`*^9, 3.7027481663852615`*^9, 3.702748912661572*^9, 
   3.702750453960754*^9, {3.7027593094138603`*^9, 3.7027593186962123`*^9}, {
   3.702759916071512*^9, 3.7027599710713463`*^9}, {3.702760667226021*^9, 
   3.7027606750850725`*^9}, {3.702768112021253*^9, 3.702768115881301*^9}, {
   3.7027693579353514`*^9, 3.702769475770018*^9}, {3.7027696053533545`*^9, 
   3.7027696239619756`*^9}, {3.7027698620375657`*^9, 
   3.7027698669858847`*^9}, {3.702813142683278*^9, 3.702813206141227*^9}, {
   3.702821052229452*^9, 3.702821053073323*^9}, 3.7028213337485895`*^9, {
   3.7028527287938232`*^9, 3.7028527512760854`*^9}, {3.7028528117777605`*^9, 
   3.7028528396540008`*^9}, {3.702852886936067*^9, 3.70285297679482*^9}, {
   3.702853010122706*^9, 3.702853067615904*^9}, 3.702853379497079*^9, {
   3.702854178247484*^9, 3.7028541845762777`*^9}, {3.702854740572877*^9, 
   3.702854795151185*^9}, {3.7029122627743196`*^9, 3.702912294633684*^9}, {
   3.7029140270327754`*^9, 3.702914037094586*^9}, 3.702915530474453*^9, 
   3.7029179809822474`*^9, 3.7029195835327263`*^9, {3.7029220320901794`*^9, 
   3.7029220401533804`*^9}, {3.702922102266024*^9, 3.7029221232031937`*^9}, {
   3.7029225213998384`*^9, 3.7029225241885166`*^9}, {3.7029225661478033`*^9, 
   3.7029225710727324`*^9}, {3.702939995680356*^9, 3.702939999207704*^9}, {
   3.703196510687357*^9, 3.703196514187719*^9}, 3.7031975910895567`*^9, 
   3.703435362150888*^9, {3.704392955514207*^9, 3.704392968286969*^9}, {
   3.7043933019760914`*^9, 3.704393310680048*^9}, {3.70490168329694*^9, 
   3.7049017155523186`*^9}, {3.7049025549055176`*^9, 3.704902557811951*^9}, {
   3.7065412725958033`*^9, 3.706541276424341*^9}, {3.706832913468275*^9, 
   3.7068329331423693`*^9}, {3.7074382491640778`*^9, 
   3.7074382540905156`*^9}, {3.7087224318703475`*^9, 
   3.7087224813105536`*^9}, {3.7087810502205048`*^9, 3.70878105454676*^9}, {
   3.7087876664094887`*^9, 3.7087877175862865`*^9}, {3.7088579997815742`*^9, 
   3.7088580027350473`*^9}, {3.7095814451302214`*^9, 
   3.7095814528968334`*^9}, {3.7096419775809536`*^9, 3.70964198078423*^9}, {
   3.709933450063184*^9, 3.709933483738732*^9}, {3.709933666863552*^9, 
   3.709933681716885*^9}, {3.7105254731058364`*^9, 3.7105254834320354`*^9}, {
   3.7226396418610864`*^9, 3.7226396596136284`*^9}, {3.722642307712639*^9, 
   3.722642314239343*^9}, {3.7226428204104476`*^9, 3.7226428231920304`*^9}, {
   3.7244147064258547`*^9, 3.7244147370391693`*^9}, {3.7244148271226616`*^9, 
   3.7244148318866544`*^9}, {3.724415060091154*^9, 3.7244150630546727`*^9}, {
   3.7244153177885265`*^9, 3.724415319022226*^9}, {3.7244159656861143`*^9, 
   3.724415966693798*^9}, {3.72441623814633*^9, 3.7244162394868937`*^9}, 
   3.724417614607323*^9, {3.72441953385807*^9, 3.724419535061269*^9}, {
   3.724441034093484*^9, 3.724441038652353*^9}, {3.724454023235179*^9, 
   3.724454078076432*^9}, {3.7244545074825325`*^9, 3.7244545337307544`*^9}, 
   3.724455041430977*^9, {3.7244555275123997`*^9, 3.724455531778487*^9}, {
   3.724698959366644*^9, 3.724698963669801*^9}, {3.7255776196904435`*^9, 
   3.7255776248055162`*^9}, {3.725578099989299*^9, 3.725578149375029*^9}, {
   3.725580871314521*^9, 3.72558087313857*^9}, 3.7255814229405055`*^9, {
   3.725583585675892*^9, 3.7255835956376405`*^9}, {3.7256342271149173`*^9, 
   3.725634253881558*^9}, {3.7256344898329463`*^9, 3.7256345364351587`*^9}, 
   3.72563479290958*^9, {3.7256354802469587`*^9, 3.7256355072319*^9}, {
   3.725737232853419*^9, 3.725737239603638*^9}, {3.725917715580911*^9, 
   3.725917716049711*^9}, {3.7259178111424704`*^9, 3.725917817837238*^9}, {
   3.7259178841397552`*^9, 3.7259178884825573`*^9}, {3.72591792196271*^9, 
   3.725917930572539*^9}, {3.725918431126296*^9, 3.725918436145552*^9}, {
   3.7259184717853966`*^9, 3.7259184972789555`*^9}, {3.7259202922381396`*^9, 
   3.7259202992377615`*^9}, {3.7262284908003945`*^9, 
   3.7262284914880486`*^9}, {3.7264274119649525`*^9, 
   3.7264274123729424`*^9}, {3.726427514239694*^9, 3.726427514644912*^9}, {
   3.7264280048550606`*^9, 3.7264280052219906`*^9}, {3.7264280931911697`*^9, 
   3.7264280938067493`*^9}, {3.726428259631044*^9, 3.7264282612219687`*^9}, {
   3.7264289902829485`*^9, 3.7264289903342476`*^9}, {3.726498477024164*^9, 
   3.7264985099086027`*^9}, {3.726502705206123*^9, 3.7265027058342752`*^9}, {
   3.7265101801671357`*^9, 3.726510212693674*^9}, {3.7265115377043333`*^9, 
   3.726511539107044*^9}, {3.72651162663391*^9, 3.7265116276085033`*^9}, {
   3.726587513233105*^9, 3.7265875175492587`*^9}, {3.7265875799336557`*^9, 
   3.7265876022933683`*^9}, {3.726769569462705*^9, 3.7267695743094177`*^9}, {
   3.7268516775365953`*^9, 3.726851678085493*^9}, 3.7268517500613112`*^9, {
   3.7268519479441695`*^9, 3.7268519481028485`*^9}, {3.726852094308806*^9, 
   3.7268521209673414`*^9}, 3.7268522649291644`*^9, {3.7268523347609673`*^9, 
   3.726852413620755*^9}, {3.7269510971021957`*^9, 3.7269510978212023`*^9}, {
   3.726951248232233*^9, 3.7269512497962675`*^9}, {3.727102731322988*^9, 
   3.727102880437241*^9}, {3.7271031797702227`*^9, 3.7271031887563467`*^9}, {
   3.7271032516097355`*^9, 3.727103263643407*^9}, {3.7271032992445865`*^9, 
   3.727103342146093*^9}, {3.727104036879154*^9, 3.727104070194903*^9}, {
   3.7271048341659803`*^9, 3.7271048342919536`*^9}, {3.727126894861393*^9, 
   3.7271269359501686`*^9}, {3.7271269827832165`*^9, 3.727127024647063*^9}, {
   3.727127054931571*^9, 3.7271270564786386`*^9}, {3.727127507855317*^9, 
   3.727127515606139*^9}, {3.72712776617655*^9, 3.727127769161278*^9}, {
   3.7271278873258643`*^9, 3.727127890044882*^9}, {3.7271308713615594`*^9, 
   3.7271309143661747`*^9}, {3.727130963965435*^9, 3.7271309739352636`*^9}, 
   3.7271311317489367`*^9, {3.727179861070493*^9, 3.7271798917568855`*^9}, {
   3.727179971175069*^9, 3.72718001160697*^9}, {3.7271933055106964`*^9, 
   3.727193313301853*^9}, {3.7271936888637424`*^9, 3.727193721029448*^9}, {
   3.7271940524878044`*^9, 3.7271940598857956`*^9}, {3.7271961369179225`*^9, 
   3.7271961999559364`*^9}, {3.727198346901478*^9, 3.727198357359384*^9}, {
   3.727199789162985*^9, 3.7271998285294228`*^9}, 3.727200321939658*^9, {
   3.7272003520653343`*^9, 3.7272003581195745`*^9}, {3.727366708633932*^9, 
   3.7273667700598707`*^9}, {3.727367403227763*^9, 3.72736740691879*^9}, {
   3.7277073601214437`*^9, 3.7277074246979294`*^9}, {3.7277078292988696`*^9, 
   3.727707861784561*^9}, {3.728126023477736*^9, 3.728126042966198*^9}, {
   3.728126973630599*^9, 3.728126974068327*^9}, {3.7281273703787293`*^9, 
   3.7281273762701254`*^9}, {3.728127464962488*^9, 3.7281274704646835`*^9}, {
   3.7282157528308716`*^9, 3.728215783004413*^9}, {3.7288327532279043`*^9, 
   3.7288327536104937`*^9}, {3.7288327976901703`*^9, 3.728832813145647*^9}, {
   3.7288328868647795`*^9, 3.7288328871798162`*^9}, {3.728832943650468*^9, 
   3.7288329824753*^9}, {3.7288337840856333`*^9, 3.7288337856721044`*^9}, {
   3.7289270094884787`*^9, 3.728927034104539*^9}, {3.728928498417345*^9, 
   3.7289284985330286`*^9}, {3.728929221861909*^9, 3.7289292219170017`*^9}, {
   3.7289318560782795`*^9, 3.728931857172287*^9}, {3.7359864695244913`*^9, 
   3.735986469672675*^9}, 3.742120163499301*^9, {3.757951736141308*^9, 
   3.7579517513599205`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"3379d519-06a7-4bf9-a9d8-5acd0ccaabef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "numTrials"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nInit", "=", 
      RowBox[{"inits", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"thisSol", "=", 
      RowBox[{"NDSolveValue", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"n", "'"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{"ndot", "[", 
            RowBox[{"n", "[", "t", "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"n", "[", "0", "]"}], "\[Equal]", "nInit"}]}], "}"}], ",", 
        "n", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"10", "*", "steps"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fixedPoints", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{"thisSol", "[", 
       RowBox[{"10", "*", "steps"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sols", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", "thisSol"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7259239000966487`*^9, 3.7259240187211847`*^9}, {
   3.7259240726560106`*^9, 3.725924131128001*^9}, 3.725924363441678*^9, 
   3.7259246881937227`*^9, {3.7262264523333282`*^9, 3.726226452942774*^9}, {
   3.726226594892415*^9, 3.7262266019276466`*^9}, {3.7262266770334167`*^9, 
   3.726226693300229*^9}, {3.726226750778824*^9, 3.7262267512476225`*^9}, {
   3.726227619757797*^9, 3.726227624999096*^9}, {3.72622849577948*^9, 
   3.726228496393979*^9}, {3.726231744547619*^9, 3.72623174967517*^9}, {
   3.7262325070390368`*^9, 3.7262325411168284`*^9}, {3.726232682491704*^9, 
   3.7262327065807724`*^9}, 3.726312713505683*^9, 3.7263153169257007`*^9, 
   3.726315368821906*^9, {3.726317081613619*^9, 3.7263170868766317`*^9}, {
   3.726498791593854*^9, 3.7264987951580677`*^9}, {3.7264988335176325`*^9, 
   3.726498835812606*^9}, {3.726502755110794*^9, 3.7265027555573497`*^9}, {
   3.7265052636237955`*^9, 3.7265052981138716`*^9}, 3.7267915019807167`*^9, 
   3.7268516550664873`*^9, 3.7268522847723093`*^9, 3.726951118290094*^9, {
   3.7271029831904893`*^9, 3.7271030896615987`*^9}, {3.7271033852132177`*^9, 
   3.7271033897977495`*^9}, {3.727103425158338*^9, 3.7271034395884023`*^9}, 
   3.7271040672385125`*^9, {3.7271053463260555`*^9, 3.727105361991191*^9}, {
   3.7271054130417476`*^9, 3.7271054167137527`*^9}, {3.727119121061125*^9, 
   3.727119121326779*^9}, {3.727127063729388*^9, 3.727127092076195*^9}, {
   3.7271309307741995`*^9, 3.72713101223608*^9}, {3.727179900838766*^9, 
   3.7271799130100183`*^9}, {3.7271800160384665`*^9, 3.727180039662794*^9}, {
   3.727193320485899*^9, 3.727193321583369*^9}, {3.727193498287501*^9, 
   3.727193502409276*^9}, {3.727193728225745*^9, 3.7271937331039324`*^9}, {
   3.72720109380439*^9, 3.7272011046205263`*^9}, {3.7273666931722636`*^9, 
   3.7273666991373215`*^9}, {3.727366772289697*^9, 3.7273667761761026`*^9}, {
   3.727366807513838*^9, 3.727366808026362*^9}, {3.7273669056445484`*^9, 
   3.727366905960909*^9}, 3.727707288813115*^9, {3.727707338130069*^9, 
   3.7277073501214743`*^9}, {3.7277075426918187`*^9, 
   3.7277075431868134`*^9}, {3.7281260482790937`*^9, 3.728126063431064*^9}, {
   3.7281281096330566`*^9, 3.728128109929802*^9}, {3.7282157095374603`*^9, 
   3.7282157475981655`*^9}, {3.728832773122856*^9, 3.7288328934820585`*^9}, {
   3.7288329379124365`*^9, 3.7288329387917423`*^9}, {3.7288329861075015`*^9, 
   3.7288330028218374`*^9}, {3.7288334523644543`*^9, 
   3.7288334714116087`*^9}, {3.7288336690804033`*^9, 
   3.7288336727367954`*^9}, {3.728833788442563*^9, 3.728833788881011*^9}, {
   3.728833838850954*^9, 3.7288338468322215`*^9}, {3.7289271129034185`*^9, 
   3.7289271242821007`*^9}, 3.728931943400079*^9, {3.728932439213602*^9, 
   3.7289324453636384`*^9}, {3.742120186884406*^9, 3.7421202062706747`*^9}, {
   3.7421343318034716`*^9, 3.742134337485081*^9}, {3.7579518406066704`*^9, 
   3.7579518511331635`*^9}, {3.7579518850104713`*^9, 3.7579518859711*^9}, 
   3.7579519237794404`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"4693608b-2a88-4a8c-9dff-df08db808d98"]
}, Closed]],

Cell[CellGroupData[{

Cell["get colorscheme data", "Subsection",
 CellChangeTimes->{{3.7428180804944715`*^9, 
  3.7428180851370916`*^9}},ExpressionUUID->"cb1428f0-906a-48b3-9772-\
4145d80b40b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Read", " ", "in", " ", "the", " ", "numerical", " ", "data"}], 
   "*)"}], 
  RowBox[{
   RowBox[{"Get", "[", "\"\<https://pastebin.com/raw/gN4wGqxe\>\"", "]"}], 
   "\n", 
   RowBox[{
    RowBox[{"ParulaCM", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"colorlist", "=", 
         RowBox[{"RGBColor", "@@@", "parulaColors"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{"colorlist", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"Cube1CM", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"colorlist", "=", 
         RowBox[{"RGBColor", "@@@", "cube1Colors"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{"colorlist", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"CubeYFCM", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"colorlist", "=", 
         RowBox[{"RGBColor", "@@@", "cubeYFColors"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{"colorlist", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"LinearLCM", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"colorlist", "=", 
         RowBox[{"RGBColor", "@@@", "cube1Colors"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{"colorlist", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"JetCM", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"colorlist", "=", 
         RowBox[{"RGBColor", "@@@", "jetColors"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Blend", "[", 
         RowBox[{"colorlist", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.742818087353135*^9, 3.7428180873770714`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"cca13060-c0b0-4c50-8ba3-1e60e8931c0b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "note", " ", "that", " ", "we", " ", "scale", " ", "supply", " ", "by", " ",
    "L", " ", "to", " ", "appropriately", " ", "scale", " ", "total", " ", 
   "population"}], "*)"}]], "Input",
 CellChangeTimes->{{3.743792225321488*^9, 3.7437922439276733`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"25c3663a-fb4d-4864-9ac4-e5a637a28f09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wellMixedsols", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"s1", "*", 
           RowBox[{"l", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "+", 
              RowBox[{"y", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
              RowBox[{"z", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "1"}], "]"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{"\[Alpha]", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"s2", "*", 
           RowBox[{"l", "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "+", 
              RowBox[{"y", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "+", 
              RowBox[{"z", "*", 
               RowBox[{"\[Alpha]", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", "2"}], "]"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}]}], "\[Equal]", "\[Delta]"}], "&&", 
      RowBox[{
       RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "l"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7288267492816653`*^9, 3.7288267846376834`*^9}, {
   3.7288268299183245`*^9, 3.728826859277707*^9}, {3.7288269760103006`*^9, 
   3.7288270140275803`*^9}, {3.7288291445160446`*^9, 
   3.7288291950583243`*^9}, {3.7288292357721295`*^9, 
   3.7288292591438036`*^9}, {3.7288292975710382`*^9, 
   3.7288293065886154`*^9}, {3.728829447034568*^9, 3.728829472865513*^9}, {
   3.728829583819614*^9, 3.728829588154026*^9}, {3.72882981748919*^9, 
   3.728829833523409*^9}, {3.728829931259284*^9, 3.7288299354221125`*^9}, 
   3.7437896863736353`*^9, {3.7437901314171457`*^9, 3.743790177754486*^9}, {
   3.7437902174487257`*^9, 3.7437902578249636`*^9}, {3.743790597325276*^9, 
   3.7437906004729776`*^9}, {3.7437921328368635`*^9, 3.74379213602801*^9}, {
   3.7437922039324875`*^9, 3.743792208678176*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"dd8acf1e-bae9-412e-b718-73b454ef1e89"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ratnz",
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"",2,49,1,22780779917917113272,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.735986235260933*^9, 3.7359863007648644`*^9, 3.735986334700485*^9, 
   3.735986381464965*^9, {3.735986418249041*^9, 3.7359864426020145`*^9}, 
   3.735986486150442*^9, 3.735986674733977*^9, 3.7359868107805033`*^9, 
   3.7359870013381186`*^9, 3.735987118327674*^9, 3.7359872539798512`*^9, 
   3.735987386920754*^9, 3.735987513972294*^9, 3.742076515737412*^9, 
   3.742120423562933*^9, 3.74212171904066*^9, 3.7421261497004967`*^9, 
   3.742126269591077*^9, 3.742132027310649*^9, 3.742134365435206*^9, 
   3.7421344528335657`*^9, 3.7421350991964054`*^9, 3.742221075350483*^9, 
   3.742221669384342*^9, 3.742222106365321*^9, 3.742223848499114*^9, 
   3.742224674761462*^9, 3.742225260617154*^9, 3.742225534557123*^9, 
   3.7422342612103596`*^9, 3.742234340476994*^9, 3.7422344597066636`*^9, 
   3.7422355447507715`*^9, 3.742818283461794*^9, 3.7428183394883833`*^9, 
   3.7428516704051323`*^9, 3.742851759412554*^9, 3.742852040406593*^9, 
   3.742852107021901*^9, 3.742852215077077*^9, 3.7431958214923677`*^9, 
   3.7437878459793043`*^9, 3.74378821127147*^9, 3.7437884044080305`*^9, 
   3.743788821147849*^9, 3.743788886037823*^9, 3.7437889915280685`*^9, 
   3.7437890292280526`*^9, 3.7437890797549615`*^9, {3.743789122211566*^9, 
   3.7437891421378775`*^9}, 3.7437894343778963`*^9, 3.7437898367831182`*^9, 
   3.7437902315067644`*^9, 3.7437902638613605`*^9, 3.7437903629544344`*^9, 
   3.743790474146058*^9, {3.7437905883574514`*^9, 3.743790604399171*^9}, 
   3.743790676045618*^9, 3.7437907752120914`*^9, 3.743791189436383*^9, 
   3.7437912641368213`*^9, 3.7437914915110006`*^9, 3.7437916883230963`*^9, 
   3.7437918300631886`*^9, 3.7437918752075005`*^9, 3.7437920029688735`*^9, {
   3.7437921187229643`*^9, 3.743792138837501*^9}, 3.7437922090804176`*^9, 
   3.7446670993138895`*^9, 3.7446671961351557`*^9, 3.757861939111251*^9, 
   3.7578629249449797`*^9, 3.757863041382273*^9, 3.7578632711441603`*^9, 
   3.7578658555892525`*^9, 3.7578659610591745`*^9, 3.7578669601630707`*^9, 
   3.75786701847552*^9, 3.757867245671463*^9, 3.757934918038195*^9, 
   3.757934999839652*^9, 3.75793508439923*^9, 3.757935151835595*^9, {
   3.757935396693722*^9, 3.7579354226939187`*^9}, 3.7579354690712585`*^9, 
   3.7579355120329647`*^9, {3.757937980473754*^9, 3.7579380083184614`*^9}, 
   3.7579380521032877`*^9, 3.7579380926184287`*^9, 3.7579494798154297`*^9, 
   3.7579495152726183`*^9, 3.757949658235214*^9, 3.7579497518974013`*^9, 
   3.7579500796585073`*^9, 3.7579501455505457`*^9, 3.75795060705002*^9, 
   3.7579507478243656`*^9, 3.757950817131923*^9, 3.757951575328689*^9, 
   3.7579518051848783`*^9, 3.757951870529325*^9, 3.757951903766479*^9, 
   3.757951939099882*^9, 3.757952005804261*^9, 3.7579520730902915`*^9, 
   3.757952158573329*^9, {3.757952235378354*^9, 3.7579522650633926`*^9}, {
   3.7579523049440374`*^9, 3.7579523297796173`*^9}, 3.7579523903230953`*^9, {
   3.7579524547812986`*^9, 3.7579524780656457`*^9}, 3.75795257200782*^9, 
   3.75795268263737*^9, 3.757952728993673*^9, 3.7579527610193925`*^9, 
   3.757957830952016*^9, 3.7579780411766043`*^9, 3.757978134377059*^9, 
   3.7579781911287622`*^9, 3.7580210401014977`*^9, 3.7580211005854445`*^9, 
   3.7580211774842315`*^9, {3.7580212323631487`*^9, 3.7580212624316874`*^9}, 
   3.758021460748705*^9, 3.758021493560909*^9, 3.7580215397328405`*^9, 
   3.758021602546255*^9, {3.758021682136816*^9, 3.7580217048095217`*^9}, 
   3.758021753109188*^9, 3.7580217957478876`*^9, 3.758021958450466*^9, 
   3.758022082041053*^9, 3.7580221172371073`*^9, {3.7580221472743187`*^9, 
   3.7580221698516045`*^9}, 3.7580222633431883`*^9, 3.758025109758492*^9, 
   3.7633933452228127`*^9, 3.774371957907942*^9},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"3b374e4f-23de-4ed5-b203-28cf08f2b87e"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   49,2,22780779917917113272,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.735986235260933*^9, 3.7359863007648644`*^9, 3.735986334700485*^9, 
   3.735986381464965*^9, {3.735986418249041*^9, 3.7359864426020145`*^9}, 
   3.735986486150442*^9, 3.735986674733977*^9, 3.7359868107805033`*^9, 
   3.7359870013381186`*^9, 3.735987118327674*^9, 3.7359872539798512`*^9, 
   3.735987386920754*^9, 3.735987513972294*^9, 3.742076515737412*^9, 
   3.742120423562933*^9, 3.74212171904066*^9, 3.7421261497004967`*^9, 
   3.742126269591077*^9, 3.742132027310649*^9, 3.742134365435206*^9, 
   3.7421344528335657`*^9, 3.7421350991964054`*^9, 3.742221075350483*^9, 
   3.742221669384342*^9, 3.742222106365321*^9, 3.742223848499114*^9, 
   3.742224674761462*^9, 3.742225260617154*^9, 3.742225534557123*^9, 
   3.7422342612103596`*^9, 3.742234340476994*^9, 3.7422344597066636`*^9, 
   3.7422355447507715`*^9, 3.742818283461794*^9, 3.7428183394883833`*^9, 
   3.7428516704051323`*^9, 3.742851759412554*^9, 3.742852040406593*^9, 
   3.742852107021901*^9, 3.742852215077077*^9, 3.7431958214923677`*^9, 
   3.7437878459793043`*^9, 3.74378821127147*^9, 3.7437884044080305`*^9, 
   3.743788821147849*^9, 3.743788886037823*^9, 3.7437889915280685`*^9, 
   3.7437890292280526`*^9, 3.7437890797549615`*^9, {3.743789122211566*^9, 
   3.7437891421378775`*^9}, 3.7437894343778963`*^9, 3.7437898367831182`*^9, 
   3.7437902315067644`*^9, 3.7437902638613605`*^9, 3.7437903629544344`*^9, 
   3.743790474146058*^9, {3.7437905883574514`*^9, 3.743790604399171*^9}, 
   3.743790676045618*^9, 3.7437907752120914`*^9, 3.743791189436383*^9, 
   3.7437912641368213`*^9, 3.7437914915110006`*^9, 3.7437916883230963`*^9, 
   3.7437918300631886`*^9, 3.7437918752075005`*^9, 3.7437920029688735`*^9, {
   3.7437921187229643`*^9, 3.743792138837501*^9}, 3.7437922090804176`*^9, 
   3.7446670993138895`*^9, 3.7446671961351557`*^9, 3.757861939111251*^9, 
   3.7578629249449797`*^9, 3.757863041382273*^9, 3.7578632711441603`*^9, 
   3.7578658555892525`*^9, 3.7578659610591745`*^9, 3.7578669601630707`*^9, 
   3.75786701847552*^9, 3.757867245671463*^9, 3.757934918038195*^9, 
   3.757934999839652*^9, 3.75793508439923*^9, 3.757935151835595*^9, {
   3.757935396693722*^9, 3.7579354226939187`*^9}, 3.7579354690712585`*^9, 
   3.7579355120329647`*^9, {3.757937980473754*^9, 3.7579380083184614`*^9}, 
   3.7579380521032877`*^9, 3.7579380926184287`*^9, 3.7579494798154297`*^9, 
   3.7579495152726183`*^9, 3.757949658235214*^9, 3.7579497518974013`*^9, 
   3.7579500796585073`*^9, 3.7579501455505457`*^9, 3.75795060705002*^9, 
   3.7579507478243656`*^9, 3.757950817131923*^9, 3.757951575328689*^9, 
   3.7579518051848783`*^9, 3.757951870529325*^9, 3.757951903766479*^9, 
   3.757951939099882*^9, 3.757952005804261*^9, 3.7579520730902915`*^9, 
   3.757952158573329*^9, {3.757952235378354*^9, 3.7579522650633926`*^9}, {
   3.7579523049440374`*^9, 3.7579523297796173`*^9}, 3.7579523903230953`*^9, {
   3.7579524547812986`*^9, 3.7579524780656457`*^9}, 3.75795257200782*^9, 
   3.75795268263737*^9, 3.757952728993673*^9, 3.7579527610193925`*^9, 
   3.757957830952016*^9, 3.7579780411766043`*^9, 3.757978134377059*^9, 
   3.7579781911287622`*^9, 3.7580210401014977`*^9, 3.7580211005854445`*^9, 
   3.7580211774842315`*^9, {3.7580212323631487`*^9, 3.7580212624316874`*^9}, 
   3.758021460748705*^9, 3.758021493560909*^9, 3.7580215397328405`*^9, 
   3.758021602546255*^9, {3.758021682136816*^9, 3.7580217048095217`*^9}, 
   3.758021753109188*^9, 3.7580217957478876`*^9, 3.758021958450466*^9, 
   3.758022082041053*^9, 3.7580221172371073`*^9, {3.7580221472743187`*^9, 
   3.7580221698516045`*^9}, 3.7580222633431883`*^9, 3.758025109758492*^9, 
   3.7633933452228127`*^9, 3.774371957921918*^9},
 CellLabel->
  "During evaluation of \
In[49]:=",ExpressionUUID->"1916f7d3-2eb4-493f-9308-b5a51a71b935"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "8.`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "x"}], ")"}]}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"7.`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "x"}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "4.`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1.`"}], "+", 
         RowBox[{"2.`", " ", "x"}]}], ")"}]}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "3.`"}], "+", 
       RowBox[{"7.`", " ", "x"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7359862352921753`*^9, 3.7359863007961073`*^9, 3.7359863347161317`*^9, 
   3.735986381496207*^9, {3.7359864182646637`*^9, 3.73598644262475*^9}, 
   3.735986486174487*^9, 3.735986674765169*^9, 3.735986810811745*^9, 
   3.7359870013537407`*^9, 3.7359871183589153`*^9, 3.735987253995509*^9, 
   3.735987386952028*^9, 3.7359875140035357`*^9, 3.742076515768693*^9, 
   3.742120423594178*^9, 3.7421217190719576`*^9, 3.742126149738986*^9, 
   3.742126269622357*^9, 3.7421320273419304`*^9, 3.7421343654664497`*^9, 
   3.742134452864845*^9, 3.742135099227682*^9, 3.7422210753835526`*^9, 
   3.7422216694310255`*^9, 3.742222106371025*^9, 3.742223848530355*^9, 
   3.742224674792674*^9, 3.7422252606483994`*^9, 3.7422255345883617`*^9, 
   3.742234261236805*^9, 3.7422343405068445`*^9, 3.7422344597363553`*^9, 
   3.7422355447750387`*^9, 3.7428182834917135`*^9, 3.742818339520299*^9, 
   3.7428516704360123`*^9, 3.7428517594492464`*^9, 3.7428520404444923`*^9, 
   3.7428521070549655`*^9, 3.7428522151179667`*^9, 3.743195821519865*^9, 
   3.743787846007819*^9, 3.743788211307967*^9, 3.7437884044413548`*^9, 
   3.7437888211781487`*^9, 3.7437888860682354`*^9, 3.7437889915613585`*^9, 
   3.743789029257879*^9, 3.7437890797781506`*^9, {3.7437891222416973`*^9, 
   3.7437891421704903`*^9}, 3.7437894344097366`*^9, 3.7437898368117895`*^9, 
   3.7437902315884857`*^9, 3.743790263923854*^9, 3.7437903630225906`*^9, 
   3.7437904742306733`*^9, {3.743790588419935*^9, 3.743790604461656*^9}, 
   3.743790676094283*^9, 3.743790775258957*^9, 3.7437911894988704`*^9, 
   3.7437912642058163`*^9, 3.7437914916037493`*^9, 3.7437916883764453`*^9, 
   3.7437918301256742`*^9, 3.7437918752608323`*^9, 3.743792003031004*^9, {
   3.7437921187854486`*^9, 3.743792138915608*^9}, 3.7437922091429076`*^9, 
   3.744667099376339*^9, 3.7446671961976414`*^9, 3.757861939126871*^9, 
   3.7578629250084667`*^9, 3.757863041439584*^9, 3.757863271204225*^9, 
   3.757865855650163*^9, 3.7578659611125116`*^9, 3.7578669602304*^9, 
   3.757867018533338*^9, 3.7578672457331696`*^9, 3.7579349181162615`*^9, 
   3.757934999886507*^9, 3.7579350844617157`*^9, 3.757935151898081*^9, {
   3.757935396756201*^9, 3.757935422740821*^9}, 3.7579354691181493`*^9, 
   3.7579355120798283`*^9, {3.757937980567481*^9, 3.7579380083653283`*^9}, 
   3.7579380521501513`*^9, 3.757938092680876*^9, 3.7579494799247828`*^9, 
   3.757949515335103*^9, 3.757949658297699*^9, 3.757949751959888*^9, 
   3.757950079705363*^9, 3.7579501455974092`*^9, 3.7579506070968857`*^9, 
   3.7579507478868513`*^9, 3.7579508171944084`*^9, 3.7579515753911743`*^9, 
   3.7579518051848783`*^9, 3.7579518705449443`*^9, 3.757951903782096*^9, 
   3.7579519391155066`*^9, 3.757952005804261*^9, 3.7579520730902915`*^9, 
   3.7579521585802703`*^9, {3.7579522353939743`*^9, 3.757952265079012*^9}, {
   3.7579523049440374`*^9, 3.7579523297796173`*^9}, 3.7579523903230953`*^9, {
   3.7579524547968845`*^9, 3.7579524780656457`*^9}, 3.757952572023438*^9, 
   3.75795268263737*^9, 3.757952728993673*^9, 3.757952761035014*^9, 
   3.757957830968934*^9, 3.757978041196042*^9, 3.7579781343830347`*^9, 
   3.757978191132817*^9, 3.7580210401171217`*^9, 3.758021100601065*^9, 
   3.7580211774998827`*^9, {3.7580212323631487`*^9, 3.758021262447815*^9}, 
   3.758021460748705*^9, 3.7580214935765676`*^9, 3.758021539738823*^9, 
   3.758021602546255*^9, {3.758021682136816*^9, 3.7580217048095217`*^9}, 
   3.7580217531248116`*^9, 3.7580217957478876`*^9, 3.758021958466086*^9, 
   3.7580220820480337`*^9, 3.7580221172371073`*^9, {3.758022147289957*^9, 
   3.7580221698516045`*^9}, 3.75802226335881*^9, 3.758025109758492*^9, 
   3.763393345238391*^9, 3.7743719579249077`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"e1353f72-9332-4dba-9b09-0abe4bbe8d06"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wellMixedParametricFunction", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/.", 
    RowBox[{"wellMixedsols", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.728826929339774*^9, 3.7288269459509735`*^9}, {
  3.7288270231530633`*^9, 3.728827059043432*^9}, {3.743790341908575*^9, 
  3.743790342540745*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"23c82447-d4dd-44d2-8bdb-cb89de92b8a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boundary", "=", 
  RowBox[{"t", "/.", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"wellMixedParametricFunction", "[", "t", "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "t"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.742235893050787*^9, 3.742235933937379*^9}, {
  3.743790453735255*^9, 3.74379046275609*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"8429b284-72fe-4cd2-b030-9db5af07a6fc"],

Cell[BoxData[
 RowBox[{"{", "0.42857142857142855`", "}"}]], "Output",
 CellChangeTimes->{{3.742235896649454*^9, 3.7422359344026527`*^9}, 
   3.74281828352662*^9, 3.7428183395552464`*^9, 3.7428516704679704`*^9, 
   3.7428517594751773`*^9, 3.742852040472492*^9, 3.7428521070759535`*^9, 
   3.74285221514198*^9, 3.7431958215532875`*^9, 3.74378784605916*^9, 
   3.743788211348404*^9, 3.7437884044778605`*^9, 3.743788821218326*^9, 
   3.743788886107977*^9, 3.7437889916078568`*^9, 3.743789029308075*^9, 
   3.743789079827937*^9, {3.743789122288143*^9, 3.7437891422082767`*^9}, 
   3.7437894344518104`*^9, 3.7437898368547955`*^9, {3.7437903494387302`*^9, 
   3.743790363235798*^9}, {3.743790463251667*^9, 3.7437904743621597`*^9}, {
   3.743790588542313*^9, 3.7437906045773315`*^9}, 3.7437906762257643`*^9, 
   3.7437907753748116`*^9, 3.7437911895678263`*^9, 3.743791264283948*^9, 
   3.743791491708473*^9, 3.7437916884454975`*^9, 3.743791830210297*^9, 
   3.7437918753389797`*^9, 3.743792003119965*^9, {3.7437921188232384`*^9, 
   3.7437921389508734`*^9}, 3.7437922148267612`*^9, 3.744667099391962*^9, 
   3.7446671962289195`*^9, 3.7578619391737585`*^9, 3.7578629250449576`*^9, 
   3.757863041485097*^9, 3.7578632712445154`*^9, 3.7578658556970263`*^9, 
   3.7578659611593733`*^9, 3.757866960275281*^9, 3.7578670185752263`*^9, 
   3.757867245783036*^9, 3.757934918147503*^9, 3.7579349999177494`*^9, 
   3.757935084477336*^9, 3.7579351519137*^9, {3.757935396771785*^9, 
   3.757935422772025*^9}, 3.757935469149356*^9, 3.7579355120954494`*^9, {
   3.7579379806924505`*^9, 3.7579380083965316`*^9}, 3.757938052181431*^9, 
   3.757938092712117*^9, 3.7579494799716034`*^9, 3.7579495153507605`*^9, 
   3.7579496583289413`*^9, 3.7579497519911284`*^9, 3.7579500797366066`*^9, 
   3.757950145628652*^9, 3.757950607128128*^9, 3.7579507479180937`*^9, 
   3.7579508172256513`*^9, 3.7579515754224176`*^9, 3.7579518052160797`*^9, 
   3.7579518705605717`*^9, 3.757951903813334*^9, 3.757951939131129*^9, 
   3.757952005835539*^9, 3.7579520731215363`*^9, 3.757952158611188*^9, {
   3.757952235409633*^9, 3.757952265094651*^9}, {3.7579523049753056`*^9, 
   3.757952329810858*^9}, 3.7579523903543444`*^9, {3.757952454812504*^9, 
   3.757952478096922*^9}, 3.75795257203906*^9, 3.7579526826529417`*^9, 
   3.7579527290249014`*^9, 3.7579527610506716`*^9, 3.7579578310038414`*^9, 
   3.757978041259864*^9, 3.7579781344158034`*^9, 3.757978191157667*^9, 
   3.7580210401483593`*^9, 3.758021100616688*^9, 3.758021177515476*^9, {
   3.7580212323943825`*^9, 3.75802126246344*^9}, 3.7580214607799544`*^9, 
   3.758021493592151*^9, 3.7580215397677455`*^9, 3.7580216025774965`*^9, {
   3.7580216821680584`*^9, 3.7580217048408012`*^9}, 3.7580217531404305`*^9, 
   3.758021795779129*^9, 3.758021958497328*^9, 3.758022082091917*^9, 
   3.7580221172683496`*^9, {3.758022147305561*^9, 3.7580221698828325`*^9}, 
   3.758022263374431*^9, 3.75802510985222*^9, 3.7633933452696333`*^9, 
   3.774371957964802*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"85da20ee-812a-450a-a7bb-53d05995e124"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["trajecotries through population space", "Subsection",
 CellChangeTimes->{{3.7578611565079317`*^9, 3.7578611603811264`*^9}, {
  3.7743718803768916`*^9, 
  3.774371886520339*^9}},ExpressionUUID->"beefca68-809f-4879-8db3-\
852c62bf4050"],

Cell[BoxData[
 RowBox[{
  RowBox[{"transform2Simplex", "[", 
   RowBox[{"{", 
    RowBox[{"n1_", ",", "n2_", ",", "n3_"}], "}"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n2", "-", "n1"}], ",", 
       RowBox[{
        RowBox[{"Sqrt", "[", "3", "]"}], "*", "n3"}]}], "}"}], "/", "l"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7421246995582547`*^9, 3.742124741631379*^9}, {
  3.7421248057886763`*^9, 3.7421248363138685`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"c9b895cf-041c-481b-b070-d00cd5b05d9e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"LightGray", ",", 
      RowBox[{"Triangle", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"transform2Simplex", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Indexed", "[", 
          RowBox[{
           RowBox[{"sol", "[", "t", "]"}], ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "steps"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "t"}], "}"}], ",", 
        RowBox[{"ParulaCM", "[", "t", "]"}]}], "]"}]}], ",", 
     RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"transform2Simplex", "[", 
      RowBox[{
       RowBox[{"wellMixedParametricFunction", "[", "t", "]"}], "//", 
       "Flatten"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "10", ",", 
       RowBox[{"boundary", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"y", "<", 
         RowBox[{
          RowBox[{"Sqrt", "[", "3", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"Abs", "[", "x", "]"}]}], ")"}]}]}]}], "]"}]}]}], "]"}], 
   ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"transform2Simplex", "/@", "fixedPoints"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", 
        RowBox[{"PointSize", "[", ".025", "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.757861446462854*^9, 3.7578615100647106`*^9}, {
  3.7578616665973372`*^9, 3.757861682995455*^9}, {3.7578618106178694`*^9, 
  3.757861828798135*^9}, {3.757861869711978*^9, 3.7578618793034863`*^9}, {
  3.7578619469219894`*^9, 3.7578619587751055`*^9}, {3.7578619913896947`*^9, 
  3.7578619921085215`*^9}, {3.7578620296709037`*^9, 3.7578621332292624`*^9}, {
  3.7578621735675325`*^9, 3.7578621850452204`*^9}, {3.7578622724572973`*^9, 
  3.757862309896206*^9}, {3.7578623637804327`*^9, 3.757862382978468*^9}, {
  3.757862451941653*^9, 3.757862460220056*^9}, {3.7578625599124866`*^9, 
  3.75786262243147*^9}, {3.757951771857668*^9, 3.7579517742789774`*^9}, {
  3.7579519587229*^9, 3.7579519607475357`*^9}, {3.7579525777315736`*^9, 
  3.7579525788409786`*^9}, {3.757957882654318*^9, 3.7579579054151487`*^9}, {
  3.757957979079822*^9, 3.7579579980614834`*^9}, {3.7579580775828066`*^9, 
  3.757958079654113*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"7b952499-7532-4b03-bd82-6acebcdbde7b"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.85], 
    TagBox[
     PolygonBox[
      NCache[{{-1, 0}, {1, 0}, {0, 3^Rational[1, 2]}}, {{-1, 0}, {1, 0}, {
        0, 1.7320508075688772`}}]],
     "Triangle"]}, GraphicsComplexBox[CompressedData["
1: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
    "], {{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1], LineBox[CompressedData["
1:eJwl2mWgVWXXRuFDS5d0IwoYKN3dJY0I0iXSgpQK0o1Bl7SEEgqCYhCKCnYg
ikWKdEhLvNf8vh/bNecc93j2OWevvQoLdOnfvF+ihISE2ikTEmL7XLKEhFOJ
ExJGanbriydPSHgjSUJCBbMxKRISriVNSLh5T0JCV+wn2frYH7IFvKbJJsJn
y+6ULY3nt25J2VXqnLLZuRtkU+GjZC9hHXk/YU/zlptnk03Lm4klwYZhDXhp
8Pb4D7ym1tiGPazeaX7IvBWvNE+bMER9OgreKNnDsq1lPzEqoV5tzYr4WN51
8//kumH7eQ2wEvo/eSXxNXhB9XReYvV4bA53F1ZGvoD3LMV9Q52Lu1E2NfaS
7L/mnXj7zQfyevFWYNll0/Fm4Unx4XharAP2I6+ZNd4zf0S9mLcLO4y15pXh
iScMVZ8xT4S/JH9E/gn5t/Wf4iX1awTb6yvJjePfwG/pu+M/8xvif3FLYWux
+9QzeEnUE+Tm8nZjZWULet/SvNXq3LxNsmmw0bKXzTvzfjZ/lvcMbyWWQzY9
bzaeDB+BN8TT4R3xn7hn9M2t9T5eTL8bO4I9wS3LNUoYpj5rPlruqFwbwz3m
pdRrrdnBGpXx8byb2G19D/wArxFeUn+IWxpfhx/QF9K/zE+qn6ifx/8EL8e5
z/uW4a9R5+HnwN+WT4uPiffWX8G78A/gg/S9+avwnJwM/Dl4cvx5PD3WCdvP
bWGd7eaPql/nfYIdxdrwyvFsEob7z7n4zskek31S9jPz0up11uvIq4JP4P2H
3dH3xH/hNcYP88pgb2L3q1/hJVNPkpvP+xQrL1vI+5XlrVXn5b0jmw4bK3vV
vCvvF/PBvD68N7Bcshl5c/EU+At4Bqwz9jOvpTU+MH9MvST2RewY9iTPOGGE
7fn47skdN2gr97l5GfWb1urEqYpP5NzCnsZ+5TyOHeGUNX/L/AH1q5zk6smc
BZw9WAXZ+/185Xjr1Pl4OfHN8unxcfLXsG7cX7HnsL7c1Vhu+UzceXHowF/E
M2JdsAO8Vtb40Ly4eilvD3Yca8srz1MmPK++EN832b9l28l+YV5W/Zb1OvOq
4ZOEb2O9sIOcJthRTjnz9eaF1a9xUqincBZyPsMqxntx3ozjK2eLXAbz8bGP
yF3HuvMOYkP0/Xhr8Dzy87GU2Egsk3lX8194Z+VaW+cjrIR+mf4z/G+8XbL/
O4wmvGB70SyxZrzsCdmnZN/R78XL6ddbt7rMM/rf5JvqS+HH5Mtba4P8L/oi
+pny9+gXyVeQfyuOpfK58HfxjPITYt/Q38B7yP+G95dfi+WVX2CeynyUeSO5
zFg37FfeOf0T1vkYLxnrYD6ihBd5l9RJ8An4P3h7fLN+H15ev8F6XfQ15CZb
7w5+N77j+O/8Znhp/XF+BXwj/qu+qH4WP2Uct7kV5dfHsVM+N74VzyQ/MfYJ
/U28p/zv+AD5hfrU+pf0jfF7zbrLH5Q/r2/D34GXCh9LJT/S+v+qk+IT8ZN4
B3yL/ku8gn6j9WrK9NH/Id9cXwb/W76i9TfJH9Q/qJ8tnyqOTfKV5DfE8VA+
D74Nzyw/Cd+r/w9/Wv6POL/Jr8PyyS8yT2M+2vxxuSxYD+w33pPW2ImVjjXM
T5g/xUnNGWV72SwZZ5LcKbmOcl9hFdWbrFcLn8K5a97X/E9OC/OynBOcStjb
2EPqOZzUcRzifG5eSbYyZ2Mc+zh5Oe/J3YtNjnMj1ovzZ5zHOG+a55ddbJ7W
fIx5E05WrCf2O6ctfxdWRr3P/B/z9pw0nJdsr5gl50yWOy3XSe5rrJL6bevV
xqfGgUO2n81fti3Ny3H+4VTG3uH8pn9YP5eXRj9Vv5T7BV6Z84Cduwp/Uxz/
+Pnw9+Wz4FPiZ9Pfxp/h/xXnLO7r+nT6sfqmeDazp+X/kL+gbxfXgXhZ/ZdY
WvnR1r+qToFPwc/gnfF39d/glfXvWK+OzDRrJZLvb37ItpV5ebmTvCrYZt7v
+kf083hp9dP0y7h78Sqcwn6vqvy343fk58e3y2fFp8a5D+vNPRTnKd5b5gVk
l5inNx9n3oyTHeuF/cl5iv8JVi72LfOT5h04FbxXOt4Y9TXze3hTZc/KdpH9
Fqui3mzNuvh0XuI4YfMG2BxWt47rZd4pXlV8C6+Yej4vnXo5b595VdkivGq8
d+L35BXgfSCbDZ8WxxysD+9wnKd4680Lyi41z2A+3rw5J0ccc7G/OO35n2Ll
Yz8zP2XeMa7DOGNtr8dxkDNN7pxcV7nvsKrqLdarh8/gJJFN5OcbiB1RPxHX
zLzTvGr4u7xH1Qt46dUreNVlN8fvJVtQ9kM8u+z02H/iJKLvK38EH6ofwtmA
38fJ7L2WiWTEJ8Q5G+uNHeJ24O0xrxB/v9jPsNNYJ15FXgbeOPWN+Exkz8t2
k/3evJr6Xet15dXHX+YllU3MexY/qm6Dn+FVx7byHlMv5GVQT+et5H2JVZMt
yqvB2xI17yPZHNgM2UTqfryj5sN4Q3kbsUKy9/KW8zLhE+M8F8dj7DCvI+8z
84rxd+R9i53BOse1Fme87c34XOQuyHWX+8G8unqrtbpxGuCvcJLJDsKO2T6J
neXUMN/GKa5exMmonsFZxfkKqy5bk/Ou7YOcj+Vymr8sl1jdn3PMfDhnGGcT
dr9sFr/TCl5mfFKc47C+2BFeJ97n5pXUK3nfYWexLrxKvEy8Cer/4jORvSjb
Q/ZH8xrqbdbrzmuIv8pLLpuENxg/rm6Ln+PVxN7jlVAv5mVSv8x7g/c1ViN+
J14t3lb1Q7z78B3yufBX4higT6IfwD+Oj9AP57+NP8BZyb0XmxznQfN+5kd5
F+U6877AKutX6b/Hz+FdY5/mTbS9FZ+N3CW5nnJb5X7Caurfs2YPfSOZ13gp
5JP6eZ/D/1a3wyvh5/m18Pf5f+hL6l/nZ9a/ol/N/wavGb8jvzZ/m/phfiF8
p3xu/NU4LuiT6gfy/8af14/gv4MX5mTlr+JnwafgLfC8eH/8WNy367vw9+JV
9G/of8DP491iX+dOsr0dn53cv3JPy22T24/V0r9v3Z76xjIzeffID8FO2D6F
XeDVNt/O+1OulH4J7179q/o1vG/xWvJ1eO/ZPsK7P+6XZfNgr8l+o0+mf5Z7
In7XuI+Rz6qfqm+J5zMbIH887tn1XeX34VVjf8SyyE+2/p245sJfwy/jvfD3
9D/HMxT99rjekRmq/0e+vb4yflG+jvU/kP9LX1q/VD6L/jX9Ws53eO34vPzt
6/LfVxfjP4Dvls+Lz5RPrh7E/Qd7gbfZvIjsak4282nmrTj5sYHY35xunC+x
auqfzC+Yd4/PmTPF9q5Zas5MuStyz8Q9MlZH/UE8m8GayMzipZRP5mcchp9U
d8Cr4Je4dfEPuWXUy7hZ1et435vXka3H2W77KKdw3PvK5cNmyaVQD+acxF7k
bDEvKruGk918unlrTgHsWewEpzvnK6y6er/5RfMenGycqXFe5qThzJK7Ktc7
7j+M66o/jGsezmxOKtnh5qdsO5pX5fzLqYd9xDmkL6tfzsumn6l/k/sDXjf2
O3+P+vwP1I/xi8R9r3x+fLb8PernuKfiM8NGct/FHoyflbuWmwOfgT+BF8QH
4f9we3C/xmqoV8e+hl3Cesa1LDc7d1qcq7mzZa/J9on7EfN66o/Me/Ga8ebw
Usd9OG8EflrdCb/Mq499zCunXsHLrp7Fe4v3I1Yv9kdeA96H6uK8PfHsD5sj
m1I9hHc6Pj/eKN5W7CHZ7Lx1vJz4y3H8xQZjJ3k9ed+Y11Sv4R3A/sWe5lXh
5eBNj/M1b47sQX19+Y/j2kd2rmwaPIXs89gZdWesmrWuyDfAd1i7vHolL4d6
Pe8n8/qxL/Ia8j5Sl+AVjXtf2YL4XNlU6qG8M9hLvG3mD8vm4L3Jy4W9grXh
FcKfw0/Fcwvet1it2OfML5v34lXl5eTNiPNZPPfjzZW9Lts3rvOxBuodcdzl
zeOljXtw3gvYWXWXuM/mXeU1xHfyKqhX8XKqZ2MbuPuxBrFPchtxP1aX5H4u
ex82Tza1ehjvrPlI3mjee9gjsjl5b/Fy46/GsRUbgp2O5xa878xrq9fyfsWu
YM/wqvFy8V6OcxlvnuwN2X5xvW/eUL3T/BleS958XjrZlLwX8XPqrvg1XiNs
F6+i+g1eLvUc3kbez1jD2Bd5jXk71KV4X8gWwubLplEP550zH8Ubw3sfKyab
i7eelwd/LY61cezGzvCe4X1vXieOYbyD2FWsN686LzfvlTgW8tLh8+VvyveX
f1//B95IvwvvrW/FX8BPz0nFH4mfV3fDr3MbY7u5ldSrebnVc3mbeAewRrF/
8h7n7VSX5u2VvR9bIJtWPYJ3PvZT3ljeduxR2dy8Dby8+Mw49mLDsLO83rwf
zOuq3+T9hl3D+vDycF6N4wVngdyf+sayu/V9ZFvHMwvZDDKjsAu23bEbso+b
f2LNw3KV9Wt4efTz9G/zfsEbyzfh7bItw9sn94D5wrjXkkunf553ARutH8f7
AH8sfja/00ZuPnwW/iReBB+On+Nf1vfh/4jXi/0Oyyv/Whwr5NPjC/H/8AH4
dv1f+OP6T+I4LP+S/qJ8D/1N2SbW/lT2iGwV/VrZvPr5+nfkf8Ufl2/K221b
lvelXGHzRXGfJZde/wLvIjZGP573IV5cfhMvPzY7jkPmI8zP867I9eX9hNXX
vxX7F34d78vLx5sZxwjeIrlbcgPlPpA7hDXRf4r11bfhLeJllB+NXbLtidWI
5zncptge7lF9Vf06bj79Zl4z+U/ky8l/hWXwetusgMwcswdlnudfkL/Kj39c
2o81iGs4LL/srPieyy7GbmPPYh/KHsaa6vfEZyk7Rv+v7NP6W7LNrPuZ7DHZ
avo3ZfPrt8g2l/1Utrzs11gR2cVx/yebUf+i7CVsQlzjyhbUz9U/FNe0cQ4z
mx3fS7PX9XfwQfyP+EewZvrPsLbyY/WXZXvpb8s2916fyx6Xra5/S7ZAPA+R
bRHv5TVHPrV8BpklMndlBst8rD+KN9d/jrfjjNNfkX9GXxO/I9/Ce3wh/7e+
hn69fMG4j5BvKb8nnl3E3z/ujfGi8q/HPaI+k36k/L/4xLhelL9PP0//cFz3
xrnAbK410pgt1R+Le06vVl6fxT12/K3ivhR70NpL4rpYn1k/ylqX8UlxzSZf
SD8//lbxXMfsBfmL8tf0A+V/xhvGdTBWSH6e9dPKL8OO61vgX+ifwifor+K9
9bX4d2VaWm8v/4S+pn6D/H1xbyF/EGsi35r3edxnxu8Y955yD2FL5e5Vv8S5
gk2O6zDZ+/UL9MXi2jKOqWbz+enMMvKXm8XD/efiM1C2lN+LtZefqL8m20df
O55xmLWS3Sdbi7dRtlDcJ5j/Zt40zsGOXU+IfhHXcLxH4r5R9mF8mWwW9Wje
VWwK7yPzErJ5eVt5D3gt0KfHM3FXyCeSGRJ/l/jcuPuwDtxJ+uuyffWJ9LVl
25jtjesrsx/0Wb22xbq8hbEfWvNR2Retecmag/ADWKO4FjYvLLuQn0E2czwf
wRPLDsX/wVrLfol1lF1snkl2svkN237mdTiJsdbYl5w6/E2c++Pcaf6k7L64
VpL9EcvmNQa/pp8a1yd4Yf0i/WP6kdb5lztY7hfzxnGNF8cU7AbWz1o1/O2K
8BapM/JWyZ7UPyH/lb6T7OuymeO7KjsFu6nujyXB6sq3Nfsyrm9iX4l7eLNH
OMu9X3b1WGtdx6bFNYZsEf1iffG4LsR/1T8e5w/9TV5/a9X0XkVlF6szyd4b
zy5kk+DDZE9hbXhfY/3ieQN3CXZvfF+5U/H/1APwpNgT2Fe8enFs5j2gXsDb
jv2ONYtrJF473ldxLcPbL1sMWyGbQz2Od8N8LG8672OsZJxneNt5RfHX8RJx
PRjX5Pomcc7Q/yc7QLaW7IOyr8dzENnVcqfjXsXrltlAs2TybeS/5tbH37FO
YfVC7/sB9gfWPJ4HcL6Oz5Dzs1xOr/GyN/Uz4poAf1C/RF9SP4p32TrXrTNU
9jesqX6D/hh+Cx8Yz0l4S+J5BW+NXFLz4XI75M5gT/K+wfrH8w7eUjyL/HTs
tu2zWHLzBtz2Zt/E52l2QJ/LawL/P/3LcY7HH9Iv1ZeKawtrXfFew+R+N2+m
3uh9jmO3sWfjWQBnqW0Wzlq5ZOYj5HbKncXa8r7FBsQzC94yPKv8DOyO7SAs
RXyfzL+J76ZcQ+ts5hXRL9J/iP+Jt4h7ed638dnxfpF71HxlPDOQy62fyLuF
vRLHJNmH9cv0peO6K74LZsviuYLZOn1y/vP8XfxzWDv577Bu8i/r78oO1tfF
7zFrK/+t/El9I/4W+aJxHsY6yn8nX1v+0bjfwB+TXxX3/vo8+knyt/FXY5+V
f0S/XF8mrqXwP/TN4xiuL4Yvj/tvPEvcz+MprPcCvlt/Hn9K/nu8u/wr+vgH
7Of0KfWN5TsZfW+NOmYH9Xm9Jsvc0Y+L50RyO6xZSmaHbDFsBVY2rpPielrf
wvttkj1hdkd2UNyTyj7mtSLuneWzxn24/D34i/Kf6C/g7fk/4D24r+oT6Yfo
6+GpzNrJfxfHEP3j/HfxB+O6A+ss/4P168YxNK778eLyb+A/xzMx/RT5u/hM
+Z3yj+pXxrkZL2c2Wv6q/A39C/J/4S1jP8OKy6+M+2T5bPh6PKX8SPzTeCaG
d5D/Ee8p/1qcOvVD9fXx1GZPyX8vfzqeP/G34g/F9xP7C2sZ98K8H23rxXFW
7ne5EthqufzqqZz4n0hmcXbF31W/SrZ8nN/wQ/pWsc/p7/IGJ/v//x+qhOz/
AGvEraM=
        "],
        VertexColors->Automatic]},
      Annotation[#, "Charting`Private`Tag$4224#1"]& ]},
    VertexColors->CompressedData["
1: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
WmnfC68tEpbjauQ8kUlZIWdH4HpQU9AL4x78m6DPDrmT3l1OcztjTGAgY6Nq
k3I3LAUjvKW6J9BVn10vBwK2jpFLEhZ04fEDPrUdElNQyYkUnFMmwFTwkMiM
7ADvDs/g91pcNFgf3fDJiZzr/3ZF21W3YV4v/MDgGBen+BrP7Jdn4kqrVZHJ
gWakZRTwsKhcdCi9T5rhYWHhnFWIcWk9rKOjDiKEC9GzI2KsQRboe7/PH2yt
QUKTdMZ2RS6EtkdPLMljIz8nMYG5qwqbLinZPqBPocpaRIjqx4F2ooPV+ahy
JLz4nZxYOoXPx8S6TMn+axmQT2S+KMDDjoVU59Vc8N12bJifmkKtFvP9XFIm
rsZ78b7ua4BpqRNzY3oNZuO27L6QSIX1H/egAplGvPurrTDt14Aua9cd4wnj
EO5c/fGyfwNOmcV+mc1qQV7rIllx8v71Xf5EsG1LHeZOhviK2LbDKjw0PayK
vL8KE9eviaxAHvvGoFh3J/RrewWrelmwz5o3ZkZkwTPi+5GF2T1QFvs1k/ye
A9F/Qsv2XvTAgGzQLT+yk8UrLnnNKU3ggkvFn7xrHlglZq/akTWALzq/uHMK
EyinEEX2MeHYy93pelJ8CE8k1SzkZjjYaCK45MinD5jjtvCevDwMhxKRlyvi
OGhivnZdx87E8G2xD/diR0A0a+1L0ybfJ4qerjLJQfSygYycnlGkDWbEs7+w
8VNn55V9R3JReaLvY4kvBXSLyMa3ZA/WZmo2rG0nvUhaxzhCh4pEnfz2U7fZ
uHz7jNT9oDT0HFgq2i46hjOlYZVCpmzEDtBvrXgUC/hpnXk1NYYYqc3Rj9TZ
sGU66/+38j0kYq5rfyPPr4tDtz7Bx0Z04q3A24ohePeMZfP1MA2XrqV+4nnH
givr7qM1DsFAo+LR8goa+jfxHhVaxiL38+Od9Z3vsHS+Rjf2AB2LKxq87l1j
omeadeLEXDxU/NfcKYujI9tBMMUimUCJsLaXhE02zBTOvzNZwkDPt+xpGp0B
lQH0zVsXwdjno7r9VQZycveeURdlYOlgZ/FTnko0N+32UClmoCsKV5bto4Pv
+7dPGh/q8HbFjRDZZQRCby78mKtHdpbArrspPK3QWnhAdY8RgZX+ps0XL4zj
oeXEx3XLOhGToWRtEkjuL/sdVw5dGMOJ1K8GL1t6kGAU8nOa3O/yV6riM6+Q
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
feCd/1Uq+jsnti+orMNjaJ36KtEOHdeH1Bk3OnKOWUYzuiqRJsNtWXC5E3fS
Fth0PGDCb5i11YyRh/l1F+ta9/dglhkYtvk8G3qbj8SSjEMQozgpn5HWB6Ul
XgeDlTiILpjKPeIQjRzFaQ972iCUnkq35/1lY2XZys3Nrlm4cHB8INptBJp8
PQpvT7GBRWtnp1bkQuIjlVfwfhTxUrLrvs+z8HlpiqHkzjx8rN588a7bGFI0
1f42EZzCM3qsukU3F/xR60XLFcYhrcgZM3RjIc720L0ejUzY0Z+xlsyOo+Rv
8dkFViycjhUuiP73DsduLQohN5Pg6qSo98CQhZ4GVnq9ayxCDn1zfvSMjJrr
AZtyVrKw4cWs08aLkdiX07sgcCsFuz9VepllMvF6Yfkhi0cRuHvmQqRUFgUP
X2dU7djEBF9crNHYnyhsMJUP2vIfMS9aB9bKPWJAV8VZ4fO2bKxSTaL/+UmF
R+gOiUP8dMjn7NIyH/yE1njliVeE3+bfN1onqk5DwjLJ6G2KFfg64fPGKJMG
MmuV5xdzKmQUbxR8KKmFvYZBT+g/Gt53tTmtvElB1gcjpypWM3QneYt6DxE9
ZTRZNOlLxnvF5InmBx0Q8xCdmwukw1HtmUCpDwl6vXY/hHb04JT2v8CXZXQ0
H79sZxpA7PubQ8YnVAbgLb3Dr5tMx69XH7UKw8bg6Hqm1b5qDNIN3QKZxLx8
FVvVJvl3GBeWhZ+4a8TB2OfJVE8DOmwlNYftA7qw59yHxGaCF/OPai+O1aCj
NCipPlq5E+4Xq5S627n4tuLrQk8Lwgf+jaYujGiHZixX78QkD4uM17nUpjNw
s2hr9sTCRuwosg74WszDtVeXklyI/dcrmJu5ia8OqvT/Lr9f1gibz+2Plb7V
oubHEEfhGAknef7n+kUa8bHKtKjoXyNC30Qbm9lSoO2yN+EqpR4DvydiDUTa
UN41tlndhYaHz75YN9TV4EfCLrfF//9fl/CYhStvM5Alvj51R/9XrOu/Vr6w
rgsFrARacjgL7jUHf83cTobcuvU3M/wIb2ijFWUy2PjWsbSvdeIBLt65IhsV
0w+xjeJaZtocHIag8wWp51j1eNGpItVB2K3UCzu6kQOHvzf4XrR+wA7bU15b
OoeRrBE/Ff2IjfYUQ+nAyWxMq9RdKxUaRd1Pnbvft7ERtaekU+F3Lj7MfWLo
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
Z7C0HzzzEheXCL+aYZYOeVGo+PTR8HerWx9c1/KsO3WKjJqhnTdS26hwUCj4
W23SC63ufSHdnkQvi8/Zbn5Bxc67QsF8U53gOaUrNtpBw0u1kU52cyqYc0Pf
lzo6cHph0ahjxyRoNuQhhvr/+yq9n1bKaceeKYvr9C8MODf2lp45T0Vb7Vch
9b4WWPWm657/ycRPbaunmu/HcVAmL0/9YR10AguGjSuZMLvQo1l9dQKG8TXv
MyyroaD9w/HyHSY693FfKFOioe9wo88fvwoEsRV+7t7ARLCrgvH6bXQwr5J+
FbCXgUNd/HV5OoPwnFfmduunsEHwlcTb0nyE/vpwXaCfgQ6V582XJBk45r8+
8U96Jvh8w1l9f9ZCmB75/Pq9KoR/09zPv34U52UvSTmL12Gx3PK8/s06DHsK
9jK4x7D1imt3xb5abKdGsN7ybILiC5LarCgFPt0F1eL6VQSHl9noDrVgXMGK
9/HBcfz+9fWKBsd3OKB/5zHzdtx41b66To0G/d+aqmpZCfh1duGGrWwXnKt/
/ZbsoIPsvqLWSvQl2I2O1u826oHJqNLrOYVJDJTJaQ8dfYtL8ReezKzog5i0
un/23klofUg9+pj2GffV3j0LNemH38UCt8sUOkoeXig6+TYBdtJjF/2+DKD+
6SmXEW86jGU/pxx0S8PKk5JZCSODGLYx3OB+lA7XfQd13NMzINOvyXi9bhhG
Vrcv/xwiuNqWYz2nVCaK3nvZPskYBqn60HDmBxpm6mcO+Qmkg9NkW2z6/RHM
Lmz38LxNg1YA68DvhwlwdfVrZCfWowLrJqk3+jSsaYpy8PGMwL/oH2kNO0g4
FzxFjlAg5pojluuyeTBWr76+930FCZ5fdp5emplA9uY3fz//C8CLzbeEOY3H
wOJou17VaQJ91YPuDJMA6Pvm2iz3jqHuo63bKsJXGzlJUx5iYTDp/yM3qEVG
p/3UKXblcXxnSzJzbIzFxtc+OdF5ZGwh868xdaFi+tP1lkD2TBS/4b79l4eC
HE+uzebfKPjRURrF71CE+5/GLvo8omBg8MBRn3EyYhVXnY7eU47DG545J9ZT
UNxz5Xf/ajJcl/i72/trIMMMvibPS/i4Zlzm/d1jKO/dnPH7SDMyeHyifppR
oUffzhchSkL7ngW3yvI2hPRn3FT4TMUN/sEz7/aNwqL4xm79iC5cmmlXyW6k
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
vUibiwi5yWc/L3HhEDqfur/2Nf4Hj2veAA==
     "]], {{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[Large], Opacity[1.], Dashing[{Small, Small}], 
      FaceForm[Opacity[0.3]], 
      LineBox[{{0.14285714285714307`, 0.}, {0.11643734286071405`, 
       0.03559145015970637}, {0.09001754286428454, 0.07118290031941428}, {
       0.03717794287142551, 0.14236580063882934`}, {-0.06850125711429256, 
       0.28473160127765945`}, {-0.2798596570857277, 
       0.5694632025553181}, {-0.5000934586184633, 0.866151306621004}}]},
     Annotation[#, "Charting`Private`Tag$6629#1"]& ]}, {{}, {{}, 
     {GrayLevel[0], PointSize[0.025], AbsoluteThickness[1.6], 
      PointBox[{{-0.015483709313244609`, 
       0.28377564549820083`}, {-0.01548370931303572, 
       0.2837756454988359}, {-0.01548370931279236, 
       0.28377564549971906`}, {-0.015483709313589555`, 
       0.28377564549699197`}, {-0.015483709313447669`, 
       0.2837756454974549}, {-0.01548370931343046, 
       0.2837756454974925}, {-0.015483709313709015`, 
       0.2837756454964859}, {-0.015483709313210692`, 
       0.2837756454983161}, {-0.015483709313395488`, 
       0.2837756454977249}, {-0.01548370931306614, 
       0.28377564549886064`}}]}, {}}, {}, {}, {}, {}}}]], "Output",
 CellChangeTimes->{
  3.7578619597121286`*^9, 3.7578619925925245`*^9, {3.757862032935749*^9, 
   3.757862084415182*^9}, {3.75786211709901*^9, 3.7578621340259514`*^9}, {
   3.757862174098442*^9, 3.7578621857481575`*^9}, 3.7578622745092926`*^9, 
   3.7578623105676084`*^9, {3.7578623648736596`*^9, 3.757862383509321*^9}, {
   3.757862452784273*^9, 3.75786246065744*^9}, 3.757862564981533*^9, 
   3.757862632031661*^9, 3.7578629252147293`*^9, 3.7578630416746187`*^9, 
   3.7578632714730167`*^9, 3.757865855881837*^9, 3.757865961328616*^9, 
   3.7578669604667687`*^9, 3.757867018778681*^9, 3.7578670978676615`*^9, 
   3.7578672459917197`*^9, 3.7579349183349605`*^9, 3.757935000073963*^9, 
   3.7579350846960354`*^9, 3.757935152069914*^9, {3.7579353969592714`*^9, 
   3.757935422928241*^9}, 3.757935469287941*^9, 3.7579355122829065`*^9, {
   3.757937980895537*^9, 3.7579380085839868`*^9}, 3.757938052384474*^9, 
   3.7579380928995743`*^9, 3.757949480112237*^9, 3.7579495155381804`*^9, 
   3.757949566437298*^9, 3.7579496585163984`*^9, 3.757949752256692*^9, 
   3.7579500798555913`*^9, 3.7579501457848654`*^9, 3.757950607315584*^9, 
   3.757950748136793*^9, 3.7579508173193803`*^9, 3.7579515755942526`*^9, 
   3.757951805325427*^9, 3.7579518707323627`*^9, 3.757951903985206*^9, {
   3.7579519393029604`*^9, 3.7579519612786965`*^9}, 3.7579520060073385`*^9, 
   3.7579520732933693`*^9, 3.7579521588425703`*^9, {3.7579522355658455`*^9, 
   3.757952265250847*^9}, {3.757952305147154*^9, 3.7579523300296197`*^9}, 
   3.757952390526171*^9, {3.757952454999959*^9, 3.757952478268757*^9}, {
   3.757952572210895*^9, 3.757952582386736*^9}, 3.757952682824778*^9, 
   3.7579527291967754`*^9, {3.7579527613161983`*^9, 3.757952783645851*^9}, 
   3.757957831226282*^9, {3.7579578898751726`*^9, 3.7579579059299088`*^9}, 
   3.7579579988445024`*^9, 3.7579580806009226`*^9, 3.7579780416812754`*^9, 
   3.757978134582556*^9, 3.7579781913493595`*^9, 3.758021040367058*^9, 
   3.7580211008353868`*^9, 3.758021177687346*^9, {3.758021232566218*^9, 
   3.7580212626040325`*^9}, 3.7580214609361615`*^9, 3.7580214937483644`*^9, 
   3.758021540000124*^9, 3.758021602796195*^9, {3.75802168230865*^9, 
   3.758021704950118*^9}, 3.758021753281023*^9, 3.7580217959197216`*^9, 
   3.758021958684785*^9, 3.7580220824070735`*^9, {3.7580221174870625`*^9, 
   3.7580221700547037`*^9}, 3.7580222635462675`*^9, 3.7580224832866898`*^9, 
   3.758025110055299*^9, 3.758025154949802*^9, 3.7633933454665456`*^9, 
   3.774371958214097*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"af07d87c-0762-43a6-bb49-dd7715f322ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fig4B_simplexTrajectories.svg\>\"", ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7578670279052076`*^9, 3.757867033419664*^9}, {
   3.757867066692689*^9, 3.757867102167143*^9}, {3.7578672162594757`*^9, 
   3.7578672193825455`*^9}, 3.7578672551492395`*^9, {3.75795253801118*^9, 
   3.7579525538966217`*^9}, 3.7579525868189898`*^9, {3.757952771216648*^9, 
   3.7579527863993206`*^9}, {3.7580223483732862`*^9, 3.7580223511853547`*^9}, 
   3.758022478397215*^9, {3.758025143546235*^9, 3.7580251574335938`*^9}, {
   3.7743718956736536`*^9, 3.774371917905664*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"2c35fbd6-0052-4b2f-9626-33c3e8d3e8ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarLegend", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParulaCM", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "steps"}], "}"}]}], "}"}], ",", 
   RowBox[{"ColorFunctionScaling", "->", "True"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "12"}], "]"}]}], ",", 
   RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}], ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "500", ",", "1000"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7579580880840144`*^9, 3.757958121972802*^9}, {
  3.75795823594969*^9, 3.7579582588888383`*^9}, {3.7579583072830153`*^9, 
  3.7579583176457553`*^9}, {3.7580225864027405`*^9, 3.7580225991700015`*^9}, {
  3.7580230655809393`*^9, 3.7580230727193594`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"14874ee0-b17b-4cbd-9ed5-33e9857cc04b"],

Cell[BoxData[
 TemplateBox[{StyleBox[
    StyleBox[
     PaneBox[
      GraphicsBox[{{}, {}, 
        RasterBox[CompressedData["
1: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
xf8AUx6ibg==
         "], {{
           Rational[-15, 2], 
           Rational[-225, 2]}, {
           Rational[15, 2], 
           Rational[225, 2]}}], {Antialiasing -> False, 
         AbsoluteThickness[0.1], 
         Directive[
          Opacity[0.3], 
          GrayLevel[0]], 
         LineBox[
          NCache[{{
             Rational[15, 2], 
             Rational[-225, 2]}, {
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[-15, 2], 
             Rational[225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}, {
             Rational[15, 2], 
             Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
           112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
         CapForm[None], {}}, {Antialiasing -> False, 
         StyleBox[
          LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
          Directive[
           AbsoluteThickness[0.2], 
           Opacity[0.3], 
           GrayLevel[0]], StripOnInput -> False], 
         StyleBox[
          StyleBox[{{
             StyleBox[
              LineBox[{{{7.5, -112.5}, 
                 Offset[{4., 0}, {7.5, -112.5}]}, {{
                 7.5, -0.11261261261261261`}, 
                 Offset[{4., 0}, {7.5, -0.11261261261261261`}]}, {{7.5, 
                 112.5}, 
                 Offset[{4., 0}, {7.5, 112.5}]}}], 
              Directive[
               AbsoluteThickness[0.2], 
               GrayLevel[0.4]], StripOnInput -> False]}, 
            StyleBox[
             StyleBox[{{
                StyleBox[{
                  InsetBox[
                   FormBox["1", TraditionalForm], 
                   Offset[{7., 0.}, {7.5, -112.5}], {-1, 0.}, Automatic, {1, 
                   0}], 
                  InsetBox[
                   FormBox["500", TraditionalForm], 
                   Offset[{7., 0.}, {7.5, -0.11261261261261261`}], {-1, 0.}, 
                   Automatic, {1, 0}], 
                  InsetBox[
                   FormBox["1000", TraditionalForm], 
                   Offset[{7., 0.}, {7.5, 112.5}], {-1, 0.}, Automatic, {1, 
                   0}]}, 
                 Directive[
                  AbsoluteThickness[0.2], 
                  GrayLevel[0.4]], {
                  Directive[
                   Opacity[1], 
                   Directive[
                    GrayLevel[0], 12]]}, StripOnInput -> False]}, {}}, {
               Directive[
                Opacity[1], 
                Directive[
                 GrayLevel[0], 12]]}, StripOnInput -> False], "GraphicsLabel",
              StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
           False], 
          Directive[
           AbsoluteThickness[0.2], 
           Opacity[0.3], 
           GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
       Scaled[0.02], PlotRange -> All, Frame -> True, 
       FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
       Opacity[0], FrameTicksStyle -> Opacity[0], 
       ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> Left, 
      AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
      ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
     False], {
     Directive[
      GrayLevel[0], 12], FontFamily -> "Arial"}, Background -> Automatic, 
    StripOnInput -> False]},
  "BarLegend",
  DisplayFunction->(#& ),
  InterpretationFunction:>(RowBox[{"BarLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{
             RowBox[{"Blend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2081, 0.1663, 0.5292], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13873333333333335`, 0.11086666666666667`, 0.3528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2081`", ",", "0.1663`", ",", "0.5292`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2081, 0.1663, 0.5292]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2081, 0.1663, 0.5292], Editable -> False, 
                    Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2116238095, 0.1897809524, 0.5776761905], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.14108253966666667`, 0.12652063493333335`, 
                    0.38511746033333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2116238095`", ",", "0.1897809524`", ",", 
                    "0.5776761905`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2116238095, 0.1897809524, 0.5776761905]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2116238095, 0.1897809524, 0.5776761905], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.212252381, 0.2137714286, 0.6269714286], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.14150158733333335`, 0.14251428573333336`, 0.4179809524],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.212252381`", ",", "0.2137714286`", ",", 
                    "0.6269714286`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.212252381, 0.2137714286, 0.6269714286]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.212252381, 0.2137714286, 0.6269714286], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2081, 0.2386, 0.6770857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.13873333333333335`, 0.1590666666666667, 0.4513904762], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.2081`", ",", "0.2386`", ",", "0.6770857143`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2081, 0.2386, 0.6770857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2081, 0.2386, 0.6770857143], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1959047619, 0.2644571429, 0.7279], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1306031746, 0.17630476193333333`, 0.4852666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1959047619`", ",", "0.2644571429`", ",", "0.7279`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1959047619, 0.2644571429, 0.7279]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1959047619, 0.2644571429, 0.7279], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1707285714, 0.2919380952, 0.779247619], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1138190476, 0.19462539680000002`, 0.5194984126666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1707285714`", ",", "0.2919380952`", ",", 
                    "0.779247619`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1707285714, 0.2919380952, 0.779247619]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1707285714, 0.2919380952, 0.779247619], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1252714286, 0.3242428571, 0.8302714286], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08351428573333335, 0.21616190473333335`, 
                    0.5535142857333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1252714286`", ",", "0.3242428571`", ",", 
                    "0.8302714286`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1252714286, 0.3242428571, 0.8302714286]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1252714286, 0.3242428571, 0.8302714286], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0591333333, 0.3598333333, 0.8683333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0394222222, 0.23988888886666668`, 0.5788888888666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0591333333`", ",", "0.3598333333`", ",", 
                    "0.8683333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0591333333, 0.3598333333, 0.8683333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0591333333, 0.3598333333, 0.8683333333], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0116952381, 0.3875095238, 0.8819571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0077968254, 0.25833968253333334`, 0.5879714286000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0116952381`", ",", "0.3875095238`", ",", 
                    "0.8819571429`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0116952381, 0.3875095238, 0.8819571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0116952381, 0.3875095238, 0.8819571429], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0059571429, 0.4086142857, 0.8828428571], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0039714286, 0.27240952380000005`, 0.5885619047333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0059571429`", ",", "0.4086142857`", ",", 
                    "0.8828428571`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0059571429, 0.4086142857, 0.8828428571]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0059571429, 0.4086142857, 0.8828428571], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0165142857, 0.4266, 0.8786333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.0110095238, 0.2844, 0.5857555555333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0165142857`", ",", "0.4266`", ",", "0.8786333333`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0165142857, 0.4266, 0.8786333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0165142857, 0.4266, 0.8786333333], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.032852381, 0.4430428571, 0.8719571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.021901587333333333`, 0.29536190473333335`, 
                    0.5813047619333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.032852381`", ",", "0.4430428571`", ",", 
                    "0.8719571429`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.032852381, 0.4430428571, 0.8719571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.032852381, 0.4430428571, 0.8719571429], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0498142857, 0.4585714286, 0.8640571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0332095238, 0.30571428573333337`, 0.5760380952666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0498142857`", ",", "0.4585714286`", ",", 
                    "0.8640571429`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0498142857, 0.4585714286, 0.8640571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0498142857, 0.4585714286, 0.8640571429], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0629333333, 0.4736904762, 0.8554380952], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.04195555553333334, 0.3157936508, 0.5702920634666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0629333333`", ",", "0.4736904762`", ",", 
                    "0.8554380952`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0629333333, 0.4736904762, 0.8554380952]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0629333333, 0.4736904762, 0.8554380952], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0722666667, 0.4886666667, 0.8467], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.0481777778, 0.3257777778, 0.5644666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0722666667`", ",", "0.4886666667`", ",", "0.8467`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0722666667, 0.4886666667, 0.8467]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0722666667, 0.4886666667, 0.8467], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0779428571, 0.5039857143, 0.8383714286], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.051961904733333335`, 0.33599047620000005`, 
                    0.5589142857333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0779428571`", ",", "0.5039857143`", ",", 
                    "0.8383714286`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0779428571, 0.5039857143, 0.8383714286]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0779428571, 0.5039857143, 0.8383714286], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.079347619, 0.5200238095, 0.8311809524], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.052898412666666665`, 0.34668253966666673`, 
                    0.5541206349333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.079347619`", ",", "0.5200238095`", ",", 
                    "0.8311809524`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.079347619, 0.5200238095, 0.8311809524]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.079347619, 0.5200238095, 0.8311809524], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0749428571, 0.5375428571, 0.8262714286], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.04996190473333333, 0.3583619047333334, 
                    0.5508476190666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0749428571`", ",", "0.5375428571`", ",", 
                    "0.8262714286`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0749428571, 0.5375428571, 0.8262714286]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0749428571, 0.5375428571, 0.8262714286], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0640571429, 0.5569857143, 0.8239571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.042704761933333335`, 0.3713238095333333, 
                    0.5493047619333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0640571429`", ",", "0.5569857143`", ",", 
                    "0.8239571429`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0640571429, 0.5569857143, 0.8239571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0640571429, 0.5569857143, 0.8239571429], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0487714286, 0.5772238095, 0.8228285714], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.032514285733333335`, 0.384815873, 0.5485523809333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0487714286`", ",", "0.5772238095`", ",", 
                    "0.8228285714`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0487714286, 0.5772238095, 0.8228285714]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0487714286, 0.5772238095, 0.8228285714], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0343428571, 0.5965809524, 0.819852381], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.022895238066666667`, 0.3977206349333333, 
                    0.5465682540000001], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0343428571`", ",", "0.5965809524`", ",", 
                    "0.819852381`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0343428571, 0.5965809524, 0.819852381]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0343428571, 0.5965809524, 0.819852381], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0265, 0.6137, 0.8135], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.017666666666666667`, 0.40913333333333335`, 
                    0.5423333333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.0265`", ",", "0.6137`", ",", "0.8135`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0265, 0.6137, 0.8135]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0265, 0.6137, 0.8135], Editable -> False, 
                    Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0238904762, 0.6286619048, 0.8037619048], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.015926984133333336`, 0.41910793653333334`, 
                    0.5358412698666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0238904762`", ",", "0.6286619048`", ",", 
                    "0.8037619048`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0238904762, 0.6286619048, 0.8037619048]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0238904762, 0.6286619048, 0.8037619048], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0230904762, 0.6417857143, 0.7912666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.015393650800000002`, 0.42785714286666665`, 
                    0.5275111111333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0230904762`", ",", "0.6417857143`", ",", 
                    "0.7912666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0230904762, 0.6417857143, 0.7912666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0230904762, 0.6417857143, 0.7912666667], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0227714286, 0.6534857143, 0.7767571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.015180952400000001`, 0.4356571428666667, 
                    0.5178380952666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0227714286`", ",", "0.6534857143`", ",", 
                    "0.7767571429`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0227714286, 0.6534857143, 0.7767571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0227714286, 0.6534857143, 0.7767571429], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0266619048, 0.6641952381, 0.7607190476], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.017774603200000003`, 0.44279682540000004`, 
                    0.5071460317333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0266619048`", ",", "0.6641952381`", ",", 
                    "0.7607190476`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0266619048, 0.6641952381, 0.7607190476]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0266619048, 0.6641952381, 0.7607190476], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0383714286, 0.6742714286, 0.743552381], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.025580952400000002`, 0.44951428573333335`, 
                    0.49570158733333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0383714286`", ",", "0.6742714286`", ",", 
                    "0.743552381`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0383714286, 0.6742714286, 0.743552381]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0383714286, 0.6742714286, 0.743552381], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0589714286, 0.6837571429, 0.7253857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.039314285733333336`, 0.4558380952666667, 0.4835904762], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0589714286`", ",", "0.6837571429`", ",", 
                    "0.7253857143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0589714286, 0.6837571429, 0.7253857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0589714286, 0.6837571429, 0.7253857143], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.0843, 0.6928333333, 0.7061666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.0562, 0.4618888888666667, 0.47077777779999996`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.0843`", ",", "0.6928333333`", ",", "0.7061666667`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.0843, 0.6928333333, 0.7061666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.0843, 0.6928333333, 0.7061666667], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1132952381, 0.7015, 0.6858571429], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.07553015873333334, 0.4676666666666667, 
                    0.4572380952666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1132952381`", ",", "0.7015`", ",", "0.6858571429`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1132952381, 0.7015, 0.6858571429]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1132952381, 0.7015, 0.6858571429], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1452714286, 0.7097571429, 0.6646285714], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.09684761906666667, 0.47317142860000005`, 
                    0.44308571426666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1452714286`", ",", "0.7097571429`", ",", 
                    "0.6646285714`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1452714286, 0.7097571429, 0.6646285714]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1452714286, 0.7097571429, 0.6646285714], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.1801333333, 0.7176571429, 0.6424333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.12008888886666667`, 0.4784380952666667, 
                    0.42828888886666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.1801333333`", ",", "0.7176571429`", ",", 
                    "0.6424333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1801333333, 0.7176571429, 0.6424333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1801333333, 0.7176571429, 0.6424333333], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2178285714, 0.7250428571, 0.6192619048], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1452190476, 0.4833619047333334, 0.4128412698666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2178285714`", ",", "0.7250428571`", ",", 
                    "0.6192619048`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2178285714, 0.7250428571, 0.6192619048]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2178285714, 0.7250428571, 0.6192619048], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2586428571, 0.7317142857, 0.5954285714], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.1724285714, 0.4878095238, 0.3969523809333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2586428571`", ",", "0.7317142857`", ",", 
                    "0.5954285714`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2586428571, 0.7317142857, 0.5954285714]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2586428571, 0.7317142857, 0.5954285714], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3021714286, 0.7376047619, 0.5711857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2014476190666667, 0.49173650793333334`, 0.3807904762], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3021714286`", ",", "0.7376047619`", ",", 
                    "0.5711857143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3021714286, 0.7376047619, 0.5711857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3021714286, 0.7376047619, 0.5711857143], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3481666667, 0.7424333333, 0.5472666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.23211111113333335`, 0.49495555553333337`, 
                    0.3648444444666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3481666667`", ",", "0.7424333333`", ",", 
                    "0.5472666667`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3481666667, 0.7424333333, 0.5472666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3481666667, 0.7424333333, 0.5472666667], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3952571429, 0.7459, 0.5244428571], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2635047619333334, 0.4972666666666667, 
                    0.34962857140000003`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3952571429`", ",", "0.7459`", ",", "0.5244428571`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3952571429, 0.7459, 0.5244428571]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3952571429, 0.7459, 0.5244428571], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4420095238, 0.7480809524, 0.5033142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2946730158666667, 0.4987206349333334, 
                    0.33554285713333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4420095238`", ",", "0.7480809524`", ",", 
                    "0.5033142857`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4420095238, 0.7480809524, 0.5033142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4420095238, 0.7480809524, 0.5033142857], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4871238095, 0.7490619048, 0.4839761905], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3247492063333334, 0.49937460320000004`, 
                    0.3226507936666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.4871238095`", ",", "0.7490619048`", ",", 
                    "0.4839761905`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4871238095, 0.7490619048, 0.4839761905]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4871238095, 0.7490619048, 0.4839761905], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5300285714, 0.7491142857, 0.4661142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3533523809333334, 0.49940952380000003`, 
                    0.3107428571333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5300285714`", ",", "0.7491142857`", ",", 
                    "0.4661142857`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5300285714, 0.7491142857, 0.4661142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5300285714, 0.7491142857, 0.4661142857], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5708571429, 0.7485190476, 0.4493904762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.38057142860000004`, 0.4990126984, 0.2995936508], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5708571429`", ",", "0.7485190476`", ",", 
                    "0.4493904762`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5708571429, 0.7485190476, 0.4493904762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5708571429, 0.7485190476, 0.4493904762], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.609852381, 0.7473142857, 0.4336857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4065682540000001, 0.49820952380000005`, 
                    0.2891238095333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.609852381`", ",", "0.7473142857`", ",", 
                    "0.4336857143`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.609852381, 0.7473142857, 0.4336857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.609852381, 0.7473142857, 0.4336857143], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6473, 0.7456, 0.4188], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4315333333333333, 0.4970666666666667, 0.2792], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6473`", ",", "0.7456`", ",", "0.4188`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6473, 0.7456, 0.4188]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6473, 0.7456, 0.4188], Editable -> False, 
                    Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6834190476, 0.7434761905, 0.4044333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.45561269840000007`, 0.4956507936666667, 0.2696222222], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6834190476`", ",", "0.7434761905`", ",", 
                    "0.4044333333`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6834190476, 0.7434761905, 0.4044333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6834190476, 0.7434761905, 0.4044333333], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7184095238, 0.7411333333, 0.3904761905], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.47893968253333336`, 0.4940888888666667, 
                    0.26031746033333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7184095238`", ",", "0.7411333333`", ",", 
                    "0.3904761905`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7184095238, 0.7411333333, 0.3904761905]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7184095238, 0.7411333333, 0.3904761905], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7524857143, 0.7384, 0.3768142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5016571428666667, 0.49226666666666663`, 0.2512095238], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7524857143`", ",", "0.7384`", ",", "0.3768142857`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7524857143, 0.7384, 0.3768142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7524857143, 0.7384, 0.3768142857], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7858428571, 0.7355666667, 0.3632714286], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5238952380666667, 0.4903777778, 0.2421809524], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7858428571`", ",", "0.7355666667`", ",", 
                    "0.3632714286`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7858428571, 0.7355666667, 0.3632714286]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7858428571, 0.7355666667, 0.3632714286], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8185047619, 0.7327333333, 0.3497904762], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5456698412666667, 0.4884888888666667, 
                    0.23319365079999999`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8185047619`", ",", "0.7327333333`", ",", 
                    "0.3497904762`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8185047619, 0.7327333333, 0.3497904762]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8185047619, 0.7327333333, 0.3497904762], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8506571429, 0.7299, 0.3360285714], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5671047619333334, 0.48660000000000003`, 0.2240190476], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8506571429`", ",", "0.7299`", ",", "0.3360285714`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8506571429, 0.7299, 0.3360285714]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8506571429, 0.7299, 0.3360285714], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8824333333, 0.7274333333, 0.3217], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5882888888666666, 0.48495555553333336`, 
                    0.21446666666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8824333333`", ",", "0.7274333333`", ",", "0.3217`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8824333333, 0.7274333333, 0.3217]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8824333333, 0.7274333333, 0.3217], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9139333333, 0.7257857143, 0.3062761905], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6092888888666668, 0.4838571428666667, 0.204184127], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9139333333`", ",", "0.7257857143`", ",", 
                    "0.3062761905`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9139333333, 0.7257857143, 0.3062761905]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9139333333, 0.7257857143, 0.3062761905], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9449571429, 0.7261142857, 0.2886428571], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6299714286, 0.4840761904666667, 0.1924285714], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9449571429`", ",", "0.7261142857`", ",", 
                    "0.2886428571`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9449571429, 0.7261142857, 0.2886428571]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9449571429, 0.7261142857, 0.2886428571], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9738952381, 0.7313952381, 0.266647619], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6492634920666667, 0.4875968254, 0.17776507933333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9738952381`", ",", "0.7313952381`", ",", 
                    "0.266647619`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9738952381, 0.7313952381, 0.266647619]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9738952381, 0.7313952381, 0.266647619], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9937714286, 0.7454571429, 0.240347619], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6625142857333334, 0.4969714286, 0.160231746], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9937714286`", ",", "0.7454571429`", ",", 
                    "0.240347619`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9937714286, 0.7454571429, 0.240347619]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9937714286, 0.7454571429, 0.240347619], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9990428571, 0.7653142857, 0.2164142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6660285714, 0.5102095238000001, 0.14427619046666668`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9990428571`", ",", "0.7653142857`", ",", 
                    "0.2164142857`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9990428571, 0.7653142857, 0.2164142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9990428571, 0.7653142857, 0.2164142857], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9955333333, 0.7860571429, 0.196652381], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6636888888666668, 0.5240380952666667, 
                    0.13110158733333332`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9955333333`", ",", "0.7860571429`", ",", 
                    "0.196652381`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9955333333, 0.7860571429, 0.196652381]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9955333333, 0.7860571429, 0.196652381], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988, 0.8066, 0.1793666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6586666666666667, 0.5377333333333334, 0.1195777778], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.988`", ",", "0.8066`", ",", "0.1793666667`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988, 0.8066, 0.1793666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988, 0.8066, 0.1793666667], Editable -> False, 
                    Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9788571429, 0.8271428571, 0.1633142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6525714286000001, 0.5514285714, 0.10887619046666668`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9788571429`", ",", "0.8271428571`", ",", 
                    "0.1633142857`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9788571429, 0.8271428571, 0.1633142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9788571429, 0.8271428571, 0.1633142857], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9697, 0.8481380952, 0.147452381], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6464666666666667, 0.5654253968, 0.09830158733333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9697`", ",", "0.8481380952`", ",", "0.147452381`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9697, 0.8481380952, 0.147452381]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9697, 0.8481380952, 0.147452381], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9625857143, 0.8705142857, 0.1309], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6417238095333333, 0.5803428571333333, 
                    0.08726666666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9625857143`", ",", "0.8705142857`", ",", "0.1309`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9625857143, 0.8705142857, 0.1309]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9625857143, 0.8705142857, 0.1309], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9588714286, 0.8949, 0.1132428571], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6392476190666667, 0.5966, 0.07549523806666666],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9588714286`", ",", "0.8949`", ",", "0.1132428571`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9588714286, 0.8949, 0.1132428571]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9588714286, 0.8949, 0.1132428571], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9598238095, 0.9218333333, 0.0948380952], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6398825396666667, 0.6145555555333333, 0.0632253968], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9598238095`", ",", "0.9218333333`", ",", 
                    "0.0948380952`"}], "]"}], NumberMarks -> False]], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9598238095, 0.9218333333, 0.0948380952]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9598238095, 0.9218333333, 0.0948380952], 
                    Editable -> False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9661, 0.9514428571, 0.0755333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6440666666666667, 0.6342952380666667, 
                    0.05035555553333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9661`", ",", "0.9514428571`", ",", "0.0755333333`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9661, 0.9514428571, 0.0755333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9661, 0.9514428571, 0.0755333333], Editable -> 
                    False, Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9763, 0.9831, 0.0538], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6508666666666667, 0.6554, 0.03586666666666667],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9763`", ",", "0.9831`", ",", "0.0538`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9763, 0.9831, 0.0538]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9763, 0.9831, 0.0538], Editable -> False, 
                    Selectable -> False]}], "}"}], ",", "#1"}], "]"}], "&"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{"1", ",", "1000"}], "}"}]}], "}"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False], ",", 
             "12"}], "]"}]}], ",", 
       RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
       RowBox[{"Ticks", "\[Rule]", 
         RowBox[{"{", 
           RowBox[{"1", ",", "500", ",", "1000"}], "}"}]}]}], 
     "]"}]& )]], "Output",
 CellChangeTimes->{{3.7580230731142273`*^9, 3.7580230793325677`*^9}, 
   3.7580251102583723`*^9, 3.763393345669622*^9, 3.77437195905017*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"bb591287-9908-4d78-8fd4-9e3373ac44f2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<fig4B_trajectoryColorBar.svg\>\"", ",", "%"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7579583440588512`*^9, 3.757958369341662*^9}, {
  3.7580226039811444`*^9, 3.7580226072460384`*^9}, {3.7580230597232375`*^9, 
  3.7580230823162317`*^9}, {3.7743719256055937`*^9, 3.774371937962182*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"2556c15d-a294-45cb-bd8d-d50d6e920892"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1260, 624},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 257, 4, 67, "Chapter",ExpressionUUID->"4405b5b7-517a-4441-a0e2-326e3e9c3fb1"],
Cell[840, 28, 550, 9, 34, "Text",ExpressionUUID->"cc925d2f-bfcb-4544-b8cb-720cd6781357"],
Cell[1393, 39, 7685, 109, 86, "Input",ExpressionUUID->"1207e16d-fe65-432b-b908-cebdaa76fa37"],
Cell[CellGroupData[{
Cell[9103, 152, 155, 3, 53, "Subsection",ExpressionUUID->"2227cf08-9eab-4744-9711-6305ca33d733"],
Cell[9261, 157, 17542, 436, 827, "Input",ExpressionUUID->"e4891087-d4a7-4114-ad8a-cdee469f93ac"]
}, Closed]],
Cell[CellGroupData[{
Cell[26840, 598, 270, 4, 37, "Subsection",ExpressionUUID->"d6ebf84f-0fe1-49cf-b492-4feee81b2620"],
Cell[27113, 604, 22778, 316, 86, "Input",ExpressionUUID->"73435eb7-54e0-4b19-8c5e-39c9e5291f4a"]
}, Closed]],
Cell[CellGroupData[{
Cell[49928, 925, 168, 3, 37, "Subsection",ExpressionUUID->"1200a26f-89f9-417f-9907-c571605ef586"],
Cell[50099, 930, 17639, 248, 105, "Input",ExpressionUUID->"40f46580-0e88-459e-aa6a-7b279a6d3963"],
Cell[67741, 1180, 2273, 44, 67, "Input",ExpressionUUID->"a3768f65-c0ea-458b-a697-7759385ae123"],
Cell[70017, 1226, 1036, 30, 67, "Input",ExpressionUUID->"41987a5b-168f-4331-9760-f782a385538c"],
Cell[71056, 1258, 1652, 24, 48, "Input",ExpressionUUID->"fbcc40e9-67f8-44a8-89b0-3d13e163f83b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72745, 1287, 236, 4, 53, "Subsection",ExpressionUUID->"e990d96f-e4fe-4734-ac1f-01616c4e8497"],
Cell[72984, 1293, 7052, 136, 238, "Input",ExpressionUUID->"c37157d8-1802-4a94-80d1-4ef55bbfc7eb"],
Cell[80039, 1431, 11880, 190, 181, "Input",ExpressionUUID->"073b1b23-f99a-4563-b171-4050a2499bf0"],
Cell[91922, 1623, 1306, 30, 124, "Input",ExpressionUUID->"a6ff3186-c79c-423d-af4d-515b563fa15a"],
Cell[93231, 1655, 1991, 48, 200, "Input",ExpressionUUID->"de874ba0-4ce1-45d8-97d7-815e4668766b"],
Cell[95225, 1705, 3678, 85, 352, "Input",ExpressionUUID->"72baf970-ba3b-4fc9-b981-39cb6f01416d"]
}, Closed]],
Cell[CellGroupData[{
Cell[98940, 1795, 474, 12, 37, "Subsection",ExpressionUUID->"15b4091c-fcef-4307-bb5c-c1b34ac23bab"],
Cell[99417, 1809, 21564, 297, 28, "Input",ExpressionUUID->"556f8bca-0d77-45b9-9642-83bb7e0c7271"],
Cell[120984, 2108, 2649, 50, 28, "Input",ExpressionUUID->"098f55e8-87f9-46ca-bdeb-e23e8f47aca8"],
Cell[CellGroupData[{
Cell[123658, 2162, 1504, 37, 48, "Input",ExpressionUUID->"20716cc6-5dd5-4732-aefe-64814640c22d"],
Cell[125165, 2201, 161054, 2711, 246, "Output",ExpressionUUID->"958a9a08-78e5-48bc-a322-cf601b98c118"]
}, Open  ]],
Cell[286234, 4915, 277, 5, 28, "Input",ExpressionUUID->"e4d16522-add3-406d-a768-336492f62e87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286548, 4925, 380, 6, 53, "Subsection",ExpressionUUID->"5079fdf1-8d0f-4eff-92f1-441c55b32384"],
Cell[286931, 4933, 779, 16, 48, "Input",ExpressionUUID->"ee13b02d-d2fc-4746-ab45-e78ffb3fc3d9"],
Cell[287713, 4951, 22960, 326, 124, "Input",ExpressionUUID->"3379d519-06a7-4bf9-a9d8-5acd0ccaabef"],
Cell[310676, 5279, 4346, 78, 124, "Input",ExpressionUUID->"4693608b-2a88-4a8c-9dff-df08db808d98"]
}, Closed]],
Cell[CellGroupData[{
Cell[315059, 5362, 172, 3, 37, "Subsection",ExpressionUUID->"cb1428f0-906a-48b3-9772-4145d80b40b7"],
Cell[315234, 5367, 2077, 64, 124, "Input",ExpressionUUID->"cca13060-c0b0-4c50-8ba3-1e60e8931c0b"],
Cell[317314, 5433, 379, 7, 28, "Input",ExpressionUUID->"25c3663a-fb4d-4864-9ac4-e5a637a28f09"],
Cell[CellGroupData[{
Cell[317718, 5444, 2842, 68, 67, "Input",ExpressionUUID->"dd8acf1e-bae9-412e-b718-73b454ef1e89"],
Cell[320563, 5514, 4071, 60, 70, "Message",ExpressionUUID->"3b374e4f-23de-4ed5-b203-28cf08f2b87e"],
Cell[324637, 5576, 3980, 59, 70, "Message",ExpressionUUID->"1916f7d3-2eb4-493f-9308-b5a51a71b935"],
Cell[328620, 5637, 4557, 80, 70, "Output",ExpressionUUID->"e1353f72-9332-4dba-9b09-0abe4bbe8d06"]
}, Open  ]],
Cell[333192, 5720, 524, 12, 28, "Input",ExpressionUUID->"23c82447-d4dd-44d2-8bdb-cb89de92b8a4"],
Cell[CellGroupData[{
Cell[333741, 5736, 488, 12, 28, "Input",ExpressionUUID->"8429b284-72fe-4cd2-b030-9db5af07a6fc"],
Cell[334232, 5750, 3042, 42, 70, "Output",ExpressionUUID->"85da20ee-812a-450a-a7bb-53d05995e124"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[337323, 5798, 240, 4, 37, "Subsection",ExpressionUUID->"beefca68-809f-4879-8db3-852c62bf4050"],
Cell[337566, 5804, 686, 18, 86, "Input",ExpressionUUID->"c9b895cf-041c-481b-b070-d00cd5b05d9e"],
Cell[CellGroupData[{
Cell[338277, 5826, 3750, 93, 105, "Input",ExpressionUUID->"7b952499-7532-4b03-bd82-6acebcdbde7b"],
Cell[342030, 5921, 126719, 2081, 330, "Output",ExpressionUUID->"af07d87c-0762-43a6-bb49-dd7715f322ff"]
}, Open  ]],
Cell[468764, 8005, 718, 12, 28, "Input",ExpressionUUID->"2c35fbd6-0052-4b2f-9626-33c3e8d3e8ff"],
Cell[CellGroupData[{
Cell[469507, 8021, 885, 19, 28, "Input",ExpressionUUID->"14874ee0-b17b-4cbd-9ed5-33e9857cc04b"],
Cell[470395, 8042, 167550, 3143, 254, "Output",ExpressionUUID->"bb591287-9908-4d78-8fd4-9e3373ac44f2"]
}, Open  ]],
Cell[637960, 11188, 440, 8, 28, "Input",ExpressionUUID->"2556c15d-a294-45cb-bd8d-d50d6e920892"]
}, Open  ]]
}, Open  ]]
}
]
*)

